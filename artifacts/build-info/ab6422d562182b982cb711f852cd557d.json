{"id":"ab6422d562182b982cb711f852cd557d","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"src/L9-Excercise/AIAgentShareToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity 0.8.28;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\ncontract AIAgentShare is ERC20, Ownable, EIP712 {\r\n    event Purchase(address indexed buyer);\r\n    event DelegatedPurchase(address indexed authorizer, address indexed target);\r\n    event FundingRoundFinilized();\r\n\r\n    error InvalidAddress();\r\n    error InvalidAmount();\r\n    error InvalidSignature();\r\n    error UserNotWhitelisted();\r\n    error InsufficientFundingBalance();\r\n    error InsufficientFunds();\r\n    error FundingRoundNotExpired();\r\n    error FundingRoundAlreadyFinilized();\r\n    error RelayerOnlyAccess();\r\n    error InvalidParticipantIndex();\r\n    error HasClaimedTokens();\r\n\r\n    bytes32 public constant DELEGATE_PURCHASE_TYPE_HASH =\r\n        keccak256(\r\n            \"DelegatePurchase(address authorizer,address target,uint256 amount,uint256 validAfter,uint256 expiration,bytes32 nonce)\"\r\n        );\r\n    uint256 public constant MIN_BUY_AMOUNT = 100 * 10 ** 18 - 1; // 100 tokens\r\n    uint256 public constant MAX_BUY_AMOUNT = 50_000 * 10 ** 18 + 1; // 50k tokens\r\n    uint256 public constant PRICE_PER_TOKEN = 0.1 ether; // 0.01 ether per token\r\n    uint256 public constant RELAYER_REWARD = 5 * 10 ** 18; // 5 tokens\r\n    uint256 public constant TOTAL_PARTICIPANTS = 300;\r\n\r\n    bytes32 public immutable whitelisteParticipantsHash;\r\n    uint256 public immutable expirationDate;\r\n    address public immutable relayer;\r\n\r\n    uint256 public fundingAmount;\r\n    bool public hasBeenFinalized;\r\n\r\n    uint256[2] public whitelistClaimTracker; // must know whitelist size\r\n\r\n    modifier onlyRelayer() {\r\n        require(msg.sender == relayer, RelayerOnlyAccess());\r\n        _;\r\n    }\r\n\r\n    modifier validateAddress(address target) {\r\n        require(target != address(0), InvalidAddress());\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address initialOwner,\r\n        uint256 _fundingAmount,\r\n        address _relayer,\r\n        bytes32 _whitelistHash,\r\n        uint256 _expirationDate\r\n    )\r\n        validateAddress(initialOwner)\r\n        ERC20(\"AIAgentShare \", \"AIS\")\r\n        Ownable(initialOwner)\r\n        EIP712(\"AI Agent Share\", \"1\")\r\n    {\r\n        fundingAmount = _fundingAmount;\r\n        relayer = _relayer;\r\n        whitelisteParticipantsHash = _whitelistHash;\r\n        expirationDate = _expirationDate;\r\n\r\n        _mint(initialOwner, fundingAmount);\r\n    }\r\n\r\n    // MARK: - Internal functions\r\n    function _validateSignature(\r\n        bytes32 typeHash,\r\n        address authorizer,\r\n        address target,\r\n        uint256 amount,\r\n        uint256 validAfter,\r\n        uint256 expiration,\r\n        bytes32 nonce,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal virtual {\r\n        bytes32 digest = _hashTypedDataV4(\r\n            keccak256(\r\n                abi.encode(\r\n                    typeHash,\r\n                    authorizer,\r\n                    target,\r\n                    amount,\r\n                    validAfter,\r\n                    expiration,\r\n                    nonce\r\n                )\r\n            )\r\n        );\r\n\r\n        address signer = ECDSA.recover(digest, v, r, s);\r\n        require(signer == authorizer, InvalidSignature());\r\n    }\r\n\r\n    function _validateParticipant(\r\n        uint256 userID,\r\n        address target,\r\n        uint256 amount,\r\n        bytes32[] memory proof\r\n    ) internal view virtual returns (bool) {\r\n        bytes32 leaf = keccak256(\r\n            bytes.concat(keccak256(abi.encode(userID, target, amount)))\r\n        );\r\n        return MerkleProof.verify(proof, whitelisteParticipantsHash, leaf);\r\n    }\r\n\r\n    function _createClaimBitMaskData(\r\n        uint256 userID\r\n    ) internal pure returns (uint256, uint256) {\r\n        require(userID < TOTAL_PARTICIPANTS, InvalidParticipantIndex());\r\n\r\n        uint8 bitsCount = 255;\r\n        uint256 index = userID / bitsCount;\r\n\r\n        uint256 bitIndex = userID % bitsCount;\r\n        uint256 mask = 1 << bitIndex;\r\n\r\n        return (index, mask);\r\n    }\r\n\r\n    function _updateClaimStatus(uint256 userID) internal {\r\n        (uint256 index, uint256 mask) = _createClaimBitMaskData(userID);\r\n\r\n        whitelistClaimTracker[index] |= mask;\r\n    }\r\n\r\n    function _purchase(\r\n        uint256 userID,\r\n        address recepient,\r\n        uint256 authorizedAmount,\r\n        uint256 amountToPurchase,\r\n        bytes32[] memory proof\r\n    ) internal virtual {\r\n        require(hasClaimedTokens(userID) == false, HasClaimedTokens());\r\n        _updateClaimStatus(userID);\r\n\r\n        require(\r\n            _validateParticipant(userID, recepient, authorizedAmount, proof),\r\n            UserNotWhitelisted()\r\n        );\r\n\r\n        require(\r\n            fundingAmount + 1 > authorizedAmount,\r\n            InsufficientFundingBalance()\r\n        );\r\n\r\n        require(\r\n            authorizedAmount > MIN_BUY_AMOUNT &&\r\n                authorizedAmount < MAX_BUY_AMOUNT,\r\n            InvalidAmount()\r\n        );\r\n\r\n        uint256 totalCost = (authorizedAmount * PRICE_PER_TOKEN) /\r\n            10 ** decimals();\r\n        require(msg.value == totalCost, InsufficientFunds());\r\n\r\n        unchecked {\r\n            fundingAmount -= authorizedAmount;\r\n        }\r\n\r\n        _mint(recepient, amountToPurchase);\r\n    }\r\n\r\n    // MARK: - Public functions\r\n    function hasClaimedTokens(uint256 userID) public view returns (bool) {\r\n        (uint256 index, uint256 mask) = _createClaimBitMaskData(userID);\r\n\r\n        return (whitelistClaimTracker[index] & mask) != 0;\r\n    }\r\n\r\n    function purchase(\r\n        uint256 userID,\r\n        uint256 amount,\r\n        bytes32[] memory proof\r\n    ) public payable {\r\n        _purchase(userID, msg.sender, amount, amount, proof);\r\n        emit Purchase(msg.sender);\r\n    }\r\n\r\n    function delegatePurchase(\r\n        uint256 userID,\r\n        address authorizer,\r\n        address target,\r\n        uint256 amount,\r\n        uint256 validAfter,\r\n        uint256 expiration,\r\n        bytes32 nonce,\r\n        bytes32[] memory proof,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable onlyRelayer {\r\n        _validateSignature(\r\n            DELEGATE_PURCHASE_TYPE_HASH,\r\n            authorizer,\r\n            target,\r\n            amount,\r\n            validAfter,\r\n            expiration,\r\n            nonce,\r\n            v,\r\n            r,\r\n            s\r\n        );\r\n\r\n        _purchase(userID, authorizer, amount, amount - RELAYER_REWARD, proof);\r\n\r\n        if (RELAYER_REWARD > 0) {\r\n            _mint(msg.sender, RELAYER_REWARD);\r\n        }\r\n\r\n        emit DelegatedPurchase(authorizer, target);\r\n    }\r\n\r\n    function finalizeFundingRound() external onlyOwner {\r\n        require(hasBeenFinalized == false, FundingRoundAlreadyFinilized());\r\n        hasBeenFinalized = true;\r\n\r\n        // No Balance => we can finilize the funding round\r\n        // Remaining balance > 0 => we can finilize the funding round only if the funding round is expired\r\n        uint256 remainingBalance = fundingAmount;\r\n        if (remainingBalance > 0) {\r\n            require(expirationDate < block.timestamp, FundingRoundNotExpired());\r\n\r\n            fundingAmount = 0;\r\n            _mint(owner(), remainingBalance);\r\n        }\r\n\r\n        emit FundingRoundFinilized();\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"cancun","optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[958],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":959,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":958,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,958],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[958],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[928]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":929,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":959,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":958,"src":"1133:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1142:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"1150:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1166:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,928,902,958],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1638:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1648:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1656:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1648:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1671:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1681:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1671:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1425:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1608:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1594:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1615:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1638:0:3"},"scope":824,"src":"1582:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[915],"body":{"id":369,"nodeType":"Block","src":"1820:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1837:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"1830:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1701:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1773:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"1805:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:3"},"scope":824,"src":"1760:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[921],"body":{"id":378,"nodeType":"Block","src":"2024:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2034:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1855:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1977:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2009:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:3"},"scope":824,"src":"1962:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[927],"body":{"id":387,"nodeType":"Block","src":"2744:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"2754:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2061:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2705:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2737:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:3"},"scope":824,"src":"2688:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"2891:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2908:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"2901:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2776:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2850:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"2882:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:3"},"scope":824,"src":"2830:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3059:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3076:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3086:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3069:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2933:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3012:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3004:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3050:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:3"},"scope":824,"src":"2985:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3371:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3389:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3381:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"3397:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3436:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3419:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3419:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3456:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3107:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3322:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3314:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3334:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3326:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3365:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:3"},"scope":824,"src":"3296:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3621:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3638:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3650:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3657:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3631:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3480:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3559:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3551:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3574:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3566:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:3"},"scope":824,"src":"3532:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4058:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4076:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4068:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"4084:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4115:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4122:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4131:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4106:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4106:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4147:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3678:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4004:7:3","nodeType":"VariableDeclaration","scope":475,"src":"3996:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4021:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4013:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4052:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:3"},"scope":824,"src":"3979:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"4850:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"4868:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4860:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"4878:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4916:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4922:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4931:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4900:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"4900:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4957:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4963:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4967:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4947:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"4947:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"4983:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4171:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"4787:4:3","nodeType":"VariableDeclaration","scope":507,"src":"4779:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"4801:2:3","nodeType":"VariableDeclaration","scope":507,"src":"4793:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"4813:5:3","nodeType":"VariableDeclaration","scope":507,"src":"4805:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4844:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:3"},"scope":824,"src":"4757:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5443:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5457:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5453:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5477:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5498:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":529,"nodeType":"RevertStatement","src":"5491:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5552:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5548:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5570:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5591:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":544,"nodeType":"RevertStatement","src":"5584:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5651:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5657:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5661:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5643:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5643:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5007:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5401:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5393:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5415:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5407:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5427:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5419:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5443:0:3"},"scope":824,"src":"5374:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6064:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6078:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6252:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6266:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6288:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6298:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6321:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6335:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6317:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6342:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6392:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6398:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6411:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6367:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":589,"nodeType":"RevertStatement","src":"6360:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6445:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6552:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6562:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6570:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6584:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6552:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6074:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6098:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6214:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6230:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6214:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6628:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"6843:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"6857:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7002:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7012:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7019:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7002:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6624:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6646:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6660:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6791:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6807:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"6791:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7079:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7083:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7064:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7059:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5680:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6014:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6006:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6028:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6020:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6040:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6064:0:3"},"scope":824,"src":"5989:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7495:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7509:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7505:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7532:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7553:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":651,"nodeType":"RevertStatement","src":"7546:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7625:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7634:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7605:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7605:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7102:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7462:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7454:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7479:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7471:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7495:0:3"},"scope":824,"src":"7439:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8021:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8035:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8031:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8058:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8079:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":684,"nodeType":"RevertStatement","src":"8072:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8137:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8158:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8129:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8129:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7653:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"7988:7:3","nodeType":"VariableDeclaration","scope":697,"src":"7980:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8005:5:3","nodeType":"VariableDeclaration","scope":697,"src":"7997:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8021:0:3"},"scope":824,"src":"7965:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"8781:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8800:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"8807:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8816:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"8791:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"8791:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8177:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"8733:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8725:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"8748:7:3","nodeType":"VariableDeclaration","scope":715,"src":"8740:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"8765:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8757:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"8781:0:3"},"scope":824,"src":"8707:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"9780:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9794:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"9790:89:3","trueBody":{"id":740,"nodeType":"Block","src":"9815:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"9836:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":739,"nodeType":"RevertStatement","src":"9829:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9892:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"9888:90:3","trueBody":{"id":755,"nodeType":"Block","src":"9915:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"9936:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":754,"nodeType":"RevertStatement","src":"9929:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"9987:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9999:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10017:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"9987:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10036:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10032:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10047:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10075:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10082:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10091:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10066:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10061:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"8841:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9708:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9700:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9723:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9715:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"9740:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9732:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:3","nodeType":"VariableDeclaration","scope":775,"src":"9747:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"9780:0:3"},"scope":824,"src":"9682:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10485:387:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10495:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10532:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10539:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10522:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10561:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:3","memberName":"max","nodeType":"MemberAccess","src":"10580:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10557:309:3","trueBody":{"id":820,"nodeType":"Block","src":"10599:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10617:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10636:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10613:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10643:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10695:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10704:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10722:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10668:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":807,"nodeType":"RevertStatement","src":"10661:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"10756:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10793:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10800:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10809:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10828:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"10784:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10784:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10120:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10429:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10421:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10444:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10436:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10461:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10453:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10485:0:3"},"scope":824,"src":"10396:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1106:9768:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:10770:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":836,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":836,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":836,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":845,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":845,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":845,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":902,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":859,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":902,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":902,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":902,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":902,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":902,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"204:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[928]},"id":929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":929,"sourceUnit":903,"src":"151:37:5","symbolAliases":[{"foreign":{"id":905,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":908,"name":"IERC20","nameLocations":["306:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"306:6:5"},"id":909,"nodeType":"InheritanceSpecifier","src":"306:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"190:87:5","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":928,"linearizedBaseContracts":[928,902],"name":"IERC20Metadata","nameLocation":"288:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"319:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":915,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:5","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"391:2:5"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"417:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":912,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:5"},"scope":928,"src":"378:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"438:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"514:2:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"540:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":918,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:5"},"scope":928,"src":"499:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"561:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":927,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"648:2:5"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"674:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":924,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:5"},"scope":928,"src":"631:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":929,"src":"278:405:5","usedErrors":[],"usedEvents":[836,845]}],"src":"125:559:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[958]},"id":959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":930,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":958,"linearizedBaseContracts":[958],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":939,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":935,"id":938,"nodeType":"Return","src":"728:17:6"}]},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":958,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":945,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":944,"id":947,"nodeType":"Return","src":"835:15:6"}]},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":942,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":958,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":956,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":953,"id":955,"nodeType":"Return","src":"945:8:6"}]},"id":957,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":957,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":958,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":959,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1010]},"id":1011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":960,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"125:489:7","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1010,"linearizedBaseContracts":[1010],"name":"Panic","nameLocation":"665:5:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"677:36:7","text":"@dev generic / unspecified error"},"id":965,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:7","nodeType":"VariableDeclaration","scope":1010,"src":"718:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"764:37:7","text":"@dev used by the assert() builtin"},"id":969,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:7","nodeType":"VariableDeclaration","scope":1010,"src":"806:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"851:41:7","text":"@dev arithmetic underflow or overflow"},"id":973,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:7","nodeType":"VariableDeclaration","scope":1010,"src":"897:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:7","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"950:35:7","text":"@dev division or modulo by zero"},"id":977,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:7","nodeType":"VariableDeclaration","scope":1010,"src":"990:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"1045:30:7","text":"@dev enum conversion error"},"id":981,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:7","nodeType":"VariableDeclaration","scope":1010,"src":"1080:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:7","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"1140:36:7","text":"@dev invalid encoding in storage"},"id":985,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:7","nodeType":"VariableDeclaration","scope":1010,"src":"1181:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"1242:24:7","text":"@dev empty array pop"},"id":989,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:7","nodeType":"VariableDeclaration","scope":1010,"src":"1271:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"1325:35:7","text":"@dev array out of bounds access"},"id":993,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:7","nodeType":"VariableDeclaration","scope":1010,"src":"1365:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"1423:65:7","text":"@dev resource error (too large allocation or too large array)"},"id":997,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:7","nodeType":"VariableDeclaration","scope":1010,"src":"1493:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:7","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"1546:42:7","text":"@dev calling invalid internal function"},"id":1001,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:7","nodeType":"VariableDeclaration","scope":1010,"src":"1593:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:7","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1008,"nodeType":"Block","src":"1819:151:7","statements":[{"AST":{"nativeSrc":"1854:110:7","nodeType":"YulBlock","src":"1854:110:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:7","nodeType":"YulLiteral","src":"1875:4:7","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:7","nodeType":"YulLiteral","src":"1881:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:7","nodeType":"YulIdentifier","src":"1868:6:7"},"nativeSrc":"1868:24:7","nodeType":"YulFunctionCall","src":"1868:24:7"},"nativeSrc":"1868:24:7","nodeType":"YulExpressionStatement","src":"1868:24:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:7","nodeType":"YulLiteral","src":"1912:4:7","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:7","nodeType":"YulIdentifier","src":"1918:4:7"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:7","nodeType":"YulIdentifier","src":"1905:6:7"},"nativeSrc":"1905:18:7","nodeType":"YulFunctionCall","src":"1905:18:7"},"nativeSrc":"1905:18:7","nodeType":"YulExpressionStatement","src":"1905:18:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:7","nodeType":"YulLiteral","src":"1943:4:7","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:7","nodeType":"YulLiteral","src":"1949:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:7","nodeType":"YulIdentifier","src":"1936:6:7"},"nativeSrc":"1936:18:7","nodeType":"YulFunctionCall","src":"1936:18:7"},"nativeSrc":"1936:18:7","nodeType":"YulExpressionStatement","src":"1936:18:7"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1004,"isOffset":false,"isSlot":false,"src":"1918:4:7","valueSize":1}],"flags":["memory-safe"],"id":1007,"nodeType":"InlineAssembly","src":"1829:135:7"}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"1658:113:7","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1009,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:7","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"code","nameLocation":"1799:4:7","nodeType":"VariableDeclaration","scope":1009,"src":"1791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:7"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"1819:0:7"},"scope":1010,"src":"1776:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1011,"src":"657:1315:7","usedErrors":[],"usedEvents":[]}],"src":"99:1874:7"},"id":7},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1016],"ShortStrings":[1227],"StorageSlot":[1351]},"id":1228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1012,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1228,"sourceUnit":1352,"src":"132:46:8","symbolAliases":[{"foreign":{"id":1013,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"140:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1016,"name":"ShortString","nameLocation":"353:11:8","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:8","underlyingType":{"id":1015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"378:876:8","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1227,"linearizedBaseContracts":[1227],"name":"ShortStrings","nameLocation":"1263:12:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1020,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:8","nodeType":"VariableDeclaration","scope":1227,"src":"1345:111:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1024,"name":"StringTooLong","nameLocation":"1469:13:8","nodeType":"ErrorDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"str","nameLocation":"1490:3:8","nodeType":"VariableDeclaration","scope":1024,"src":"1483:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1021,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:8"},"src":"1463:32:8"},{"errorSelector":"b3512b0c","id":1026,"name":"InvalidShortString","nameLocation":"1506:18:8","nodeType":"ErrorDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"1524:2:8"},"src":"1500:27:8"},{"body":{"id":1069,"nodeType":"Block","src":"1786:208:8","statements":[{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:8","nodeType":"VariableDeclaration","scope":1069,"src":"1796:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1041,"initialValue":{"arguments":[{"id":1039,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"1822:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1037,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:8","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1042,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1840:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:8","memberName":"length","nodeType":"MemberAccess","src":"1840:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1051,"nodeType":"IfStatement","src":"1836:72:8","trueBody":{"id":1050,"nodeType":"Block","src":"1858:50:8","statements":[{"errorCall":{"arguments":[{"id":1047,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"1893:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1046,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1879:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1049,"nodeType":"RevertStatement","src":"1872:25:8"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1060,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1965:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:8","typeDescriptions":{}}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:8","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1063,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1974:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:8","memberName":"length","nodeType":"MemberAccess","src":"1974:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:8","typeDescriptions":{}}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1052,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"1924:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"type(ShortString)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"functionReturnParameters":1034,"id":1068,"nodeType":"Return","src":"1917:70:8"}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"1533:170:8","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1070,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:8","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"str","nameLocation":"1745:3:8","nodeType":"VariableDeclaration","scope":1070,"src":"1731:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1028,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:8"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1070,"src":"1773:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":1032,"nodeType":"UserDefinedTypeName","pathNode":{"id":1031,"name":"ShortString","nameLocations":["1773:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"1773:11:8"},"referencedDeclaration":1016,"src":"1773:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:8"},"scope":1227,"src":"1708:286:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"2152:304:8","statements":[{"assignments":[1080],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"len","nameLocation":"2170:3:8","nodeType":"VariableDeclaration","scope":1095,"src":"2162:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1084,"initialValue":{"arguments":[{"id":1082,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2187:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}],"id":1081,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2176:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1016_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:8"},{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"str","nameLocation":"2294:3:8","nodeType":"VariableDeclaration","scope":1095,"src":"2280:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1085,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"hexValue":"3332","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1087,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:8"},{"AST":{"nativeSrc":"2349:81:8","nodeType":"YulBlock","src":"2349:81:8","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:8","nodeType":"YulIdentifier","src":"2370:3:8"},{"name":"len","nativeSrc":"2375:3:8","nodeType":"YulIdentifier","src":"2375:3:8"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:8","nodeType":"YulIdentifier","src":"2363:6:8"},"nativeSrc":"2363:16:8","nodeType":"YulFunctionCall","src":"2363:16:8"},"nativeSrc":"2363:16:8","nodeType":"YulExpressionStatement","src":"2363:16:8"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:8","nodeType":"YulIdentifier","src":"2403:3:8"},{"kind":"number","nativeSrc":"2408:4:8","nodeType":"YulLiteral","src":"2408:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:8","nodeType":"YulIdentifier","src":"2399:3:8"},"nativeSrc":"2399:14:8","nodeType":"YulFunctionCall","src":"2399:14:8"},{"name":"sstr","nativeSrc":"2415:4:8","nodeType":"YulIdentifier","src":"2415:4:8"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:8","nodeType":"YulIdentifier","src":"2392:6:8"},"nativeSrc":"2392:28:8","nodeType":"YulFunctionCall","src":"2392:28:8"},"nativeSrc":"2392:28:8","nodeType":"YulExpressionStatement","src":"2392:28:8"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1080,"isOffset":false,"isSlot":false,"src":"2375:3:8","valueSize":1},{"declaration":1074,"isOffset":false,"isSlot":false,"src":"2415:4:8","valueSize":1},{"declaration":1086,"isOffset":false,"isSlot":false,"src":"2370:3:8","valueSize":1},{"declaration":1086,"isOffset":false,"isSlot":false,"src":"2403:3:8","valueSize":1}],"flags":["memory-safe"],"id":1092,"nodeType":"InlineAssembly","src":"2324:106:8"},{"expression":{"id":1093,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2446:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1078,"id":1094,"nodeType":"Return","src":"2439:10:8"}]},"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"2000:73:8","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:8","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:8","nodeType":"VariableDeclaration","scope":1096,"src":"2096:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":1073,"nodeType":"UserDefinedTypeName","pathNode":{"id":1072,"name":"ShortString","nameLocations":["2096:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"2096:11:8"},"referencedDeclaration":1016,"src":"2096:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:8"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"2137:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1076,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:8"},"scope":1227,"src":"2078:378:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"2598:175:8","statements":[{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"result","nameLocation":"2616:6:8","nodeType":"VariableDeclaration","scope":1127,"src":"2608:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1116,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1111,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"2652:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}],"expression":{"id":1109,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2633:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"type(ShortString)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1016_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:8","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2679:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1124,"nodeType":"IfStatement","src":"2675:69:8","trueBody":{"id":1123,"nodeType":"Block","src":"2692:52:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1120,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2713:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1122,"nodeType":"RevertStatement","src":"2706:27:8"}]}},{"expression":{"id":1125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2760:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1104,"id":1126,"nodeType":"Return","src":"2753:13:8"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"2462:61:8","text":" @dev Return the length of a `ShortString`."},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:8","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:8","nodeType":"VariableDeclaration","scope":1128,"src":"2548:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":1099,"nodeType":"UserDefinedTypeName","pathNode":{"id":1098,"name":"ShortString","nameLocations":["2548:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"2548:11:8"},"referencedDeclaration":1016,"src":"2548:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:8"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1128,"src":"2589:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:8"},"scope":1227,"src":"2528:245:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1167,"nodeType":"Block","src":"2996:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3016:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:8","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:8","memberName":"length","nodeType":"MemberAccess","src":"3010:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1165,"nodeType":"Block","src":"3094:127:8","statements":[{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1154,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"3134:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1151,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3108:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1351_$","typeString":"type(library StorageSlot)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:8","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"3108:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1248_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1248_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1247,"src":"3108:38:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3149:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1159,"nodeType":"ExpressionStatement","src":"3108:46:8"},{"expression":{"arguments":[{"id":1162,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"3192:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1160,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"3175:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"type(ShortString)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"functionReturnParameters":1138,"id":1164,"nodeType":"Return","src":"3168:42:8"}]},"id":1166,"nodeType":"IfStatement","src":"3006:215:8","trueBody":{"id":1150,"nodeType":"Block","src":"3036:52:8","statements":[{"expression":{"arguments":[{"id":1147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3071:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1146,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3057:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"functionReturnParameters":1138,"id":1149,"nodeType":"Return","src":"3050:27:8"}]}}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"2779:103:8","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:8","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"value","nameLocation":"2936:5:8","nodeType":"VariableDeclaration","scope":1168,"src":"2922:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1130,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"store","nameLocation":"2958:5:8","nodeType":"VariableDeclaration","scope":1168,"src":"2943:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1132,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:8"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"2983:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"ShortString","nameLocations":["2983:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"2983:11:8"},"referencedDeclaration":1016,"src":"2983:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:8"},"scope":1227,"src":"2887:340:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"3477:158:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3510:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}],"expression":{"id":1179,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"3491:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"type(ShortString)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1016_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1183,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"3520:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1192,"nodeType":"Block","src":"3592:37:8","statements":[{"expression":{"id":1190,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"3613:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1178,"id":1191,"nodeType":"Return","src":"3606:12:8"}]},"id":1193,"nodeType":"IfStatement","src":"3487:142:8","trueBody":{"id":1189,"nodeType":"Block","src":"3539:47:8","statements":[{"expression":{"arguments":[{"id":1186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3569:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}],"id":1185,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3560:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1016_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1178,"id":1188,"nodeType":"Return","src":"3553:22:8"}]}}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"3233:130:8","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:8","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"value","nameLocation":"3410:5:8","nodeType":"VariableDeclaration","scope":1195,"src":"3398:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":1171,"nodeType":"UserDefinedTypeName","pathNode":{"id":1170,"name":"ShortString","nameLocations":["3398:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"3398:11:8"},"referencedDeclaration":1016,"src":"3398:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"store","nameLocation":"3432:5:8","nodeType":"VariableDeclaration","scope":1195,"src":"3417:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"3462:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1176,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:8"},"scope":1227,"src":"3368:267:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"4125:174:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"4158:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}],"expression":{"id":1206,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4139:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"type(ShortString)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1016_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1210,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4168:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1223,"nodeType":"Block","src":"4242:51:8","statements":[{"expression":{"expression":{"arguments":[{"id":1219,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"4269:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1217,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:8","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:8","memberName":"length","nodeType":"MemberAccess","src":"4263:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1205,"id":1222,"nodeType":"Return","src":"4256:26:8"}]},"id":1224,"nodeType":"IfStatement","src":"4135:158:8","trueBody":{"id":1216,"nodeType":"Block","src":"4187:49:8","statements":[{"expression":{"arguments":[{"id":1213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"4219:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}],"id":1212,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4208:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1016_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1205,"id":1215,"nodeType":"Return","src":"4201:24:8"}]}}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"3641:374:8","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:8","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"value","nameLocation":"4064:5:8","nodeType":"VariableDeclaration","scope":1226,"src":"4052:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":1198,"nodeType":"UserDefinedTypeName","pathNode":{"id":1197,"name":"ShortString","nameLocations":["4052:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"4052:11:8"},"referencedDeclaration":1016,"src":"4052:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"store","nameLocation":"4086:5:8","nodeType":"VariableDeclaration","scope":1226,"src":"4071:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:8"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"4116:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:8"},"scope":1227,"src":"4020:279:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1228,"src":"1255:3046:8","usedErrors":[1024,1026],"usedEvents":[]}],"src":"106:4196:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1351]},"id":1352,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1229,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"219:1187:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1351,"linearizedBaseContracts":[1351],"name":"StorageSlot","nameLocation":"1415:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1233,"members":[{"constant":false,"id":1232,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1233,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1351,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1236,"members":[{"constant":false,"id":1235,"mutability":"mutable","name":"value","nameLocation":"1522:5:9","nodeType":"VariableDeclaration","scope":1236,"src":"1517:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:9","nodeType":"StructDefinition","scope":1351,"src":"1488:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1239,"members":[{"constant":false,"id":1238,"mutability":"mutable","name":"value","nameLocation":"1577:5:9","nodeType":"VariableDeclaration","scope":1239,"src":"1569:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:9","nodeType":"StructDefinition","scope":1351,"src":"1540:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1242,"members":[{"constant":false,"id":1241,"mutability":"mutable","name":"value","nameLocation":"1632:5:9","nodeType":"VariableDeclaration","scope":1242,"src":"1624:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:9","nodeType":"StructDefinition","scope":1351,"src":"1595:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1245,"members":[{"constant":false,"id":1244,"mutability":"mutable","name":"value","nameLocation":"1685:5:9","nodeType":"VariableDeclaration","scope":1245,"src":"1678:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1243,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:9","nodeType":"StructDefinition","scope":1351,"src":"1650:47:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1248,"members":[{"constant":false,"id":1247,"mutability":"mutable","name":"value","nameLocation":"1738:5:9","nodeType":"VariableDeclaration","scope":1248,"src":"1731:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1246,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:9","nodeType":"StructDefinition","scope":1351,"src":"1703:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1251,"members":[{"constant":false,"id":1250,"mutability":"mutable","name":"value","nameLocation":"1789:5:9","nodeType":"VariableDeclaration","scope":1251,"src":"1783:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1249,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:9","nodeType":"StructDefinition","scope":1351,"src":"1756:45:9","visibility":"public"},{"body":{"id":1261,"nodeType":"Block","src":"1983:79:9","statements":[{"AST":{"nativeSrc":"2018:38:9","nodeType":"YulBlock","src":"2018:38:9","statements":[{"nativeSrc":"2032:14:9","nodeType":"YulAssignment","src":"2032:14:9","value":{"name":"slot","nativeSrc":"2042:4:9","nodeType":"YulIdentifier","src":"2042:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:9","nodeType":"YulIdentifier","src":"2032:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1258,"isOffset":false,"isSlot":true,"src":"2032:6:9","suffix":"slot","valueSize":1},{"declaration":1254,"isOffset":false,"isSlot":false,"src":"2042:4:9","valueSize":1}],"flags":["memory-safe"],"id":1260,"nodeType":"InlineAssembly","src":"1993:63:9"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1807:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:9","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"slot","nameLocation":"1931:4:9","nodeType":"VariableDeclaration","scope":1262,"src":"1923:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:9"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"r","nameLocation":"1980:1:9","nodeType":"VariableDeclaration","scope":1262,"src":"1960:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1233_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1257,"nodeType":"UserDefinedTypeName","pathNode":{"id":1256,"name":"AddressSlot","nameLocations":["1960:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1233,"src":"1960:11:9"},"referencedDeclaration":1233,"src":"1960:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1233_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:9"},"scope":1351,"src":"1899:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"2243:79:9","statements":[{"AST":{"nativeSrc":"2278:38:9","nodeType":"YulBlock","src":"2278:38:9","statements":[{"nativeSrc":"2292:14:9","nodeType":"YulAssignment","src":"2292:14:9","value":{"name":"slot","nativeSrc":"2302:4:9","nodeType":"YulIdentifier","src":"2302:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:9","nodeType":"YulIdentifier","src":"2292:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1269,"isOffset":false,"isSlot":true,"src":"2292:6:9","suffix":"slot","valueSize":1},{"declaration":1265,"isOffset":false,"isSlot":false,"src":"2302:4:9","valueSize":1}],"flags":["memory-safe"],"id":1271,"nodeType":"InlineAssembly","src":"2253:63:9"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"2068:86:9","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:9","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"slot","nameLocation":"2191:4:9","nodeType":"VariableDeclaration","scope":1273,"src":"2183:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:9"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"r","nameLocation":"2240:1:9","nodeType":"VariableDeclaration","scope":1273,"src":"2220:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1236_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"BooleanSlot","nameLocations":["2220:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1236,"src":"2220:11:9"},"referencedDeclaration":1236,"src":"2220:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1236_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:9"},"scope":1351,"src":"2159:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"2503:79:9","statements":[{"AST":{"nativeSrc":"2538:38:9","nodeType":"YulBlock","src":"2538:38:9","statements":[{"nativeSrc":"2552:14:9","nodeType":"YulAssignment","src":"2552:14:9","value":{"name":"slot","nativeSrc":"2562:4:9","nodeType":"YulIdentifier","src":"2562:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:9","nodeType":"YulIdentifier","src":"2552:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1280,"isOffset":false,"isSlot":true,"src":"2552:6:9","suffix":"slot","valueSize":1},{"declaration":1276,"isOffset":false,"isSlot":false,"src":"2562:4:9","valueSize":1}],"flags":["memory-safe"],"id":1282,"nodeType":"InlineAssembly","src":"2513:63:9"}]},"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"2328:86:9","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:9","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"slot","nameLocation":"2451:4:9","nodeType":"VariableDeclaration","scope":1284,"src":"2443:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:9"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"r","nameLocation":"2500:1:9","nodeType":"VariableDeclaration","scope":1284,"src":"2480:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1239_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1279,"nodeType":"UserDefinedTypeName","pathNode":{"id":1278,"name":"Bytes32Slot","nameLocations":["2480:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1239,"src":"2480:11:9"},"referencedDeclaration":1239,"src":"2480:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1239_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:9"},"scope":1351,"src":"2419:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"2763:79:9","statements":[{"AST":{"nativeSrc":"2798:38:9","nodeType":"YulBlock","src":"2798:38:9","statements":[{"nativeSrc":"2812:14:9","nodeType":"YulAssignment","src":"2812:14:9","value":{"name":"slot","nativeSrc":"2822:4:9","nodeType":"YulIdentifier","src":"2822:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:9","nodeType":"YulIdentifier","src":"2812:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1291,"isOffset":false,"isSlot":true,"src":"2812:6:9","suffix":"slot","valueSize":1},{"declaration":1287,"isOffset":false,"isSlot":false,"src":"2822:4:9","valueSize":1}],"flags":["memory-safe"],"id":1293,"nodeType":"InlineAssembly","src":"2773:63:9"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"2588:86:9","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:9","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"slot","nameLocation":"2711:4:9","nodeType":"VariableDeclaration","scope":1295,"src":"2703:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:9"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"r","nameLocation":"2760:1:9","nodeType":"VariableDeclaration","scope":1295,"src":"2740:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1242_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"Uint256Slot","nameLocations":["2740:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"2740:11:9"},"referencedDeclaration":1242,"src":"2740:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1242_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:9"},"scope":1351,"src":"2679:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"3020:79:9","statements":[{"AST":{"nativeSrc":"3055:38:9","nodeType":"YulBlock","src":"3055:38:9","statements":[{"nativeSrc":"3069:14:9","nodeType":"YulAssignment","src":"3069:14:9","value":{"name":"slot","nativeSrc":"3079:4:9","nodeType":"YulIdentifier","src":"3079:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:9","nodeType":"YulIdentifier","src":"3069:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1302,"isOffset":false,"isSlot":true,"src":"3069:6:9","suffix":"slot","valueSize":1},{"declaration":1298,"isOffset":false,"isSlot":false,"src":"3079:4:9","valueSize":1}],"flags":["memory-safe"],"id":1304,"nodeType":"InlineAssembly","src":"3030:63:9"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2848:85:9","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:9","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"slot","nameLocation":"2969:4:9","nodeType":"VariableDeclaration","scope":1306,"src":"2961:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"r","nameLocation":"3017:1:9","nodeType":"VariableDeclaration","scope":1306,"src":"2998:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1245_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1301,"nodeType":"UserDefinedTypeName","pathNode":{"id":1300,"name":"Int256Slot","nameLocations":["2998:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1245,"src":"2998:10:9"},"referencedDeclaration":1245,"src":"2998:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1245_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:9"},"scope":1351,"src":"2938:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1316,"nodeType":"Block","src":"3277:79:9","statements":[{"AST":{"nativeSrc":"3312:38:9","nodeType":"YulBlock","src":"3312:38:9","statements":[{"nativeSrc":"3326:14:9","nodeType":"YulAssignment","src":"3326:14:9","value":{"name":"slot","nativeSrc":"3336:4:9","nodeType":"YulIdentifier","src":"3336:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:9","nodeType":"YulIdentifier","src":"3326:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1313,"isOffset":false,"isSlot":true,"src":"3326:6:9","suffix":"slot","valueSize":1},{"declaration":1309,"isOffset":false,"isSlot":false,"src":"3336:4:9","valueSize":1}],"flags":["memory-safe"],"id":1315,"nodeType":"InlineAssembly","src":"3287:63:9"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"3105:85:9","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:9","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"slot","nameLocation":"3226:4:9","nodeType":"VariableDeclaration","scope":1317,"src":"3218:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:9"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"r","nameLocation":"3274:1:9","nodeType":"VariableDeclaration","scope":1317,"src":"3255:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1248_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1312,"nodeType":"UserDefinedTypeName","pathNode":{"id":1311,"name":"StringSlot","nameLocations":["3255:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1248,"src":"3255:10:9"},"referencedDeclaration":1248,"src":"3255:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1248_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:9"},"scope":1351,"src":"3195:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1327,"nodeType":"Block","src":"3558:85:9","statements":[{"AST":{"nativeSrc":"3593:44:9","nodeType":"YulBlock","src":"3593:44:9","statements":[{"nativeSrc":"3607:20:9","nodeType":"YulAssignment","src":"3607:20:9","value":{"name":"store.slot","nativeSrc":"3617:10:9","nodeType":"YulIdentifier","src":"3617:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:9","nodeType":"YulIdentifier","src":"3607:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1324,"isOffset":false,"isSlot":true,"src":"3607:6:9","suffix":"slot","valueSize":1},{"declaration":1320,"isOffset":false,"isSlot":true,"src":"3617:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1326,"nodeType":"InlineAssembly","src":"3568:69:9"}]},"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"3362:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:9","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"store","nameLocation":"3506:5:9","nodeType":"VariableDeclaration","scope":1328,"src":"3491:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1319,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:9"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"r","nameLocation":"3555:1:9","nodeType":"VariableDeclaration","scope":1328,"src":"3536:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1248_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"StringSlot","nameLocations":["3536:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1248,"src":"3536:10:9"},"referencedDeclaration":1248,"src":"3536:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1248_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:9"},"scope":1351,"src":"3468:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1338,"nodeType":"Block","src":"3818:79:9","statements":[{"AST":{"nativeSrc":"3853:38:9","nodeType":"YulBlock","src":"3853:38:9","statements":[{"nativeSrc":"3867:14:9","nodeType":"YulAssignment","src":"3867:14:9","value":{"name":"slot","nativeSrc":"3877:4:9","nodeType":"YulIdentifier","src":"3877:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:9","nodeType":"YulIdentifier","src":"3867:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1335,"isOffset":false,"isSlot":true,"src":"3867:6:9","suffix":"slot","valueSize":1},{"declaration":1331,"isOffset":false,"isSlot":false,"src":"3877:4:9","valueSize":1}],"flags":["memory-safe"],"id":1337,"nodeType":"InlineAssembly","src":"3828:63:9"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"3649:84:9","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:9","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"slot","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":1339,"src":"3760:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:9"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"r","nameLocation":"3815:1:9","nodeType":"VariableDeclaration","scope":1339,"src":"3797:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1251_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"BytesSlot","nameLocations":["3797:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1251,"src":"3797:9:9"},"referencedDeclaration":1251,"src":"3797:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1251_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:9"},"scope":1351,"src":"3738:159:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1349,"nodeType":"Block","src":"4094:85:9","statements":[{"AST":{"nativeSrc":"4129:44:9","nodeType":"YulBlock","src":"4129:44:9","statements":[{"nativeSrc":"4143:20:9","nodeType":"YulAssignment","src":"4143:20:9","value":{"name":"store.slot","nativeSrc":"4153:10:9","nodeType":"YulIdentifier","src":"4153:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:9","nodeType":"YulIdentifier","src":"4143:6:9"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1346,"isOffset":false,"isSlot":true,"src":"4143:6:9","suffix":"slot","valueSize":1},{"declaration":1342,"isOffset":false,"isSlot":true,"src":"4153:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1348,"nodeType":"InlineAssembly","src":"4104:69:9"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"3903:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:9","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"store","nameLocation":"4043:5:9","nodeType":"VariableDeclaration","scope":1350,"src":"4029:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:9"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"r","nameLocation":"4091:1:9","nodeType":"VariableDeclaration","scope":1350,"src":"4073:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1251_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"BytesSlot","nameLocations":["4073:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1251,"src":"4073:9:9"},"referencedDeclaration":1251,"src":"4073:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1251_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:9"},"scope":1351,"src":"4007:172:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1352,"src":"1407:2774:9","usedErrors":[],"usedEvents":[]}],"src":"193:3989:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6148],"SafeCast":[7913],"SignedMath":[8057],"Strings":[2753]},"id":2754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1353,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2754,"sourceUnit":6149,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1354,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2754,"sourceUnit":7914,"src":"165:45:10","symbolAliases":[{"foreign":{"id":1356,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2754,"sourceUnit":8058,"src":"211:49:10","symbolAliases":[{"foreign":{"id":1358,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"219:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"262:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2753,"linearizedBaseContracts":[2753],"name":"Strings","nameLocation":"305:7:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1362,"libraryName":{"id":1361,"name":"SafeCast","nameLocations":["325:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":7913,"src":"325:8:10"},"nodeType":"UsingForDirective","src":"319:21:10"},{"constant":true,"id":1365,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:10","nodeType":"VariableDeclaration","scope":2753,"src":"346:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1363,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1368,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:10","nodeType":"VariableDeclaration","scope":2753,"src":"408:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1366,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1404,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:10","nodeType":"VariableDeclaration","scope":2753,"src":"456:302:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:10","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:10","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:10","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:10","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:10","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"778:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1411,"name":"StringsInsufficientHexLength","nameLocation":"870:28:10","nodeType":"ErrorDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"value","nameLocation":"907:5:10","nodeType":"VariableDeclaration","scope":1411,"src":"899:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"length","nameLocation":"922:6:10","nodeType":"VariableDeclaration","scope":1411,"src":"914:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:10"},"src":"864:66:10"},{"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"936:108:10","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1414,"name":"StringsInvalidChar","nameLocation":"1055:18:10","nodeType":"ErrorDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"1073:2:10"},"src":"1049:27:10"},{"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"1082:84:10","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1417,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:10","nodeType":"ErrorDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"1204:2:10"},"src":"1171:36:10"},{"body":{"id":1464,"nodeType":"Block","src":"1379:561:10","statements":[{"id":1463,"nodeType":"UncheckedBlock","src":"1389:545:10","statements":[{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"length","nameLocation":"1421:6:10","nodeType":"VariableDeclaration","scope":1463,"src":"1413:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1441:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1427,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"1430:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6148_$","typeString":"type(library Math)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5980,"src":"1430:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:10"},{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:10","nodeType":"VariableDeclaration","scope":1463,"src":"1465:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1440,"initialValue":{"arguments":[{"id":1438,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"1499:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1436,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:10"},{"assignments":[1442],"declarations":[{"constant":false,"id":1442,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:10","nodeType":"VariableDeclaration","scope":1463,"src":"1520:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1443,"nodeType":"VariableDeclarationStatement","src":"1520:11:10"},{"AST":{"nativeSrc":"1570:67:10","nodeType":"YulBlock","src":"1570:67:10","statements":[{"nativeSrc":"1588:35:10","nodeType":"YulAssignment","src":"1588:35:10","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:10","nodeType":"YulIdentifier","src":"1599:6:10"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:10","nodeType":"YulLiteral","src":"1611:2:10","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:10","nodeType":"YulIdentifier","src":"1615:6:10"}],"functionName":{"name":"add","nativeSrc":"1607:3:10","nodeType":"YulIdentifier","src":"1607:3:10"},"nativeSrc":"1607:15:10","nodeType":"YulFunctionCall","src":"1607:15:10"}],"functionName":{"name":"add","nativeSrc":"1595:3:10","nodeType":"YulIdentifier","src":"1595:3:10"},"nativeSrc":"1595:28:10","nodeType":"YulFunctionCall","src":"1595:28:10"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:10","nodeType":"YulIdentifier","src":"1588:3:10"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1435,"isOffset":false,"isSlot":false,"src":"1599:6:10","valueSize":1},{"declaration":1426,"isOffset":false,"isSlot":false,"src":"1615:6:10","valueSize":1},{"declaration":1442,"isOffset":false,"isSlot":false,"src":"1588:3:10","valueSize":1}],"flags":["memory-safe"],"id":1444,"nodeType":"InlineAssembly","src":"1545:92:10"},{"body":{"id":1459,"nodeType":"Block","src":"1663:234:10","statements":[{"expression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:10","subExpression":{"id":1446,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1681:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ExpressionStatement","src":"1681:5:10"},{"AST":{"nativeSrc":"1729:86:10","nodeType":"YulBlock","src":"1729:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:10","nodeType":"YulIdentifier","src":"1759:3:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:10","nodeType":"YulIdentifier","src":"1773:5:10"},{"kind":"number","nativeSrc":"1780:2:10","nodeType":"YulLiteral","src":"1780:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:10","nodeType":"YulIdentifier","src":"1769:3:10"},"nativeSrc":"1769:14:10","nodeType":"YulFunctionCall","src":"1769:14:10"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:10","nodeType":"YulIdentifier","src":"1785:10:10"}],"functionName":{"name":"byte","nativeSrc":"1764:4:10","nodeType":"YulIdentifier","src":"1764:4:10"},"nativeSrc":"1764:32:10","nodeType":"YulFunctionCall","src":"1764:32:10"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:10","nodeType":"YulIdentifier","src":"1751:7:10"},"nativeSrc":"1751:46:10","nodeType":"YulFunctionCall","src":"1751:46:10"},"nativeSrc":"1751:46:10","nodeType":"YulExpressionStatement","src":"1751:46:10"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1365,"isOffset":false,"isSlot":false,"src":"1785:10:10","valueSize":1},{"declaration":1442,"isOffset":false,"isSlot":false,"src":"1759:3:10","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":false,"src":"1773:5:10","valueSize":1}],"flags":["memory-safe"],"id":1449,"nodeType":"InlineAssembly","src":"1704:111:10"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1832:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"1832:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1865:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"IfStatement","src":"1861:21:10","trueBody":{"id":1457,"nodeType":"Break","src":"1877:5:10"}}]},"condition":{"hexValue":"74727565","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1460,"nodeType":"WhileStatement","src":"1650:247:10"},{"expression":{"id":1461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1917:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1424,"id":1462,"nodeType":"Return","src":"1910:13:10"}]}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"1213:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:10","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"value","nameLocation":"1334:5:10","nodeType":"VariableDeclaration","scope":1465,"src":"1326:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:10"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"1364:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1422,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:10"},"scope":2753,"src":"1308:632:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"2116:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2147:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:10","trueExpression":{"hexValue":"2d","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2193:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1483,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"2178:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8057_$","typeString":"type(library SignedMath)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8056,"src":"2178:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1482,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2169:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1473,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:10","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1472,"id":1489,"nodeType":"Return","src":"2126:75:10"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"1946:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:10","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"value","nameLocation":"2071:5:10","nodeType":"VariableDeclaration","scope":1491,"src":"2064:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1467,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:10"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"2101:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1470,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:10"},"scope":2753,"src":"2040:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"2387:100:10","statements":[{"id":1509,"nodeType":"UncheckedBlock","src":"2397:84:10","statements":[{"expression":{"arguments":[{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2440:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2459:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1501,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"2447:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6148_$","typeString":"type(library Math)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6091,"src":"2447:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1511,1594,1614],"referencedDeclaration":1594,"src":"2428:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1498,"id":1508,"nodeType":"Return","src":"2421:49:10"}]}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"2214:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:10","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"value","nameLocation":"2342:5:10","nodeType":"VariableDeclaration","scope":1511,"src":"2334:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:10"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"2372:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1496,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:10"},"scope":2753,"src":"2313:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"2700:435:10","statements":[{"assignments":[1522],"declarations":[{"constant":false,"id":1522,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:10","nodeType":"VariableDeclaration","scope":1593,"src":"2710:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1524,"initialValue":{"id":1523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2731:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:10"},{"assignments":[1526],"declarations":[{"constant":false,"id":1526,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:10","nodeType":"VariableDeclaration","scope":1593,"src":"2746:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1525,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1535,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1530,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2782:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1527,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:10"},{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1536,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2803:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1538,"indexExpression":{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1541,"nodeType":"ExpressionStatement","src":"2803:15:10"},{"expression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2828:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1544,"indexExpression":{"hexValue":"31","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1547,"nodeType":"ExpressionStatement","src":"2828:15:10"},{"body":{"id":1576,"nodeType":"Block","src":"2898:95:10","statements":[{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1562,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2912:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1564,"indexExpression":{"id":1563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2919:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1565,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"2924:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1569,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2935:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1571,"nodeType":"ExpressionStatement","src":"2912:40:10"},{"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1572,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2966:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1575,"nodeType":"ExpressionStatement","src":"2966:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2886:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"initializationExpression":{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"i","nameLocation":"2866:1:10","nodeType":"VariableDeclaration","scope":1577,"src":"2858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1551,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2874:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:10","subExpression":{"id":1559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2895:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"2893:3:10"},"nodeType":"ForStatement","src":"2853:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1578,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3006:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1587,"nodeType":"IfStatement","src":"3002:96:10","trueBody":{"id":1586,"nodeType":"Block","src":"3023:75:10","statements":[{"errorCall":{"arguments":[{"id":1582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3073:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1583,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3080:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"3044:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1585,"nodeType":"RevertStatement","src":"3037:50:10"}]}},{"expression":{"arguments":[{"id":1590,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3121:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:10","typeDescriptions":{}}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1520,"id":1592,"nodeType":"Return","src":"3107:21:10"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"2493:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:10","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"value","nameLocation":"2639:5:10","nodeType":"VariableDeclaration","scope":1594,"src":"2631:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"length","nameLocation":"2654:6:10","nodeType":"VariableDeclaration","scope":1594,"src":"2646:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:10"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"2685:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1518,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:10"},"scope":2753,"src":"2610:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1613,"nodeType":"Block","src":"3367:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1607,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3412:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1605,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:10","typeDescriptions":{}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:10","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1610,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"3420:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1602,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1511,1594,1614],"referencedDeclaration":1594,"src":"3384:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1601,"id":1612,"nodeType":"Return","src":"3377:58:10"}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"3141:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:10","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"addr","nameLocation":"3323:4:10","nodeType":"VariableDeclaration","scope":1614,"src":"3315:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:10"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"3352:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1599,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:10"},"scope":2753,"src":"3294:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1678,"nodeType":"Block","src":"3699:642:10","statements":[{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:10","nodeType":"VariableDeclaration","scope":1678,"src":"3709:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1622,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1630,"initialValue":{"arguments":[{"arguments":[{"id":1627,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3749:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1626,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1511,1594,1614],"referencedDeclaration":1614,"src":"3737:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1624,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:10","typeDescriptions":{}}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:10"},{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:10","nodeType":"VariableDeclaration","scope":1678,"src":"3840:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1633,"nodeType":"VariableDeclarationStatement","src":"3840:17:10"},{"AST":{"nativeSrc":"3892:78:10","nodeType":"YulBlock","src":"3892:78:10","statements":[{"nativeSrc":"3906:54:10","nodeType":"YulAssignment","src":"3906:54:10","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:10","nodeType":"YulLiteral","src":"3923:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:10","nodeType":"YulIdentifier","src":"3941:6:10"},{"kind":"number","nativeSrc":"3949:4:10","nodeType":"YulLiteral","src":"3949:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:10","nodeType":"YulIdentifier","src":"3937:3:10"},"nativeSrc":"3937:17:10","nodeType":"YulFunctionCall","src":"3937:17:10"},{"kind":"number","nativeSrc":"3956:2:10","nodeType":"YulLiteral","src":"3956:2:10","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:10","nodeType":"YulIdentifier","src":"3927:9:10"},"nativeSrc":"3927:32:10","nodeType":"YulFunctionCall","src":"3927:32:10"}],"functionName":{"name":"shr","nativeSrc":"3919:3:10","nodeType":"YulIdentifier","src":"3919:3:10"},"nativeSrc":"3919:41:10","nodeType":"YulFunctionCall","src":"3919:41:10"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:10","nodeType":"YulIdentifier","src":"3906:9:10"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1623,"isOffset":false,"isSlot":false,"src":"3941:6:10","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"3906:9:10","valueSize":1}],"flags":["memory-safe"],"id":1634,"nodeType":"InlineAssembly","src":"3867:103:10"},{"body":{"id":1671,"nodeType":"Block","src":"4013:291:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"4119:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1652,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4148:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1654,"indexExpression":{"id":1653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4155:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1650,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:10","typeDescriptions":{}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"4115:150:10","trueBody":{"id":1665,"nodeType":"Block","src":"4165:100:10","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1659,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4233:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1661,"indexExpression":{"id":1660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4240:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1664,"nodeType":"ExpressionStatement","src":"4233:17:10"}]}},{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1667,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"4278:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"4278:15:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4001:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1672,"initializationExpression":{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"i","nameLocation":"3993:1:10","nodeType":"VariableDeclaration","scope":1672,"src":"3985:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1638,"initialValue":{"hexValue":"3431","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:10","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:10","subExpression":{"id":1642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4010:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"4008:3:10"},"nodeType":"ForStatement","src":"3980:324:10"},{"expression":{"arguments":[{"id":1675,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4327:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1673,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:10","typeDescriptions":{}}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1621,"id":1677,"nodeType":"Return","src":"4313:21:10"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"3448:165:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1679,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:10","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"addr","nameLocation":"3655:4:10","nodeType":"VariableDeclaration","scope":1679,"src":"3647:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:10"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1679,"src":"3684:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:10"},"scope":2753,"src":"3618:723:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1715,"nodeType":"Block","src":"4496:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"4519:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1689,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:10","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:10","memberName":"length","nodeType":"MemberAccess","src":"4513:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1696,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4538:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1694,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:10","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:10","memberName":"length","nodeType":"MemberAccess","src":"4532:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"4567:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1701,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:10","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4590:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1707,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:10","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1706,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1688,"id":1714,"nodeType":"Return","src":"4506:87:10"}]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"4347:66:10","text":" @dev Returns true if the two strings are equal."},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:10","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"a","nameLocation":"4447:1:10","nodeType":"VariableDeclaration","scope":1716,"src":"4433:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"b","nameLocation":"4464:1:10","nodeType":"VariableDeclaration","scope":1716,"src":"4450:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1683,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:10"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"4490:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1686,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:10"},"scope":2753,"src":"4418:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"4897:64:10","statements":[{"expression":{"arguments":[{"id":1725,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4924:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1729,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4940:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1727,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:10","typeDescriptions":{}}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:10","memberName":"length","nodeType":"MemberAccess","src":"4934:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1724,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1735,1766],"referencedDeclaration":1766,"src":"4914:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1723,"id":1733,"nodeType":"Return","src":"4907:47:10"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"4606:214:10","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:10","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"input","nameLocation":"4858:5:10","nodeType":"VariableDeclaration","scope":1735,"src":"4844:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1718,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:10"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"4888:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:10"},"scope":2753,"src":"4825:136:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"5366:153:10","statements":[{"assignments":[1748,1750],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"success","nameLocation":"5382:7:10","nodeType":"VariableDeclaration","scope":1765,"src":"5377:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1747,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"value","nameLocation":"5399:5:10","nodeType":"VariableDeclaration","scope":1765,"src":"5391:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1756,"initialValue":{"arguments":[{"id":1752,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"5421:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1753,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"5428:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5435:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1751,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1787,1824],"referencedDeclaration":1824,"src":"5408:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:10"},{"condition":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:10","subExpression":{"id":1757,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5454:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1762,"nodeType":"IfStatement","src":"5449:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1759,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"5470:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1761,"nodeType":"RevertStatement","src":"5463:27:10"}},{"expression":{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5507:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1746,"id":1764,"nodeType":"Return","src":"5500:12:10"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"4967:294:10","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:10","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"input","nameLocation":"5299:5:10","nodeType":"VariableDeclaration","scope":1766,"src":"5285:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1737,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"begin","nameLocation":"5314:5:10","nodeType":"VariableDeclaration","scope":1766,"src":"5306:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"end","nameLocation":"5329:3:10","nodeType":"VariableDeclaration","scope":1766,"src":"5321:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:10"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"5357:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:10"},"scope":2753,"src":"5266:253:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1786,"nodeType":"Block","src":"5840:83:10","statements":[{"expression":{"arguments":[{"id":1777,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5886:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1781,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5902:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:10","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:10","memberName":"length","nodeType":"MemberAccess","src":"5896:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1776,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5857:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1775,"id":1785,"nodeType":"Return","src":"5850:66:10"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"5525:215:10","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:10","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"input","nameLocation":"5781:5:10","nodeType":"VariableDeclaration","scope":1787,"src":"5767:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1768,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:10"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"success","nameLocation":"5816:7:10","nodeType":"VariableDeclaration","scope":1787,"src":"5811:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1771,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"value","nameLocation":"5833:5:10","nodeType":"VariableDeclaration","scope":1787,"src":"5825:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:10"},"scope":2753,"src":"5745:178:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1823,"nodeType":"Block","src":"6325:144:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6339:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6351:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1802,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:10","typeDescriptions":{}}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:10","memberName":"length","nodeType":"MemberAccess","src":"6345:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"6368:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1809,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6376:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1816,"nodeType":"IfStatement","src":"6335:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1800,"id":1815,"nodeType":"Return","src":"6381:17:10"}},{"expression":{"arguments":[{"id":1818,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6444:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1819,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"6451:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1820,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6458:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1817,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6415:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1800,"id":1822,"nodeType":"Return","src":"6408:54:10"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"5929:238:10","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:10","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"input","nameLocation":"6217:5:10","nodeType":"VariableDeclaration","scope":1824,"src":"6203:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1789,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"begin","nameLocation":"6240:5:10","nodeType":"VariableDeclaration","scope":1824,"src":"6232:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"end","nameLocation":"6263:3:10","nodeType":"VariableDeclaration","scope":1824,"src":"6255:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:10"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"success","nameLocation":"6301:7:10","nodeType":"VariableDeclaration","scope":1824,"src":"6296:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1796,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"value","nameLocation":"6318:5:10","nodeType":"VariableDeclaration","scope":1824,"src":"6310:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:10"},"scope":2753,"src":"6172:297:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"6872:347:10","statements":[{"assignments":[1839],"declarations":[{"constant":false,"id":1839,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:10","nodeType":"VariableDeclaration","scope":1893,"src":"6882:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1844,"initialValue":{"arguments":[{"id":1842,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6910:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1840,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:10","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:10"},{"assignments":[1846],"declarations":[{"constant":false,"id":1846,"mutability":"mutable","name":"result","nameLocation":"6935:6:10","nodeType":"VariableDeclaration","scope":1893,"src":"6927:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1848,"initialValue":{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:10"},{"body":{"id":1887,"nodeType":"Block","src":"6993:189:10","statements":[{"assignments":[1860],"declarations":[{"constant":false,"id":1860,"mutability":"mutable","name":"chr","nameLocation":"7013:3:10","nodeType":"VariableDeclaration","scope":1887,"src":"7007:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1859,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1870,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1865,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"7062:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"7070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1864,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"7039:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1862,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:10","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1861,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"7019:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7092:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"7088:30:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1837,"id":1877,"nodeType":"Return","src":"7101:17:10"}},{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7132:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"nodeType":"ExpressionStatement","src":"7132:12:10"},{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7158:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1884,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7168:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1886,"nodeType":"ExpressionStatement","src":"7158:13:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6979:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1854,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6983:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"initializationExpression":{"assignments":[1850],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"i","nameLocation":"6968:1:10","nodeType":"VariableDeclaration","scope":1888,"src":"6960:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1852,"initialValue":{"id":1851,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"6972:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:10","subExpression":{"id":1856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6990:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1858,"nodeType":"ExpressionStatement","src":"6988:3:10"},"nodeType":"ForStatement","src":"6955:227:10"},{"expression":{"components":[{"hexValue":"74727565","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1837,"id":1892,"nodeType":"Return","src":"7191:21:10"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"6475:224:10","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:10","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"input","nameLocation":"6765:5:10","nodeType":"VariableDeclaration","scope":1894,"src":"6751:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1826,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"begin","nameLocation":"6788:5:10","nodeType":"VariableDeclaration","scope":1894,"src":"6780:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"end","nameLocation":"6811:3:10","nodeType":"VariableDeclaration","scope":1894,"src":"6803:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:10"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"success","nameLocation":"6848:7:10","nodeType":"VariableDeclaration","scope":1894,"src":"6843:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1833,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"6865:5:10","nodeType":"VariableDeclaration","scope":1894,"src":"6857:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:10"},"scope":2753,"src":"6704:515:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1912,"nodeType":"Block","src":"7516:63:10","statements":[{"expression":{"arguments":[{"id":1903,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"7542:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1907,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"7558:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:10","typeDescriptions":{}}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:10","memberName":"length","nodeType":"MemberAccess","src":"7552:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1902,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1913,1944],"referencedDeclaration":1944,"src":"7533:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1901,"id":1911,"nodeType":"Return","src":"7526:46:10"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"7225:216:10","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:10","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"input","nameLocation":"7478:5:10","nodeType":"VariableDeclaration","scope":1913,"src":"7464:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1896,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:10"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"7508:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1899,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:10"},"scope":2753,"src":"7446:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"7984:151:10","statements":[{"assignments":[1926,1928],"declarations":[{"constant":false,"id":1926,"mutability":"mutable","name":"success","nameLocation":"8000:7:10","nodeType":"VariableDeclaration","scope":1943,"src":"7995:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1925,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"value","nameLocation":"8016:5:10","nodeType":"VariableDeclaration","scope":1943,"src":"8009:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1927,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[{"id":1930,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"8037:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1931,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8044:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1932,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"8051:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1929,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1965,2007],"referencedDeclaration":2007,"src":"8025:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:10"},{"condition":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:10","subExpression":{"id":1935,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"8070:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1940,"nodeType":"IfStatement","src":"8065:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1937,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8086:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1939,"nodeType":"RevertStatement","src":"8079:27:10"}},{"expression":{"id":1941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"8123:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1924,"id":1942,"nodeType":"Return","src":"8116:12:10"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"7585:296:10","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1944,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:10","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"input","nameLocation":"7918:5:10","nodeType":"VariableDeclaration","scope":1944,"src":"7904:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"begin","nameLocation":"7933:5:10","nodeType":"VariableDeclaration","scope":1944,"src":"7925:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"end","nameLocation":"7948:3:10","nodeType":"VariableDeclaration","scope":1944,"src":"7940:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:10"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1944,"src":"7976:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1922,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:10"},"scope":2753,"src":"7886:249:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"8526:82:10","statements":[{"expression":{"arguments":[{"id":1955,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"8571:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1959,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"8587:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:10","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:10","memberName":"length","nodeType":"MemberAccess","src":"8581:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1954,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"8543:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1953,"id":1963,"nodeType":"Return","src":"8536:65:10"}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"8141:287:10","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:10","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"input","nameLocation":"8468:5:10","nodeType":"VariableDeclaration","scope":1965,"src":"8454:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1946,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:10"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"success","nameLocation":"8503:7:10","nodeType":"VariableDeclaration","scope":1965,"src":"8498:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1949,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"value","nameLocation":"8519:5:10","nodeType":"VariableDeclaration","scope":1965,"src":"8512:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1951,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:10"},"scope":2753,"src":"8433:175:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1970,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:10","nodeType":"VariableDeclaration","scope":2753,"src":"8614:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2006,"nodeType":"Block","src":"9130:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9144:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1987,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"9156:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1985,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:10","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:10","memberName":"length","nodeType":"MemberAccess","src":"9150:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"9173:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1992,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9181:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"nodeType":"IfStatement","src":"9140:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1983,"id":1998,"nodeType":"Return","src":"9186:17:10"}},{"expression":{"arguments":[{"id":2001,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"9248:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2002,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"9255:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2003,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9262:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2000,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"9220:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1983,"id":2005,"nodeType":"Return","src":"9213:53:10"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"8671:303:10","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:10","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"input","nameLocation":"9023:5:10","nodeType":"VariableDeclaration","scope":2007,"src":"9009:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1972,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"begin","nameLocation":"9046:5:10","nodeType":"VariableDeclaration","scope":2007,"src":"9038:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"end","nameLocation":"9069:3:10","nodeType":"VariableDeclaration","scope":2007,"src":"9061:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:10"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"success","nameLocation":"9107:7:10","nodeType":"VariableDeclaration","scope":2007,"src":"9102:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1979,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"value","nameLocation":"9123:5:10","nodeType":"VariableDeclaration","scope":2007,"src":"9116:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1981,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:10"},"scope":2753,"src":"8979:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2127,"nodeType":"Block","src":"9673:812:10","statements":[{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:10","nodeType":"VariableDeclaration","scope":2127,"src":"9683:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2021,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2027,"initialValue":{"arguments":[{"id":2025,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"9711:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2023,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:10","typeDescriptions":{}}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:10"},{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"sign","nameLocation":"9781:4:10","nodeType":"VariableDeclaration","scope":2127,"src":"9774:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2028,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2045,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"9788:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2031,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9797:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2040,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"9845:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"9853:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"9822:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2037,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:10","typeDescriptions":{}}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:10","trueExpression":{"arguments":[{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2033,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:10","typeDescriptions":{}}},"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:10"},{"assignments":[2047],"declarations":[{"constant":false,"id":2047,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:10","nodeType":"VariableDeclaration","scope":2127,"src":"9941:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2046,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2054,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2048,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9961:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2049,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:10","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:10"},{"assignments":[2056],"declarations":[{"constant":false,"id":2056,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:10","nodeType":"VariableDeclaration","scope":2127,"src":"9990:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2063,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10010:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2058,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:10","typeDescriptions":{}}},"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:10"},{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"offset","nameLocation":"10047:6:10","nodeType":"VariableDeclaration","scope":2127,"src":"10039:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2072,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"10057:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2067,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"10073:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"10056:37:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:10"},{"assignments":[2074,2076],"declarations":[{"constant":false,"id":2074,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:10","nodeType":"VariableDeclaration","scope":2127,"src":"10107:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2073,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:10","nodeType":"VariableDeclaration","scope":2127,"src":"10124:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2084,"initialValue":{"arguments":[{"id":2078,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"10157:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2079,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"10164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2080,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10172:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2082,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"10180:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2077,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1787,1824],"referencedDeclaration":1824,"src":"10144:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10199:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10213:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2087,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"10224:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10341:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2106,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"10355:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10371:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2109,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"10383:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2020,"id":2124,"nodeType":"Return","src":"10461:17:10"},"id":2125,"nodeType":"IfStatement","src":"10337:141:10","trueBody":{"id":2120,"nodeType":"Block","src":"10399:56:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2114,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:10","memberName":"min","nodeType":"MemberAccess","src":"10427:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2020,"id":2119,"nodeType":"Return","src":"10413:31:10"}]}},"id":2126,"nodeType":"IfStatement","src":"10195:283:10","trueBody":{"id":2104,"nodeType":"Block","src":"10240:91:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2091,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"10268:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2099,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10310:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2097,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:10","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:10","trueExpression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:10","subExpression":{"arguments":[{"id":2094,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10291:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2092,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:10","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2020,"id":2103,"nodeType":"Return","src":"10254:66:10"}]}}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"9279:223:10","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:10","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"input","nameLocation":"9567:5:10","nodeType":"VariableDeclaration","scope":2128,"src":"9553:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"begin","nameLocation":"9590:5:10","nodeType":"VariableDeclaration","scope":2128,"src":"9582:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"end","nameLocation":"9613:3:10","nodeType":"VariableDeclaration","scope":2128,"src":"9605:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:10"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"success","nameLocation":"9650:7:10","nodeType":"VariableDeclaration","scope":2128,"src":"9645:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2016,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"value","nameLocation":"9666:5:10","nodeType":"VariableDeclaration","scope":2128,"src":"9659:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2018,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:10"},"scope":2753,"src":"9507:978:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2146,"nodeType":"Block","src":"10830:67:10","statements":[{"expression":{"arguments":[{"id":2137,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"10860:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2141,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"10876:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:10","typeDescriptions":{}}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:10","memberName":"length","nodeType":"MemberAccess","src":"10870:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2136,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2147,2178],"referencedDeclaration":2178,"src":"10847:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2135,"id":2145,"nodeType":"Return","src":"10840:50:10"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"10491:259:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:10","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"input","nameLocation":"10791:5:10","nodeType":"VariableDeclaration","scope":2147,"src":"10777:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2130,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:10"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2147,"src":"10821:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:10"},"scope":2753,"src":"10755:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2177,"nodeType":"Block","src":"11318:156:10","statements":[{"assignments":[2160,2162],"declarations":[{"constant":false,"id":2160,"mutability":"mutable","name":"success","nameLocation":"11334:7:10","nodeType":"VariableDeclaration","scope":2177,"src":"11329:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2159,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"value","nameLocation":"11351:5:10","nodeType":"VariableDeclaration","scope":2177,"src":"11343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"initialValue":{"arguments":[{"id":2164,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"11376:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2165,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"11383:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"11390:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2163,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2199,2236],"referencedDeclaration":2236,"src":"11360:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:10"},{"condition":{"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:10","subExpression":{"id":2169,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11409:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"11404:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2171,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"11425:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2173,"nodeType":"RevertStatement","src":"11418:27:10"}},{"expression":{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11462:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2158,"id":2176,"nodeType":"Return","src":"11455:12:10"}]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"10903:307:10","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2178,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:10","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"input","nameLocation":"11251:5:10","nodeType":"VariableDeclaration","scope":2178,"src":"11237:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2149,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2152,"mutability":"mutable","name":"begin","nameLocation":"11266:5:10","nodeType":"VariableDeclaration","scope":2178,"src":"11258:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2154,"mutability":"mutable","name":"end","nameLocation":"11281:3:10","nodeType":"VariableDeclaration","scope":2178,"src":"11273:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:10"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2178,"src":"11309:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:10"},"scope":2753,"src":"11215:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2198,"nodeType":"Block","src":"11801:86:10","statements":[{"expression":{"arguments":[{"id":2189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"11850:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2193,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"11866:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2191,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:10","typeDescriptions":{}}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:10","memberName":"length","nodeType":"MemberAccess","src":"11860:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2188,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"11818:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2187,"id":2197,"nodeType":"Return","src":"11811:69:10"}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"11480:218:10","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2199,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:10","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"input","nameLocation":"11742:5:10","nodeType":"VariableDeclaration","scope":2199,"src":"11728:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2180,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:10"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"success","nameLocation":"11777:7:10","nodeType":"VariableDeclaration","scope":2199,"src":"11772:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"value","nameLocation":"11794:5:10","nodeType":"VariableDeclaration","scope":2199,"src":"11786:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:10"},"scope":2753,"src":"11703:184:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"12295:147:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12309:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2216,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"12321:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2214,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:10","typeDescriptions":{}}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:10","memberName":"length","nodeType":"MemberAccess","src":"12315:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"12338:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2221,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12346:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2228,"nodeType":"IfStatement","src":"12305:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2212,"id":2227,"nodeType":"Return","src":"12351:17:10"}},{"expression":{"arguments":[{"id":2230,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"12417:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2231,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"12424:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2232,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12431:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2229,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"12385:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2212,"id":2234,"nodeType":"Return","src":"12378:57:10"}]},"documentation":{"id":2200,"nodeType":"StructuredDocumentation","src":"11893:241:10","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:10","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"input","nameLocation":"12187:5:10","nodeType":"VariableDeclaration","scope":2236,"src":"12173:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2201,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"begin","nameLocation":"12210:5:10","nodeType":"VariableDeclaration","scope":2236,"src":"12202:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"end","nameLocation":"12233:3:10","nodeType":"VariableDeclaration","scope":2236,"src":"12225:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:10"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"success","nameLocation":"12271:7:10","nodeType":"VariableDeclaration","scope":2236,"src":"12266:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2208,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"value","nameLocation":"12288:5:10","nodeType":"VariableDeclaration","scope":2236,"src":"12280:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:10"},"scope":2753,"src":"12139:303:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"12851:881:10","statements":[{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:10","nodeType":"VariableDeclaration","scope":2338,"src":"12861:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2250,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2256,"initialValue":{"arguments":[{"id":2254,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"12889:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2252,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:10","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:10"},{"assignments":[2258],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:10","nodeType":"VariableDeclaration","scope":2338,"src":"12943:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2278,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12961:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12967:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2268,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"13011:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2269,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"13019:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2267,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"12988:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2265,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:10","typeDescriptions":{}}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2272,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:10","typeDescriptions":{}}},"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:10"},{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"offset","nameLocation":"13131:6:10","nodeType":"VariableDeclaration","scope":2338,"src":"13123:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2281,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"13140:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"13140:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:10"},{"assignments":[2288],"declarations":[{"constant":false,"id":2288,"mutability":"mutable","name":"result","nameLocation":"13181:6:10","nodeType":"VariableDeclaration","scope":2338,"src":"13173:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2290,"initialValue":{"hexValue":"30","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:10"},{"body":{"id":2332,"nodeType":"Block","src":"13248:447:10","statements":[{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"chr","nameLocation":"13268:3:10","nodeType":"VariableDeclaration","scope":2332,"src":"13262:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2303,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2309,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"13317:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"13325:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"13294:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2306,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:10","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2305,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"13274:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"13347:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2322,"nodeType":"IfStatement","src":"13343:31:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2249,"id":2321,"nodeType":"Return","src":"13357:17:10"}},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"13388:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"13388:12:10"},{"id":2331,"nodeType":"UncheckedBlock","src":"13414:271:10","statements":[{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"13657:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2328,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"13667:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"13657:13:10"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"13234:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2298,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"13238:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"initializationExpression":{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"i","nameLocation":"13214:1:10","nodeType":"VariableDeclaration","scope":2333,"src":"13206:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2296,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"13218:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2294,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"13226:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:10","subExpression":{"id":2300,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"13245:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ExpressionStatement","src":"13243:3:10"},"nodeType":"ForStatement","src":"13201:494:10"},{"expression":{"components":[{"hexValue":"74727565","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"13718:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2249,"id":2337,"nodeType":"Return","src":"13704:21:10"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"12448:227:10","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:10","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"input","nameLocation":"12744:5:10","nodeType":"VariableDeclaration","scope":2339,"src":"12730:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2238,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"begin","nameLocation":"12767:5:10","nodeType":"VariableDeclaration","scope":2339,"src":"12759:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"end","nameLocation":"12790:3:10","nodeType":"VariableDeclaration","scope":2339,"src":"12782:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:10"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"success","nameLocation":"12827:7:10","nodeType":"VariableDeclaration","scope":2339,"src":"12822:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2245,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"value","nameLocation":"12844:5:10","nodeType":"VariableDeclaration","scope":2339,"src":"12836:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:10"},"scope":2753,"src":"12680:1052:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2357,"nodeType":"Block","src":"14030:67:10","statements":[{"expression":{"arguments":[{"id":2348,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"14060:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2352,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"14076:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2350,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:10","typeDescriptions":{}}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:10","memberName":"length","nodeType":"MemberAccess","src":"14070:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2347,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2358,2389],"referencedDeclaration":2389,"src":"14047:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2346,"id":2356,"nodeType":"Return","src":"14040:50:10"}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"13738:212:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2358,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:10","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"input","nameLocation":"13991:5:10","nodeType":"VariableDeclaration","scope":2358,"src":"13977:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:10"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"14021:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:10"},"scope":2753,"src":"13955:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2388,"nodeType":"Block","src":"14470:165:10","statements":[{"assignments":[2371,2373],"declarations":[{"constant":false,"id":2371,"mutability":"mutable","name":"success","nameLocation":"14486:7:10","nodeType":"VariableDeclaration","scope":2388,"src":"14481:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2370,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"value","nameLocation":"14503:5:10","nodeType":"VariableDeclaration","scope":2388,"src":"14495:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2379,"initialValue":{"arguments":[{"id":2375,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"14528:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2376,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"14535:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2377,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"14542:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2374,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2410,2514],"referencedDeclaration":2514,"src":"14512:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:10"},{"condition":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:10","subExpression":{"id":2380,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"14561:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"nodeType":"IfStatement","src":"14556:50:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2382,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"14577:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2384,"nodeType":"RevertStatement","src":"14570:36:10"}},{"expression":{"id":2386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"14623:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2369,"id":2387,"nodeType":"Return","src":"14616:12:10"}]},"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"14103:259:10","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:10","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"input","nameLocation":"14403:5:10","nodeType":"VariableDeclaration","scope":2389,"src":"14389:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2360,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"begin","nameLocation":"14418:5:10","nodeType":"VariableDeclaration","scope":2389,"src":"14410:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"end","nameLocation":"14433:3:10","nodeType":"VariableDeclaration","scope":2389,"src":"14425:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:10"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"14461:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:10"},"scope":2753,"src":"14367:268:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2409,"nodeType":"Block","src":"14942:70:10","statements":[{"expression":{"arguments":[{"id":2400,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"14975:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2404,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"14991:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2402,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:10","typeDescriptions":{}}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:10","memberName":"length","nodeType":"MemberAccess","src":"14985:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2410,2514],"referencedDeclaration":2514,"src":"14959:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2398,"id":2408,"nodeType":"Return","src":"14952:53:10"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"14641:198:10","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2410,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:10","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"input","nameLocation":"14883:5:10","nodeType":"VariableDeclaration","scope":2410,"src":"14869:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2391,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:10"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"success","nameLocation":"14918:7:10","nodeType":"VariableDeclaration","scope":2410,"src":"14913:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2394,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"value","nameLocation":"14935:5:10","nodeType":"VariableDeclaration","scope":2410,"src":"14927:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2396,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:10"},"scope":2753,"src":"14844:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"15405:733:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"15419:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2427,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"15431:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2425,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:10","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:10","memberName":"length","nodeType":"MemberAccess","src":"15425:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"15448:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2432,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"15456:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2442,"nodeType":"IfStatement","src":"15415:72:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:10","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2423,"id":2441,"nodeType":"Return","src":"15461:26:10"}},{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:10","nodeType":"VariableDeclaration","scope":2513,"src":"15498:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2443,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2467,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"15516:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"15522:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2456,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"15572:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2454,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:10","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2458,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"15580:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2453,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"15543:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2451,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:10","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2461,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:10","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:10"},{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:10","nodeType":"VariableDeclaration","scope":2513,"src":"15684:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2477,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2471,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"15714:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"15714:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"15801:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2479,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"15807:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2481,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"15816:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2511,"nodeType":"Block","src":"16081:51:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:10","typeDescriptions":{}}},"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2423,"id":2510,"nodeType":"Return","src":"16095:26:10"}]},"id":2512,"nodeType":"IfStatement","src":"15797:335:10","trueBody":{"id":2503,"nodeType":"Block","src":"15832:243:10","statements":[{"assignments":[2484,2486],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"s","nameLocation":"15953:1:10","nodeType":"VariableDeclaration","scope":2503,"src":"15948:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2483,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"v","nameLocation":"15964:1:10","nodeType":"VariableDeclaration","scope":2503,"src":"15956:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2492,"initialValue":{"arguments":[{"id":2488,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"16001:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2489,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"16008:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2490,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"16015:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2487,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"15969:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:10"},{"expression":{"components":[{"id":2493,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"16041:1:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2498,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"16060:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2496,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:10","typeDescriptions":{}}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:10","typeDescriptions":{}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2423,"id":2502,"nodeType":"Return","src":"16033:31:10"}]}}]},"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"15018:226:10","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:10","nodeType":"FunctionDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"input","nameLocation":"15297:5:10","nodeType":"VariableDeclaration","scope":2514,"src":"15283:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2412,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"begin","nameLocation":"15320:5:10","nodeType":"VariableDeclaration","scope":2514,"src":"15312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"end","nameLocation":"15343:3:10","nodeType":"VariableDeclaration","scope":2514,"src":"15335:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:10"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"success","nameLocation":"15381:7:10","nodeType":"VariableDeclaration","scope":2514,"src":"15376:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2419,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"value","nameLocation":"15398:5:10","nodeType":"VariableDeclaration","scope":2514,"src":"15390:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:10"},"scope":2753,"src":"15249:889:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2573,"nodeType":"Block","src":"16207:461:10","statements":[{"assignments":[2522],"declarations":[{"constant":false,"id":2522,"mutability":"mutable","name":"value","nameLocation":"16223:5:10","nodeType":"VariableDeclaration","scope":2573,"src":"16217:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2521,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2527,"initialValue":{"arguments":[{"id":2525,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"16237:3:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2523,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:10","typeDescriptions":{}}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:10"},{"id":2570,"nodeType":"UncheckedBlock","src":"16401:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16429:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16443:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:10","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16489:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16503:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:10","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16550:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16564:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:10","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2562,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2561,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:10","memberName":"max","nodeType":"MemberAccess","src":"16613:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2520,"id":2566,"nodeType":"Return","src":"16606:22:10"},"id":2567,"nodeType":"IfStatement","src":"16546:82:10","trueBody":{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16576:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:10","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2560,"nodeType":"ExpressionStatement","src":"16576:11:10"}},"id":2568,"nodeType":"IfStatement","src":"16485:143:10","trueBody":{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16516:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:10","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2549,"nodeType":"ExpressionStatement","src":"16516:11:10"}},"id":2569,"nodeType":"IfStatement","src":"16425:203:10","trueBody":{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16455:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2538,"nodeType":"ExpressionStatement","src":"16455:11:10"}}]},{"expression":{"id":2571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16656:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2520,"id":2572,"nodeType":"Return","src":"16649:12:10"}]},"id":2574,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:10","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"chr","nameLocation":"16173:3:10","nodeType":"VariableDeclaration","scope":2574,"src":"16166:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2515,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:10"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2574,"src":"16200:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2518,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:10"},"scope":2753,"src":"16144:524:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2739,"nodeType":"Block","src":"17334:1331:10","statements":[{"assignments":[2583],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:10","nodeType":"VariableDeclaration","scope":2739,"src":"17344:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2588,"initialValue":{"arguments":[{"id":2586,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"17372:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2584,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:10","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:10"},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"output","nameLocation":"17401:6:10","nodeType":"VariableDeclaration","scope":2739,"src":"17388:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2589,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2598,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2594,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"17424:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:10","memberName":"length","nodeType":"MemberAccess","src":"17424:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2591,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:10"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:10","nodeType":"VariableDeclaration","scope":2739,"src":"17471:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2602,"initialValue":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:10"},{"body":{"id":2731,"nodeType":"Block","src":"17546:854:10","statements":[{"assignments":[2614],"declarations":[{"constant":false,"id":2614,"mutability":"mutable","name":"char","nameLocation":"17567:4:10","nodeType":"VariableDeclaration","scope":2731,"src":"17560:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2613,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2622,"initialValue":{"arguments":[{"arguments":[{"id":2618,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"17604:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"17612:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2617,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"17581:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2615,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:10","typeDescriptions":{}}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:10"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"17635:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2627,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"17670:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2625,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:10","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2729,"nodeType":"Block","src":"18328:62:10","statements":[{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2722,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"18346:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2725,"indexExpression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:10","subExpression":{"id":2723,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18353:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2726,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"18371:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2728,"nodeType":"ExpressionStatement","src":"18346:29:10"}]},"id":2730,"nodeType":"IfStatement","src":"17629:761:10","trueBody":{"id":2721,"nodeType":"Block","src":"17685:637:10","statements":[{"expression":{"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2636,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17703:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2639,"indexExpression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:10","subExpression":{"id":2637,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17710:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2642,"nodeType":"ExpressionStatement","src":"17703:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"17754:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"17823:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"17892:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"17961:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"18030:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2693,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"18099:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"18169:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2714,"nodeType":"IfStatement","src":"18165:143:10","trueBody":{"id":2713,"nodeType":"Block","src":"18183:125:10","statements":[{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2706,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"18261:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2709,"indexExpression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:10","subExpression":{"id":2707,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18268:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2712,"nodeType":"ExpressionStatement","src":"18261:28:10"}]}},"id":2715,"nodeType":"IfStatement","src":"18095:213:10","trueBody":{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2696,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"18113:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2699,"indexExpression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:10","subExpression":{"id":2697,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18120:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2702,"nodeType":"ExpressionStatement","src":"18113:29:10"}},"id":2716,"nodeType":"IfStatement","src":"18026:282:10","trueBody":{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2686,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"18044:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2689,"indexExpression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:10","subExpression":{"id":2687,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18051:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2692,"nodeType":"ExpressionStatement","src":"18044:28:10"}},"id":2717,"nodeType":"IfStatement","src":"17957:351:10","trueBody":{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2676,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17975:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2679,"indexExpression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:10","subExpression":{"id":2677,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17982:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2682,"nodeType":"ExpressionStatement","src":"17975:28:10"}},"id":2718,"nodeType":"IfStatement","src":"17888:420:10","trueBody":{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2666,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17906:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2669,"indexExpression":{"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:10","subExpression":{"id":2667,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17913:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2672,"nodeType":"ExpressionStatement","src":"17906:28:10"}},"id":2719,"nodeType":"IfStatement","src":"17819:489:10","trueBody":{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2656,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17837:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2659,"indexExpression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:10","subExpression":{"id":2657,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17844:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2662,"nodeType":"ExpressionStatement","src":"17837:28:10"}},"id":2720,"nodeType":"IfStatement","src":"17750:558:10","trueBody":{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2646,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17768:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2649,"indexExpression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:10","subExpression":{"id":2647,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17775:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2652,"nodeType":"ExpressionStatement","src":"17768:28:10"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"17522:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"17526:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:10","memberName":"length","nodeType":"MemberAccess","src":"17526:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2732,"initializationExpression":{"assignments":[2604],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"i","nameLocation":"17519:1:10","nodeType":"VariableDeclaration","scope":2732,"src":"17511:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2605,"nodeType":"VariableDeclarationStatement","src":"17511:9:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:10","subExpression":{"id":2610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"17543:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"17541:3:10"},"nodeType":"ForStatement","src":"17506:894:10"},{"AST":{"nativeSrc":"18498:129:10","nodeType":"YulBlock","src":"18498:129:10","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:10","nodeType":"YulIdentifier","src":"18519:6:10"},{"name":"outputLength","nativeSrc":"18527:12:10","nodeType":"YulIdentifier","src":"18527:12:10"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:10","nodeType":"YulIdentifier","src":"18512:6:10"},"nativeSrc":"18512:28:10","nodeType":"YulFunctionCall","src":"18512:28:10"},"nativeSrc":"18512:28:10","nodeType":"YulExpressionStatement","src":"18512:28:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:10","nodeType":"YulLiteral","src":"18560:4:10","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:10","nodeType":"YulIdentifier","src":"18570:6:10"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:10","nodeType":"YulLiteral","src":"18582:1:10","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:10","nodeType":"YulLiteral","src":"18589:1:10","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:10","nodeType":"YulIdentifier","src":"18596:12:10"},{"kind":"number","nativeSrc":"18610:2:10","nodeType":"YulLiteral","src":"18610:2:10","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:10","nodeType":"YulIdentifier","src":"18592:3:10"},"nativeSrc":"18592:21:10","nodeType":"YulFunctionCall","src":"18592:21:10"}],"functionName":{"name":"shr","nativeSrc":"18585:3:10","nodeType":"YulIdentifier","src":"18585:3:10"},"nativeSrc":"18585:29:10","nodeType":"YulFunctionCall","src":"18585:29:10"}],"functionName":{"name":"shl","nativeSrc":"18578:3:10","nodeType":"YulIdentifier","src":"18578:3:10"},"nativeSrc":"18578:37:10","nodeType":"YulFunctionCall","src":"18578:37:10"}],"functionName":{"name":"add","nativeSrc":"18566:3:10","nodeType":"YulIdentifier","src":"18566:3:10"},"nativeSrc":"18566:50:10","nodeType":"YulFunctionCall","src":"18566:50:10"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:10","nodeType":"YulIdentifier","src":"18553:6:10"},"nativeSrc":"18553:64:10","nodeType":"YulFunctionCall","src":"18553:64:10"},"nativeSrc":"18553:64:10","nodeType":"YulExpressionStatement","src":"18553:64:10"}]},"evmVersion":"cancun","externalReferences":[{"declaration":2590,"isOffset":false,"isSlot":false,"src":"18519:6:10","valueSize":1},{"declaration":2590,"isOffset":false,"isSlot":false,"src":"18570:6:10","valueSize":1},{"declaration":2600,"isOffset":false,"isSlot":false,"src":"18527:12:10","valueSize":1},{"declaration":2600,"isOffset":false,"isSlot":false,"src":"18596:12:10","valueSize":1}],"flags":["memory-safe"],"id":2733,"nodeType":"InlineAssembly","src":"18473:154:10"},{"expression":{"arguments":[{"id":2736,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"18651:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2734,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:10","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2581,"id":2738,"nodeType":"Return","src":"18637:21:10"}]},"documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"16674:576:10","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:10","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"input","nameLocation":"17289:5:10","nodeType":"VariableDeclaration","scope":2740,"src":"17275:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2576,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:10"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2740,"src":"17319:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2579,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:10"},"scope":2753,"src":"17255:1410:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"19050:225:10","statements":[{"AST":{"nativeSrc":"19199:70:10","nodeType":"YulBlock","src":"19199:70:10","statements":[{"nativeSrc":"19213:46:10","nodeType":"YulAssignment","src":"19213:46:10","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:10","nodeType":"YulIdentifier","src":"19232:6:10"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:10","nodeType":"YulLiteral","src":"19244:4:10","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:10","nodeType":"YulIdentifier","src":"19250:6:10"}],"functionName":{"name":"add","nativeSrc":"19240:3:10","nodeType":"YulIdentifier","src":"19240:3:10"},"nativeSrc":"19240:17:10","nodeType":"YulFunctionCall","src":"19240:17:10"}],"functionName":{"name":"add","nativeSrc":"19228:3:10","nodeType":"YulIdentifier","src":"19228:3:10"},"nativeSrc":"19228:30:10","nodeType":"YulFunctionCall","src":"19228:30:10"}],"functionName":{"name":"mload","nativeSrc":"19222:5:10","nodeType":"YulIdentifier","src":"19222:5:10"},"nativeSrc":"19222:37:10","nodeType":"YulFunctionCall","src":"19222:37:10"},"variableNames":[{"name":"value","nativeSrc":"19213:5:10","nodeType":"YulIdentifier","src":"19213:5:10"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2743,"isOffset":false,"isSlot":false,"src":"19232:6:10","valueSize":1},{"declaration":2745,"isOffset":false,"isSlot":false,"src":"19250:6:10","valueSize":1},{"declaration":2748,"isOffset":false,"isSlot":false,"src":"19213:5:10","valueSize":1}],"flags":["memory-safe"],"id":2750,"nodeType":"InlineAssembly","src":"19174:95:10"}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"18671:268:10","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:10","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:10","nodeType":"VariableDeclaration","scope":2752,"src":"18976:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2742,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"offset","nameLocation":"19005:6:10","nodeType":"VariableDeclaration","scope":2752,"src":"18997:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:10"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"value","nameLocation":"19043:5:10","nodeType":"VariableDeclaration","scope":2752,"src":"19035:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:10"},"scope":2753,"src":"18944:331:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2754,"src":"297:18980:10","usedErrors":[1411,1414,1417],"usedEvents":[]}],"src":"101:19177:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3101]},"id":3102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2755,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"138:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3101,"linearizedBaseContracts":[3101],"name":"ECDSA","nameLocation":"352:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2761,"members":[{"id":2757,"name":"NoError","nameLocation":"392:7:11","nodeType":"EnumValue","src":"392:7:11"},{"id":2758,"name":"InvalidSignature","nameLocation":"409:16:11","nodeType":"EnumValue","src":"409:16:11"},{"id":2759,"name":"InvalidSignatureLength","nameLocation":"435:22:11","nodeType":"EnumValue","src":"435:22:11"},{"id":2760,"name":"InvalidSignatureS","nameLocation":"467:17:11","nodeType":"EnumValue","src":"467:17:11"}],"name":"RecoverError","nameLocation":"369:12:11","nodeType":"EnumDefinition","src":"364:126:11"},{"documentation":{"id":2762,"nodeType":"StructuredDocumentation","src":"496:63:11","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2764,"name":"ECDSAInvalidSignature","nameLocation":"570:21:11","nodeType":"ErrorDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"src":"564:30:11"},{"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"600:60:11","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2769,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:11","nodeType":"ErrorDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"length","nameLocation":"707:6:11","nodeType":"VariableDeclaration","scope":2769,"src":"699:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:11"},"src":"665:50:11"},{"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"721:85:11","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2774,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:11","nodeType":"ErrorDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"s","nameLocation":"848:1:11","nodeType":"VariableDeclaration","scope":2774,"src":"840:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:11"},"src":"811:40:11"},{"body":{"id":2826,"nodeType":"Block","src":"2285:622:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2789,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2299:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:11","memberName":"length","nodeType":"MemberAccess","src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2824,"nodeType":"Block","src":"2793:108:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:11","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2815,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2827:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2759,"src":"2827:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2819,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2872:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:11","memberName":"length","nodeType":"MemberAccess","src":"2872:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:11","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2788,"id":2823,"nodeType":"Return","src":"2807:83:11"}]},"id":2825,"nodeType":"IfStatement","src":"2295:606:11","trueBody":{"id":2810,"nodeType":"Block","src":"2323:464:11","statements":[{"assignments":[2794],"declarations":[{"constant":false,"id":2794,"mutability":"mutable","name":"r","nameLocation":"2345:1:11","nodeType":"VariableDeclaration","scope":2810,"src":"2337:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2795,"nodeType":"VariableDeclarationStatement","src":"2337:9:11"},{"assignments":[2797],"declarations":[{"constant":false,"id":2797,"mutability":"mutable","name":"s","nameLocation":"2368:1:11","nodeType":"VariableDeclaration","scope":2810,"src":"2360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2798,"nodeType":"VariableDeclarationStatement","src":"2360:9:11"},{"assignments":[2800],"declarations":[{"constant":false,"id":2800,"mutability":"mutable","name":"v","nameLocation":"2389:1:11","nodeType":"VariableDeclaration","scope":2810,"src":"2383:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2799,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2801,"nodeType":"VariableDeclarationStatement","src":"2383:7:11"},{"AST":{"nativeSrc":"2560:171:11","nodeType":"YulBlock","src":"2560:171:11","statements":[{"nativeSrc":"2578:32:11","nodeType":"YulAssignment","src":"2578:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:11","nodeType":"YulIdentifier","src":"2593:9:11"},{"kind":"number","nativeSrc":"2604:4:11","nodeType":"YulLiteral","src":"2604:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:11","nodeType":"YulIdentifier","src":"2589:3:11"},"nativeSrc":"2589:20:11","nodeType":"YulFunctionCall","src":"2589:20:11"}],"functionName":{"name":"mload","nativeSrc":"2583:5:11","nodeType":"YulIdentifier","src":"2583:5:11"},"nativeSrc":"2583:27:11","nodeType":"YulFunctionCall","src":"2583:27:11"},"variableNames":[{"name":"r","nativeSrc":"2578:1:11","nodeType":"YulIdentifier","src":"2578:1:11"}]},{"nativeSrc":"2627:32:11","nodeType":"YulAssignment","src":"2627:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:11","nodeType":"YulIdentifier","src":"2642:9:11"},{"kind":"number","nativeSrc":"2653:4:11","nodeType":"YulLiteral","src":"2653:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:11","nodeType":"YulIdentifier","src":"2638:3:11"},"nativeSrc":"2638:20:11","nodeType":"YulFunctionCall","src":"2638:20:11"}],"functionName":{"name":"mload","nativeSrc":"2632:5:11","nodeType":"YulIdentifier","src":"2632:5:11"},"nativeSrc":"2632:27:11","nodeType":"YulFunctionCall","src":"2632:27:11"},"variableNames":[{"name":"s","nativeSrc":"2627:1:11","nodeType":"YulIdentifier","src":"2627:1:11"}]},{"nativeSrc":"2676:41:11","nodeType":"YulAssignment","src":"2676:41:11","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:11","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:11","nodeType":"YulIdentifier","src":"2699:9:11"},{"kind":"number","nativeSrc":"2710:4:11","nodeType":"YulLiteral","src":"2710:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:11","nodeType":"YulIdentifier","src":"2695:3:11"},"nativeSrc":"2695:20:11","nodeType":"YulFunctionCall","src":"2695:20:11"}],"functionName":{"name":"mload","nativeSrc":"2689:5:11","nodeType":"YulIdentifier","src":"2689:5:11"},"nativeSrc":"2689:27:11","nodeType":"YulFunctionCall","src":"2689:27:11"}],"functionName":{"name":"byte","nativeSrc":"2681:4:11","nodeType":"YulIdentifier","src":"2681:4:11"},"nativeSrc":"2681:36:11","nodeType":"YulFunctionCall","src":"2681:36:11"},"variableNames":[{"name":"v","nativeSrc":"2676:1:11","nodeType":"YulIdentifier","src":"2676:1:11"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2794,"isOffset":false,"isSlot":false,"src":"2578:1:11","valueSize":1},{"declaration":2797,"isOffset":false,"isSlot":false,"src":"2627:1:11","valueSize":1},{"declaration":2779,"isOffset":false,"isSlot":false,"src":"2593:9:11","valueSize":1},{"declaration":2779,"isOffset":false,"isSlot":false,"src":"2642:9:11","valueSize":1},{"declaration":2779,"isOffset":false,"isSlot":false,"src":"2699:9:11","valueSize":1},{"declaration":2800,"isOffset":false,"isSlot":false,"src":"2676:1:11","valueSize":1}],"flags":["memory-safe"],"id":2802,"nodeType":"InlineAssembly","src":"2535:196:11"},{"expression":{"arguments":[{"id":2804,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2762:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2805,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2768:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2806,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"2771:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2807,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"2774:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2803,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2827,2907,3015],"referencedDeclaration":3015,"src":"2751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2788,"id":2809,"nodeType":"Return","src":"2744:32:11"}]}}]},"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"857:1267:11","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:11","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"hash","nameLocation":"2166:4:11","nodeType":"VariableDeclaration","scope":2827,"src":"2158:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"signature","nameLocation":"2193:9:11","nodeType":"VariableDeclaration","scope":2827,"src":"2180:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:11"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:11","nodeType":"VariableDeclaration","scope":2827,"src":"2232:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"err","nameLocation":"2264:3:11","nodeType":"VariableDeclaration","scope":2827,"src":"2251:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2784,"nodeType":"UserDefinedTypeName","pathNode":{"id":2783,"name":"RecoverError","nameLocations":["2251:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"2251:12:11"},"referencedDeclaration":2761,"src":"2251:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:11","nodeType":"VariableDeclaration","scope":2827,"src":"2269:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:11"},"scope":3101,"src":"2129:778:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2856,"nodeType":"Block","src":"3801:168:11","statements":[{"assignments":[2838,2841,2843],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:11","nodeType":"VariableDeclaration","scope":2856,"src":"3812:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"error","nameLocation":"3844:5:11","nodeType":"VariableDeclaration","scope":2856,"src":"3831:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2840,"nodeType":"UserDefinedTypeName","pathNode":{"id":2839,"name":"RecoverError","nameLocations":["3831:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"3831:12:11"},"referencedDeclaration":2761,"src":"3831:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:11","nodeType":"VariableDeclaration","scope":2856,"src":"3851:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"id":2845,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"3882:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2846,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"3888:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2844,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2827,2907,3015],"referencedDeclaration":2827,"src":"3871:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:11"},{"expression":{"arguments":[{"id":2850,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"3920:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"id":2851,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"3927:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2849,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3908:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2761_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"3908:28:11"},{"expression":{"id":2854,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3953:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2836,"id":2855,"nodeType":"Return","src":"3946:16:11"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"2913:796:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2857,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:11","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"hash","nameLocation":"3739:4:11","nodeType":"VariableDeclaration","scope":2857,"src":"3731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"signature","nameLocation":"3758:9:11","nodeType":"VariableDeclaration","scope":2857,"src":"3745:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2831,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:11"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2857,"src":"3792:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:11"},"scope":3101,"src":"3714:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2906,"nodeType":"Block","src":"4348:342:11","statements":[{"id":2905,"nodeType":"UncheckedBlock","src":"4358:326:11","statements":[{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"s","nameLocation":"4390:1:11","nodeType":"VariableDeclaration","scope":2905,"src":"4382:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2882,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2876,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"4394:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:11","typeDescriptions":{}}},"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:11"},{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"v","nameLocation":"4591:1:11","nodeType":"VariableDeclaration","scope":2905,"src":"4585:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2883,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2897,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2889,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"4610:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:11","typeDescriptions":{}}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2885,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:11","typeDescriptions":{}}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:11"},{"expression":{"arguments":[{"id":2899,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"4659:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2900,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4665:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2901,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"4668:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2902,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"4671:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2898,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2827,2907,3015],"referencedDeclaration":3015,"src":"4648:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2873,"id":2904,"nodeType":"Return","src":"4641:32:11"}]}]},"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"3975:205:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:11","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"hash","nameLocation":"4222:4:11","nodeType":"VariableDeclaration","scope":2907,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"r","nameLocation":"4244:1:11","nodeType":"VariableDeclaration","scope":2907,"src":"4236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"vs","nameLocation":"4263:2:11","nodeType":"VariableDeclaration","scope":2907,"src":"4255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:11"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:11","nodeType":"VariableDeclaration","scope":2907,"src":"4295:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"err","nameLocation":"4327:3:11","nodeType":"VariableDeclaration","scope":2907,"src":"4314:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"RecoverError","nameLocations":["4314:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"4314:12:11"},"referencedDeclaration":2761,"src":"4314:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:11","nodeType":"VariableDeclaration","scope":2907,"src":"4332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:11"},"scope":3101,"src":"4185:505:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2939,"nodeType":"Block","src":"4903:164:11","statements":[{"assignments":[2920,2923,2925],"declarations":[{"constant":false,"id":2920,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:11","nodeType":"VariableDeclaration","scope":2939,"src":"4914:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"error","nameLocation":"4946:5:11","nodeType":"VariableDeclaration","scope":2939,"src":"4933:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2922,"nodeType":"UserDefinedTypeName","pathNode":{"id":2921,"name":"RecoverError","nameLocations":["4933:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"4933:12:11"},"referencedDeclaration":2761,"src":"4933:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:11","nodeType":"VariableDeclaration","scope":2939,"src":"4953:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2931,"initialValue":{"arguments":[{"id":2927,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"4984:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2928,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"4990:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2929,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"4993:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2926,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2827,2907,3015],"referencedDeclaration":2907,"src":"4973:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:11"},{"expression":{"arguments":[{"id":2933,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"5018:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"id":2934,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"5025:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2932,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"5006:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2761_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2936,"nodeType":"ExpressionStatement","src":"5006:28:11"},{"expression":{"id":2937,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"5051:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2918,"id":2938,"nodeType":"Return","src":"5044:16:11"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"4696:116:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2940,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:11","nodeType":"FunctionDefinition","parameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"hash","nameLocation":"4842:4:11","nodeType":"VariableDeclaration","scope":2940,"src":"4834:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"r","nameLocation":"4856:1:11","nodeType":"VariableDeclaration","scope":2940,"src":"4848:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"vs","nameLocation":"4867:2:11","nodeType":"VariableDeclaration","scope":2940,"src":"4859:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:11"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2940,"src":"4894:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:11"},"scope":3101,"src":"4817:250:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3014,"nodeType":"Block","src":"5382:1372:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2961,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6278:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"6266:164:11","trueBody":{"id":2974,"nodeType":"Block","src":"6351:79:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:11","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2969,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6385:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2760,"src":"6385:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"id":2971,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6417:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2958,"id":2973,"nodeType":"Return","src":"6365:54:11"}]}},{"assignments":[2977],"declarations":[{"constant":false,"id":2977,"mutability":"mutable","name":"signer","nameLocation":"6532:6:11","nodeType":"VariableDeclaration","scope":3014,"src":"6524:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2984,"initialValue":{"arguments":[{"id":2979,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"6551:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2980,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"6557:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2981,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"6560:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2982,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6563:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2978,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"6579:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{}}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3004,"nodeType":"IfStatement","src":"6575:113:11","trueBody":{"id":3003,"nodeType":"Block","src":"6601:87:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:11","typeDescriptions":{}}},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2995,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6635:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2758,"src":"6635:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:11","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2958,"id":3002,"nodeType":"Return","src":"6615:62:11"}]}},{"expression":{"components":[{"id":3005,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"6706:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3006,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6714:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"6714:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:11","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2958,"id":3013,"nodeType":"Return","src":"6698:49:11"}]},"documentation":{"id":2941,"nodeType":"StructuredDocumentation","src":"5073:125:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:11","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"hash","nameLocation":"5240:4:11","nodeType":"VariableDeclaration","scope":3015,"src":"5232:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"v","nameLocation":"5260:1:11","nodeType":"VariableDeclaration","scope":3015,"src":"5254:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2944,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"r","nameLocation":"5279:1:11","nodeType":"VariableDeclaration","scope":3015,"src":"5271:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"s","nameLocation":"5298:1:11","nodeType":"VariableDeclaration","scope":3015,"src":"5290:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:11"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:11","nodeType":"VariableDeclaration","scope":3015,"src":"5329:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"err","nameLocation":"5361:3:11","nodeType":"VariableDeclaration","scope":3015,"src":"5348:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2954,"nodeType":"UserDefinedTypeName","pathNode":{"id":2953,"name":"RecoverError","nameLocations":["5348:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"5348:12:11"},"referencedDeclaration":2761,"src":"5348:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:11","nodeType":"VariableDeclaration","scope":3015,"src":"5366:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:11"},"scope":3101,"src":"5203:1551:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"6981:166:11","statements":[{"assignments":[3030,3033,3035],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:11","nodeType":"VariableDeclaration","scope":3050,"src":"6992:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"error","nameLocation":"7024:5:11","nodeType":"VariableDeclaration","scope":3050,"src":"7011:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"RecoverError","nameLocations":["7011:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"7011:12:11"},"referencedDeclaration":2761,"src":"7011:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:11","nodeType":"VariableDeclaration","scope":3050,"src":"7031:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3042,"initialValue":{"arguments":[{"id":3037,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"7062:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3038,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"7068:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3039,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"7071:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3040,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"7074:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3036,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2827,2907,3015],"referencedDeclaration":3015,"src":"7051:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2761_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:11"},{"expression":{"arguments":[{"id":3044,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},{"id":3045,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7105:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3043,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"7086:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2761_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3047,"nodeType":"ExpressionStatement","src":"7086:28:11"},{"expression":{"id":3048,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"7131:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3028,"id":3049,"nodeType":"Return","src":"7124:16:11"}]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"6760:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:11","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"hash","nameLocation":"6912:4:11","nodeType":"VariableDeclaration","scope":3051,"src":"6904:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"v","nameLocation":"6924:1:11","nodeType":"VariableDeclaration","scope":3051,"src":"6918:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3019,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"r","nameLocation":"6935:1:11","nodeType":"VariableDeclaration","scope":3051,"src":"6927:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"s","nameLocation":"6946:1:11","nodeType":"VariableDeclaration","scope":3051,"src":"6938:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:11"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3051,"src":"6972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:11"},"scope":3101,"src":"6887:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"7352:460:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7366:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3061,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"7375:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"7375:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7462:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3067,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"7471:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2758,"src":"7471:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7567:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3075,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"7576:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2759,"src":"7576:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7701:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3087,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"7710:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2761_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2760,"src":"7710:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3095,"nodeType":"IfStatement","src":"7697:109:11","trueBody":{"id":3094,"nodeType":"Block","src":"7742:64:11","statements":[{"errorCall":{"arguments":[{"id":3091,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"7786:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3090,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7763:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3093,"nodeType":"RevertStatement","src":"7756:39:11"}]}},"id":3096,"nodeType":"IfStatement","src":"7563:243:11","trueBody":{"id":3085,"nodeType":"Block","src":"7613:78:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3081,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"7670:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:11","typeDescriptions":{}}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7634:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3084,"nodeType":"RevertStatement","src":"7627:53:11"}]}},"id":3097,"nodeType":"IfStatement","src":"7458:348:11","trueBody":{"id":3073,"nodeType":"Block","src":"7502:55:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3070,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"7523:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3072,"nodeType":"RevertStatement","src":"7516:30:11"}]}},"id":3098,"nodeType":"IfStatement","src":"7362:444:11","trueBody":{"id":3065,"nodeType":"Block","src":"7397:55:11","statements":[{"functionReturnParameters":3059,"id":3064,"nodeType":"Return","src":"7411:7:11"}]}}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"7153:122:11","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:11","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"error","nameLocation":"7314:5:11","nodeType":"VariableDeclaration","scope":3100,"src":"7301:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3054,"nodeType":"UserDefinedTypeName","pathNode":{"id":3053,"name":"RecoverError","nameLocations":["7301:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"7301:12:11"},"referencedDeclaration":2761,"src":"7301:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2761","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:11","nodeType":"VariableDeclaration","scope":3100,"src":"7321:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:11"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[],"src":"7352:0:11"},"scope":3101,"src":"7280:532:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3102,"src":"344:7470:11","usedErrors":[2764,2769,2774],"usedEvents":[]}],"src":"112:7703:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3328],"IERC5267":[172],"MessageHashUtils":[4527],"ShortString":[1016],"ShortStrings":[1227]},"id":3329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3103,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3329,"sourceUnit":4528,"src":"139:56:12","symbolAliases":[{"foreign":{"id":3104,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"147:16:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3329,"sourceUnit":1228,"src":"196:62:12","symbolAliases":[{"foreign":{"id":3106,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"204:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3107,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"218:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3329,"sourceUnit":173,"src":"259:55:12","symbolAliases":[{"foreign":{"id":3109,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3112,"name":"IERC5267","nameLocations":["1988:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:12"},"id":3113,"nodeType":"InheritanceSpecifier","src":"1988:8:12"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"316:1643:12","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3328,"linearizedBaseContracts":[3328,172],"name":"EIP712","nameLocation":"1978:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3115,"libraryName":{"id":3114,"name":"ShortStrings","nameLocations":["2009:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1227,"src":"2009:12:12"},"nodeType":"UsingForDirective","src":"2003:25:12"},{"constant":true,"id":3120,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:12","nodeType":"VariableDeclaration","scope":3328,"src":"2034:140:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3117,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3122,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:12","nodeType":"VariableDeclaration","scope":3328,"src":"2373:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3124,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:12","nodeType":"VariableDeclaration","scope":3328,"src":"2427:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3126,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:12","nodeType":"VariableDeclaration","scope":3328,"src":"2473:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3128,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:12","nodeType":"VariableDeclaration","scope":3328,"src":"2517:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3130,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:12","nodeType":"VariableDeclaration","scope":3328,"src":"2560:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3133,"mutability":"immutable","name":"_name","nameLocation":"2637:5:12","nodeType":"VariableDeclaration","scope":3328,"src":"2607:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":3132,"nodeType":"UserDefinedTypeName","pathNode":{"id":3131,"name":"ShortString","nameLocations":["2607:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"2607:11:12"},"referencedDeclaration":1016,"src":"2607:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3136,"mutability":"immutable","name":"_version","nameLocation":"2678:8:12","nodeType":"VariableDeclaration","scope":3328,"src":"2648:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"},"typeName":{"id":3135,"nodeType":"UserDefinedTypeName","pathNode":{"id":3134,"name":"ShortString","nameLocations":["2648:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"2648:11:12"},"referencedDeclaration":1016,"src":"2648:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3138,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:12","nodeType":"VariableDeclaration","scope":3328,"src":"2742:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3137,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3140,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:12","nodeType":"VariableDeclaration","scope":3328,"src":"2826:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3139,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3197,"nodeType":"Block","src":"3483:376:12","statements":[{"expression":{"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"3493:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3151,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"3532:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3149,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3501:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:12","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1168,"src":"3501:30:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1016_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"src":"3493:53:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"id":3154,"nodeType":"ExpressionStatement","src":"3493:53:12"},{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3155,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3556:8:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3158,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"3601:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3156,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"3567:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:12","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1168,"src":"3567:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1016_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"src":"3556:62:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"id":3161,"nodeType":"ExpressionStatement","src":"3556:62:12"},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"3628:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3166,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3658:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:12","typeDescriptions":{}}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3163,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3170,"nodeType":"ExpressionStatement","src":"3628:36:12"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3171,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"3674:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3175,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"3707:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3173,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:12","typeDescriptions":{}}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3172,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3179,"nodeType":"ExpressionStatement","src":"3674:42:12"},{"expression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"3727:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3181,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3184,"nodeType":"ExpressionStatement","src":"3727:30:12"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3185,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"3767:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3186,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3792:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3189,"nodeType":"ExpressionStatement","src":"3767:48:12"},{"expression":{"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3190,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"3825:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3193,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}],"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:12","typeDescriptions":{}}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3196,"nodeType":"ExpressionStatement","src":"3825:27:12"}]},"documentation":{"id":3141,"nodeType":"StructuredDocumentation","src":"2864:559:12","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3198,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"name","nameLocation":"3454:4:12","nodeType":"VariableDeclaration","scope":3198,"src":"3440:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3142,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"version","nameLocation":"3474:7:12","nodeType":"VariableDeclaration","scope":3198,"src":"3460:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3144,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:12"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[],"src":"3483:0:12"},"scope":3328,"src":"3428:431:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3223,"nodeType":"Block","src":"4007:200:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3206,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}],"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:12","typeDescriptions":{}}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3208,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4038:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3210,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3212,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"4070:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3221,"nodeType":"Block","src":"4146:55:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3218,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"4167:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3203,"id":3220,"nodeType":"Return","src":"4160:30:12"}]},"id":3222,"nodeType":"IfStatement","src":"4017:184:12","trueBody":{"id":3217,"nodeType":"Block","src":"4086:54:12","statements":[{"expression":{"id":3215,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"4107:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3203,"id":3216,"nodeType":"Return","src":"4100:29:12"}]}}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"3865:75:12","text":" @dev Returns the domain separator for the current chain."},"id":3224,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:12","nodeType":"FunctionDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[],"src":"3972:2:12"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3224,"src":"3998:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:12"},"scope":3328,"src":"3945:262:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3244,"nodeType":"Block","src":"4277:115:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3232,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"4315:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3233,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"4326:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3234,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"4339:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3235,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3239,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}],"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:12","typeDescriptions":{}}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3230,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:12","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3229,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3228,"id":3243,"nodeType":"Return","src":"4287:98:12"}]},"id":3245,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:12","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[],"src":"4243:2:12"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3245,"src":"4268:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:12"},"scope":3328,"src":"4213:179:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3260,"nodeType":"Block","src":"5103:90:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3255,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"5153:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3257,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5175:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3253,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"5120:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4527_$","typeString":"type(library MessageHashUtils)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:12","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4526,"src":"5120:32:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3252,"id":3259,"nodeType":"Return","src":"5113:73:12"}]},"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"4398:614:12","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:12","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:12","nodeType":"VariableDeclaration","scope":3261,"src":"5043:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:12"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"5094:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:12"},"scope":3328,"src":"5017:176:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3302,"nodeType":"Block","src":"5571:229:12","statements":[{"expression":{"components":[{"hexValue":"0f","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3281,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5632:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3283,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5659:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3285,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3289,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3328","typeString":"contract EIP712"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:12","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:12","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"nodeType":"ArrayTypeName","src":"5771:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3279,"id":3301,"nodeType":"Return","src":"5581:212:12"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"5199:39:12","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3303,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:12","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[],"src":"5264:2:12"},"returnParameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"fields","nameLocation":"5348:6:12","nodeType":"VariableDeclaration","scope":3303,"src":"5341:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3264,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"name","nameLocation":"5382:4:12","nodeType":"VariableDeclaration","scope":3303,"src":"5368:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3266,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"version","nameLocation":"5414:7:12","nodeType":"VariableDeclaration","scope":3303,"src":"5400:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3268,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:12","nodeType":"VariableDeclaration","scope":3303,"src":"5435:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:12","nodeType":"VariableDeclaration","scope":3303,"src":"5464:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3272,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"salt","nameLocation":"5511:4:12","nodeType":"VariableDeclaration","scope":3303,"src":"5503:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:12","nodeType":"VariableDeclaration","scope":3303,"src":"5529:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ArrayTypeName","src":"5529:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:12"},"scope":3328,"src":"5243:557:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3314,"nodeType":"Block","src":"6181:65:12","statements":[{"expression":{"arguments":[{"id":3311,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"6225:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3309,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"6198:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:12","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1195,"src":"6198:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1016_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3308,"id":3313,"nodeType":"Return","src":"6191:48:12"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"5806:256:12","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:12","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[],"src":"6140:2:12"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3315,"src":"6166:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3306,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:12"},"scope":3328,"src":"6120:126:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3326,"nodeType":"Block","src":"6636:71:12","statements":[{"expression":{"arguments":[{"id":3323,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"6683:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3321,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"6653:8:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1016","typeString":"ShortString"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:12","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1195,"src":"6653:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1016_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1016_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3320,"id":3325,"nodeType":"Return","src":"6646:54:12"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"6252:262:12","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3327,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:12","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"6595:2:12"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3327,"src":"6621:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3318,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:12"},"scope":3328,"src":"6572:135:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3329,"src":"1960:4749:12","usedErrors":[1024,1026],"usedEvents":[152]}],"src":"113:6597:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[3368]},"id":3369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3330,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"139:81:13","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":3368,"linearizedBaseContracts":[3368],"name":"Hashes","nameLocation":"229:6:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3354,"nodeType":"Block","src":"588:83:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"605:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"609:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3349,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"659:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"662:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3348,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"640:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:13","trueExpression":{"arguments":[{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"632:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"635:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3344,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"613:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3340,"id":3353,"nodeType":"Return","src":"598:66:13"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"242:257:13","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:13","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"a","nameLocation":"542:1:13","nodeType":"VariableDeclaration","scope":3355,"src":"534:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"b","nameLocation":"553:1:13","nodeType":"VariableDeclaration","scope":3355,"src":"545:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:13"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"579:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:13"},"scope":3368,"src":"504:167:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"879:151:13","statements":[{"AST":{"nativeSrc":"914:110:13","nodeType":"YulBlock","src":"914:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"935:4:13","nodeType":"YulLiteral","src":"935:4:13","type":"","value":"0x00"},{"name":"a","nativeSrc":"941:1:13","nodeType":"YulIdentifier","src":"941:1:13"}],"functionName":{"name":"mstore","nativeSrc":"928:6:13","nodeType":"YulIdentifier","src":"928:6:13"},"nativeSrc":"928:15:13","nodeType":"YulFunctionCall","src":"928:15:13"},"nativeSrc":"928:15:13","nodeType":"YulExpressionStatement","src":"928:15:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"963:4:13","nodeType":"YulLiteral","src":"963:4:13","type":"","value":"0x20"},{"name":"b","nativeSrc":"969:1:13","nodeType":"YulIdentifier","src":"969:1:13"}],"functionName":{"name":"mstore","nativeSrc":"956:6:13","nodeType":"YulIdentifier","src":"956:6:13"},"nativeSrc":"956:15:13","nodeType":"YulFunctionCall","src":"956:15:13"},"nativeSrc":"956:15:13","nodeType":"YulExpressionStatement","src":"956:15:13"},{"nativeSrc":"984:30:13","nodeType":"YulAssignment","src":"984:30:13","value":{"arguments":[{"kind":"number","nativeSrc":"1003:4:13","nodeType":"YulLiteral","src":"1003:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1009:4:13","nodeType":"YulLiteral","src":"1009:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"993:9:13","nodeType":"YulIdentifier","src":"993:9:13"},"nativeSrc":"993:21:13","nodeType":"YulFunctionCall","src":"993:21:13"},"variableNames":[{"name":"value","nativeSrc":"984:5:13","nodeType":"YulIdentifier","src":"984:5:13"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3358,"isOffset":false,"isSlot":false,"src":"941:1:13","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"969:1:13","valueSize":1},{"declaration":3363,"isOffset":false,"isSlot":false,"src":"984:5:13","valueSize":1}],"flags":["memory-safe"],"id":3365,"nodeType":"InlineAssembly","src":"889:135:13"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"677:109:13","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:13","nodeType":"FunctionDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"a","nameLocation":"827:1:13","nodeType":"VariableDeclaration","scope":3367,"src":"819:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"b","nameLocation":"838:1:13","nodeType":"VariableDeclaration","scope":3367,"src":"830:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:13"},"returnParameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"value","nameLocation":"872:5:13","nodeType":"VariableDeclaration","scope":3367,"src":"864:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:13"},"scope":3368,"src":"791:239:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3369,"src":"221:811:13","usedErrors":[],"usedEvents":[]}],"src":"113:920:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[3368],"MerkleProof":[4441]},"id":4442,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3370,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":3372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4442,"sourceUnit":3369,"src":"232:36:14","symbolAliases":[{"foreign":{"id":3371,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"240:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"270:1082:14","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":4441,"linearizedBaseContracts":[4441],"name":"MerkleProof","nameLocation":"1361:11:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"1379:60:14","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":3376,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:14","nodeType":"ErrorDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[],"src":"1478:2:14"},"src":"1444:37:14"},{"body":{"id":3396,"nodeType":"Block","src":"1999:57:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3390,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"2029:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3391,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"2036:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3389,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3438,3520],"referencedDeclaration":3438,"src":"2016:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3393,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"2045:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3388,"id":3395,"nodeType":"Return","src":"2009:40:14"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"1487:410:14","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:14","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"proof","nameLocation":"1935:5:14","nodeType":"VariableDeclaration","scope":3397,"src":"1918:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3379,"nodeType":"ArrayTypeName","src":"1918:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"root","nameLocation":"1950:4:14","nodeType":"VariableDeclaration","scope":3397,"src":"1942:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:14","nodeType":"VariableDeclaration","scope":3397,"src":"1956:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:14"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3397,"src":"1993:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3386,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:14"},"scope":4441,"src":"1902:154:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"2549:216:14","statements":[{"assignments":[3409],"declarations":[{"constant":false,"id":3409,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:14","nodeType":"VariableDeclaration","scope":3437,"src":"2559:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3411,"initialValue":{"id":3410,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"2582:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:14"},{"body":{"id":3433,"nodeType":"Block","src":"2639:91:14","statements":[{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"2653:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3426,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"2696:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3427,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"2710:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3429,"indexExpression":{"id":3428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2716:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3424,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2668:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3368_$","typeString":"type(library Hashes)"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:14","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"2668:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3432,"nodeType":"ExpressionStatement","src":"2653:66:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2616:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3417,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"2620:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:14","memberName":"length","nodeType":"MemberAccess","src":"2620:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"initializationExpression":{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"i","nameLocation":"2609:1:14","nodeType":"VariableDeclaration","scope":3434,"src":"2601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3415,"initialValue":{"hexValue":"30","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:14","subExpression":{"id":3420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2634:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3422,"nodeType":"ExpressionStatement","src":"2634:3:14"},"nodeType":"ForStatement","src":"2596:134:14"},{"expression":{"id":3435,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"2746:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3407,"id":3436,"nodeType":"Return","src":"2739:19:14"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"2062:390:14","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:14","nodeType":"FunctionDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"proof","nameLocation":"2496:5:14","nodeType":"VariableDeclaration","scope":3438,"src":"2479:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3400,"nodeType":"ArrayTypeName","src":"2479:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:14","nodeType":"VariableDeclaration","scope":3438,"src":"2503:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:14"},"returnParameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3438,"src":"2540:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:14"},"scope":4441,"src":"2457:308:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3469,"nodeType":"Block","src":"3376:65:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3462,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"3406:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3463,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"3413:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3464,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3419:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3461,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3438,3520],"referencedDeclaration":3520,"src":"3393:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3466,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"3430:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3460,"id":3468,"nodeType":"Return","src":"3386:48:14"}]},"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"2771:407:14","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3470,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:14","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"proof","nameLocation":"3225:5:14","nodeType":"VariableDeclaration","scope":3470,"src":"3208:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3441,"nodeType":"ArrayTypeName","src":"3208:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"root","nameLocation":"3248:4:14","nodeType":"VariableDeclaration","scope":3470,"src":"3240:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:14","nodeType":"VariableDeclaration","scope":3470,"src":"3262:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:14","nodeType":"VariableDeclaration","scope":3470,"src":"3284:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3455,"nodeType":"FunctionTypeName","parameterTypes":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3455,"src":"3293:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3455,"src":"3302:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:14"},"returnParameterTypes":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3455,"src":"3325:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:14"},"src":"3284:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:14"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"3370:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3458,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:14"},"scope":4441,"src":"3183:258:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3519,"nodeType":"Block","src":"4019:195:14","statements":[{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:14","nodeType":"VariableDeclaration","scope":3519,"src":"4029:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3494,"initialValue":{"id":3493,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"4052:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:14"},{"body":{"id":3515,"nodeType":"Block","src":"4109:70:14","statements":[{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3506,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4123:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3508,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4145:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3509,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"4159:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3511,"indexExpression":{"id":3510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"4165:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3507,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4138:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3514,"nodeType":"ExpressionStatement","src":"4123:45:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"4086:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3500,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"4090:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:14","memberName":"length","nodeType":"MemberAccess","src":"4090:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"initializationExpression":{"assignments":[3496],"declarations":[{"constant":false,"id":3496,"mutability":"mutable","name":"i","nameLocation":"4079:1:14","nodeType":"VariableDeclaration","scope":3516,"src":"4071:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3498,"initialValue":{"hexValue":"30","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:14","subExpression":{"id":3503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"4104:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3505,"nodeType":"ExpressionStatement","src":"4104:3:14"},"nodeType":"ForStatement","src":"4066:113:14"},{"expression":{"id":3517,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4195:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3490,"id":3518,"nodeType":"Return","src":"4188:19:14"}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"3447:387:14","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3520,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:14","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"proof","nameLocation":"3887:5:14","nodeType":"VariableDeclaration","scope":3520,"src":"3870:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3473,"nodeType":"ArrayTypeName","src":"3870:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:14","nodeType":"VariableDeclaration","scope":3520,"src":"3902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:14","nodeType":"VariableDeclaration","scope":3520,"src":"3924:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3485,"nodeType":"FunctionTypeName","parameterTypes":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3485,"src":"3933:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3485,"src":"3942:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:14"},"returnParameterTypes":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3485,"src":"3965:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:14"},"src":"3924:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:14"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3520,"src":"4010:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:14"},"scope":4441,"src":"3839:375:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3540,"nodeType":"Block","src":"4744:65:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3534,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"4782:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3535,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"4789:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3533,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3582,3664],"referencedDeclaration":3582,"src":"4761:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3537,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"4798:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3532,"id":3539,"nodeType":"Return","src":"4754:48:14"}]},"documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"4220:412:14","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3541,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:14","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"proof","nameLocation":"4680:5:14","nodeType":"VariableDeclaration","scope":3541,"src":"4661:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3523,"nodeType":"ArrayTypeName","src":"4661:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"root","nameLocation":"4695:4:14","nodeType":"VariableDeclaration","scope":3541,"src":"4687:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:14","nodeType":"VariableDeclaration","scope":3541,"src":"4701:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:14"},"returnParameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"4738:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3530,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:14"},"scope":4441,"src":"4637:172:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3581,"nodeType":"Block","src":"5314:216:14","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:14","nodeType":"VariableDeclaration","scope":3581,"src":"5324:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3555,"initialValue":{"id":3554,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"5347:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:14"},{"body":{"id":3577,"nodeType":"Block","src":"5404:91:14","statements":[{"expression":{"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"5418:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3570,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"5461:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3571,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"5475:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3573,"indexExpression":{"id":3572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"5481:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3568,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"5433:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3368_$","typeString":"type(library Hashes)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:14","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"5433:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3576,"nodeType":"ExpressionStatement","src":"5418:66:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"5381:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3561,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"5385:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:14","memberName":"length","nodeType":"MemberAccess","src":"5385:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3578,"initializationExpression":{"assignments":[3557],"declarations":[{"constant":false,"id":3557,"mutability":"mutable","name":"i","nameLocation":"5374:1:14","nodeType":"VariableDeclaration","scope":3578,"src":"5366:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3559,"initialValue":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:14","subExpression":{"id":3564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"5399:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"5399:3:14"},"nodeType":"ForStatement","src":"5361:134:14"},{"expression":{"id":3579,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"5511:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3551,"id":3580,"nodeType":"Return","src":"5504:19:14"}]},"documentation":{"id":3542,"nodeType":"StructuredDocumentation","src":"4815:392:14","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:14","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"proof","nameLocation":"5261:5:14","nodeType":"VariableDeclaration","scope":3582,"src":"5242:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3544,"nodeType":"ArrayTypeName","src":"5242:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:14","nodeType":"VariableDeclaration","scope":3582,"src":"5268:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:14"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3582,"src":"5305:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:14"},"scope":4441,"src":"5212:318:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3613,"nodeType":"Block","src":"6153:73:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3606,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"6191:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3607,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"6198:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3608,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6204:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3605,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3582,3664],"referencedDeclaration":3664,"src":"6170:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3610,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6215:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3604,"id":3612,"nodeType":"Return","src":"6163:56:14"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"5536:409:14","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:14","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"proof","nameLocation":"6002:5:14","nodeType":"VariableDeclaration","scope":3614,"src":"5983:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3585,"nodeType":"ArrayTypeName","src":"5983:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"root","nameLocation":"6025:4:14","nodeType":"VariableDeclaration","scope":3614,"src":"6017:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:14","nodeType":"VariableDeclaration","scope":3614,"src":"6039:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:14","nodeType":"VariableDeclaration","scope":3614,"src":"6061:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3599,"nodeType":"FunctionTypeName","parameterTypes":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"6070:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"6079:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:14"},"returnParameterTypes":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"6102:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:14"},"src":"6061:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:14"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3614,"src":"6147:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3602,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:14"},"scope":4441,"src":"5950:276:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"6816:195:14","statements":[{"assignments":[3636],"declarations":[{"constant":false,"id":3636,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:14","nodeType":"VariableDeclaration","scope":3663,"src":"6826:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3638,"initialValue":{"id":3637,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"6849:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:14"},{"body":{"id":3659,"nodeType":"Block","src":"6906:70:14","statements":[{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"6920:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3652,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"6942:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3653,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"6956:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3655,"indexExpression":{"id":3654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"6962:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3651,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"6935:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3658,"nodeType":"ExpressionStatement","src":"6920:45:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"6883:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3644,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"6887:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:14","memberName":"length","nodeType":"MemberAccess","src":"6887:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"initializationExpression":{"assignments":[3640],"declarations":[{"constant":false,"id":3640,"mutability":"mutable","name":"i","nameLocation":"6876:1:14","nodeType":"VariableDeclaration","scope":3660,"src":"6868:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3642,"initialValue":{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:14","subExpression":{"id":3647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"6901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"6901:3:14"},"nodeType":"ForStatement","src":"6863:113:14"},{"expression":{"id":3661,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"6992:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3634,"id":3662,"nodeType":"Return","src":"6985:19:14"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"6232:389:14","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:14","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"proof","nameLocation":"6684:5:14","nodeType":"VariableDeclaration","scope":3664,"src":"6665:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3617,"nodeType":"ArrayTypeName","src":"6665:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:14","nodeType":"VariableDeclaration","scope":3664,"src":"6699:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:14","nodeType":"VariableDeclaration","scope":3664,"src":"6721:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3629,"nodeType":"FunctionTypeName","parameterTypes":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"6730:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"6739:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:14"},"returnParameterTypes":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"6762:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:14"},"src":"6721:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:14"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3664,"src":"6807:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:14"},"scope":4441,"src":"6626:385:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3689,"nodeType":"Block","src":"7797:76:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3682,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7832:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3683,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"7839:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3684,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"7851:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3681,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[3848,4052],"referencedDeclaration":3848,"src":"7814:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3686,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"7862:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3680,"id":3688,"nodeType":"Return","src":"7807:59:14"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"7017:593:14","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:14","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"proof","nameLocation":"7667:5:14","nodeType":"VariableDeclaration","scope":3690,"src":"7650:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3667,"nodeType":"ArrayTypeName","src":"7650:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:14","nodeType":"VariableDeclaration","scope":3690,"src":"7682:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3669,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3670,"nodeType":"ArrayTypeName","src":"7682:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"root","nameLocation":"7724:4:14","nodeType":"VariableDeclaration","scope":3690,"src":"7716:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:14","nodeType":"VariableDeclaration","scope":3690,"src":"7738:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3675,"nodeType":"ArrayTypeName","src":"7738:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:14"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3690,"src":"7791:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3678,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:14"},"scope":4441,"src":"7615:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3847,"nodeType":"Block","src":"9159:2104:14","statements":[{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:14","nodeType":"VariableDeclaration","scope":3847,"src":"9543:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3709,"initialValue":{"expression":{"id":3707,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9563:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:14","memberName":"length","nodeType":"MemberAccess","src":"9563:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:14"},{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:14","nodeType":"VariableDeclaration","scope":3847,"src":"9586:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3714,"initialValue":{"expression":{"id":3712,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"9610:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:14","memberName":"length","nodeType":"MemberAccess","src":"9610:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"9675:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3716,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"9687:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:14","memberName":"length","nodeType":"MemberAccess","src":"9687:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"9703:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3727,"nodeType":"IfStatement","src":"9671:113:14","trueBody":{"id":3726,"nodeType":"Block","src":"9722:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3723,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"9743:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3725,"nodeType":"RevertStatement","src":"9736:37:14"}]}},{"assignments":[3732],"declarations":[{"constant":false,"id":3732,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:14","nodeType":"VariableDeclaration","scope":3847,"src":"10028:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3731,"nodeType":"ArrayTypeName","src":"10028:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3738,"initialValue":{"arguments":[{"id":3736,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10068:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3734,"nodeType":"ArrayTypeName","src":"10058:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:14"},{"assignments":[3740],"declarations":[{"constant":false,"id":3740,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:14","nodeType":"VariableDeclaration","scope":3847,"src":"10092:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3742,"initialValue":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:14"},{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:14","nodeType":"VariableDeclaration","scope":3847,"src":"10121:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3746,"initialValue":{"hexValue":"30","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:14"},{"assignments":[3748],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:14","nodeType":"VariableDeclaration","scope":3847,"src":"10150:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:14"},{"body":{"id":3810,"nodeType":"Block","src":"10590:310:14","statements":[{"assignments":[3762],"declarations":[{"constant":false,"id":3762,"mutability":"mutable","name":"a","nameLocation":"10612:1:14","nodeType":"VariableDeclaration","scope":3810,"src":"10604:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3775,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"10616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3764,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10626:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3770,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"10658:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3773,"indexExpression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:14","subExpression":{"id":3771,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"10665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:14","trueExpression":{"baseExpression":{"id":3766,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"10638:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3769,"indexExpression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:14","subExpression":{"id":3767,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"10645:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:14"},{"assignments":[3777],"declarations":[{"constant":false,"id":3777,"mutability":"mutable","name":"b","nameLocation":"10697:1:14","nodeType":"VariableDeclaration","scope":3810,"src":"10689:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3799,"initialValue":{"condition":{"baseExpression":{"id":3778,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"10701:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3780,"indexExpression":{"id":3779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"10712:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3794,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10813:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3797,"indexExpression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:14","subExpression":{"id":3795,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10819:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:14","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"10734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3782,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10744:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3788,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"10776:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3791,"indexExpression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:14","subExpression":{"id":3789,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"10783:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:14","trueExpression":{"baseExpression":{"id":3784,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"10756:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3787,"indexExpression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:14","subExpression":{"id":3785,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"10763:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:14"},{"expression":{"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3800,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"10844:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3802,"indexExpression":{"id":3801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"10851:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"10884:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"10887:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3803,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"10856:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3368_$","typeString":"type(library Hashes)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:14","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"10856:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3809,"nodeType":"ExpressionStatement","src":"10844:45:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"10566:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3756,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10570:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3811,"initializationExpression":{"assignments":[3752],"declarations":[{"constant":false,"id":3752,"mutability":"mutable","name":"i","nameLocation":"10559:1:14","nodeType":"VariableDeclaration","scope":3811,"src":"10551:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3754,"initialValue":{"hexValue":"30","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:14","subExpression":{"id":3758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"10585:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ExpressionStatement","src":"10585:3:14"},"nodeType":"ForStatement","src":"10546:354:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3812,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10914:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"11155:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3844,"nodeType":"Block","src":"11217:40:14","statements":[{"expression":{"baseExpression":{"id":3840,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"11238:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3842,"indexExpression":{"hexValue":"30","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3704,"id":3843,"nodeType":"Return","src":"11231:15:14"}]},"id":3845,"nodeType":"IfStatement","src":"11151:106:14","trueBody":{"id":3839,"nodeType":"Block","src":"11170:41:14","statements":[{"expression":{"baseExpression":{"id":3835,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"11191:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3837,"indexExpression":{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3704,"id":3838,"nodeType":"Return","src":"11184:16:14"}]}},"id":3846,"nodeType":"IfStatement","src":"10910:347:14","trueBody":{"id":3831,"nodeType":"Block","src":"10933:212:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10951:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3816,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10963:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:14","memberName":"length","nodeType":"MemberAccess","src":"10963:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3823,"nodeType":"IfStatement","src":"10947:100:14","trueBody":{"id":3822,"nodeType":"Block","src":"10977:70:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3819,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"11002:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3821,"nodeType":"RevertStatement","src":"10995:37:14"}]}},{"id":3830,"nodeType":"UncheckedBlock","src":"11060:75:14","statements":[{"expression":{"baseExpression":{"id":3824,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"11095:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3828,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"11102:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3704,"id":3829,"nodeType":"Return","src":"11088:32:14"}]}]}}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"7879:1100:14","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:14","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"proof","nameLocation":"9037:5:14","nodeType":"VariableDeclaration","scope":3848,"src":"9020:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3693,"nodeType":"ArrayTypeName","src":"9020:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:14","nodeType":"VariableDeclaration","scope":3848,"src":"9052:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3695,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"ArrayTypeName","src":"9052:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:14","nodeType":"VariableDeclaration","scope":3848,"src":"9086:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3699,"nodeType":"ArrayTypeName","src":"9086:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:14"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:14","nodeType":"VariableDeclaration","scope":3848,"src":"9139:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:14"},"scope":4441,"src":"8984:2279:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"12112:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3876,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"12147:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3877,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"12154:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3878,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"12166:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3879,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12174:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3875,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[3848,4052],"referencedDeclaration":4052,"src":"12129:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3881,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"12185:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3874,"id":3883,"nodeType":"Return","src":"12122:67:14"}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"11269:590:14","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:14","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"proof","nameLocation":"11916:5:14","nodeType":"VariableDeclaration","scope":3885,"src":"11899:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3851,"nodeType":"ArrayTypeName","src":"11899:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:14","nodeType":"VariableDeclaration","scope":3885,"src":"11931:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3853,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3854,"nodeType":"ArrayTypeName","src":"11931:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"root","nameLocation":"11973:4:14","nodeType":"VariableDeclaration","scope":3885,"src":"11965:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:14","nodeType":"VariableDeclaration","scope":3885,"src":"11987:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3859,"nodeType":"ArrayTypeName","src":"11987:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:14","nodeType":"VariableDeclaration","scope":3885,"src":"12020:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3869,"nodeType":"FunctionTypeName","parameterTypes":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"12029:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"12038:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:14"},"returnParameterTypes":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"12061:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:14"},"src":"12020:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:14"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"12106:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3872,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:14"},"scope":4441,"src":"11864:332:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4051,"nodeType":"Block","src":"13545:2083:14","statements":[{"assignments":[3911],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:14","nodeType":"VariableDeclaration","scope":4051,"src":"13929:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3914,"initialValue":{"expression":{"id":3912,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"13949:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:14","memberName":"length","nodeType":"MemberAccess","src":"13949:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:14"},{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:14","nodeType":"VariableDeclaration","scope":4051,"src":"13972:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3919,"initialValue":{"expression":{"id":3917,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"13996:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:14","memberName":"length","nodeType":"MemberAccess","src":"13996:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"14061:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3921,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"14073:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:14","memberName":"length","nodeType":"MemberAccess","src":"14073:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"14089:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3932,"nodeType":"IfStatement","src":"14057:113:14","trueBody":{"id":3931,"nodeType":"Block","src":"14108:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3928,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"14129:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3930,"nodeType":"RevertStatement","src":"14122:37:14"}]}},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:14","nodeType":"VariableDeclaration","scope":4051,"src":"14414:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3936,"nodeType":"ArrayTypeName","src":"14414:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3943,"initialValue":{"arguments":[{"id":3941,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"14454:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3939,"nodeType":"ArrayTypeName","src":"14444:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:14"},{"assignments":[3945],"declarations":[{"constant":false,"id":3945,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:14","nodeType":"VariableDeclaration","scope":4051,"src":"14478:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3947,"initialValue":{"hexValue":"30","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:14"},{"assignments":[3949],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:14","nodeType":"VariableDeclaration","scope":4051,"src":"14507:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3951,"initialValue":{"hexValue":"30","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:14"},{"assignments":[3953],"declarations":[{"constant":false,"id":3953,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:14","nodeType":"VariableDeclaration","scope":4051,"src":"14536:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3955,"initialValue":{"hexValue":"30","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:14"},{"body":{"id":4014,"nodeType":"Block","src":"14976:289:14","statements":[{"assignments":[3967],"declarations":[{"constant":false,"id":3967,"mutability":"mutable","name":"a","nameLocation":"14998:1:14","nodeType":"VariableDeclaration","scope":4014,"src":"14990:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3980,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"15002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3969,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"15012:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3975,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"15044:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3978,"indexExpression":{"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:14","subExpression":{"id":3976,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"15051:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:14","trueExpression":{"baseExpression":{"id":3971,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"15024:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3974,"indexExpression":{"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:14","subExpression":{"id":3972,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"15031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:14"},{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"b","nameLocation":"15083:1:14","nodeType":"VariableDeclaration","scope":4014,"src":"15075:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4004,"initialValue":{"condition":{"baseExpression":{"id":3983,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"15087:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3985,"indexExpression":{"id":3984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"15098:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3999,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"15199:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4002,"indexExpression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:14","subExpression":{"id":4000,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"15205:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:14","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"15120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3987,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"15130:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3993,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"15162:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3996,"indexExpression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:14","subExpression":{"id":3994,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"15169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:14","trueExpression":{"baseExpression":{"id":3989,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"15142:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3992,"indexExpression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:14","subExpression":{"id":3990,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"15149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:14"},{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4005,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"15230:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4007,"indexExpression":{"id":4006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"15237:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15249:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"15252:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4008,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"15242:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4013,"nodeType":"ExpressionStatement","src":"15230:24:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"14952:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3961,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"14956:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4015,"initializationExpression":{"assignments":[3957],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"i","nameLocation":"14945:1:14","nodeType":"VariableDeclaration","scope":4015,"src":"14937:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3959,"initialValue":{"hexValue":"30","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:14","subExpression":{"id":3963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"14971:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ExpressionStatement","src":"14971:3:14"},"nodeType":"ForStatement","src":"14932:333:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4016,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"15279:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"15520:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4048,"nodeType":"Block","src":"15582:40:14","statements":[{"expression":{"baseExpression":{"id":4044,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"15603:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4046,"indexExpression":{"hexValue":"30","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3909,"id":4047,"nodeType":"Return","src":"15596:15:14"}]},"id":4049,"nodeType":"IfStatement","src":"15516:106:14","trueBody":{"id":4043,"nodeType":"Block","src":"15535:41:14","statements":[{"expression":{"baseExpression":{"id":4039,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"15556:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4041,"indexExpression":{"hexValue":"30","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3909,"id":4042,"nodeType":"Return","src":"15549:16:14"}]}},"id":4050,"nodeType":"IfStatement","src":"15275:347:14","trueBody":{"id":4035,"nodeType":"Block","src":"15298:212:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"15316:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4020,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"15328:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:14","memberName":"length","nodeType":"MemberAccess","src":"15328:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"IfStatement","src":"15312:100:14","trueBody":{"id":4026,"nodeType":"Block","src":"15342:70:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4023,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"15367:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4025,"nodeType":"RevertStatement","src":"15360:37:14"}]}},{"id":4034,"nodeType":"UncheckedBlock","src":"15425:75:14","statements":[{"expression":{"baseExpression":{"id":4028,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"15460:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4032,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"15467:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3909,"id":4033,"nodeType":"Return","src":"15453:32:14"}]}]}}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"12202:1097:14","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4052,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:14","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"proof","nameLocation":"13357:5:14","nodeType":"VariableDeclaration","scope":4052,"src":"13340:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3888,"nodeType":"ArrayTypeName","src":"13340:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:14","nodeType":"VariableDeclaration","scope":4052,"src":"13372:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3890,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3891,"nodeType":"ArrayTypeName","src":"13372:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:14","nodeType":"VariableDeclaration","scope":4052,"src":"13406:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3894,"nodeType":"ArrayTypeName","src":"13406:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:14","nodeType":"VariableDeclaration","scope":4052,"src":"13439:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3904,"nodeType":"FunctionTypeName","parameterTypes":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3904,"src":"13448:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3904,"src":"13457:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:14"},"returnParameterTypes":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3904,"src":"13480:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:14"},"src":"13439:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:14"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:14","nodeType":"VariableDeclaration","scope":4052,"src":"13525:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:14"},"scope":4441,"src":"13304:2324:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"16436:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4070,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"16479:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4071,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"16486:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4072,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"16498:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4069,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4236,4440],"referencedDeclaration":4236,"src":"16453:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4074,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"16509:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4068,"id":4076,"nodeType":"Return","src":"16446:67:14"}]},"documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"15634:603:14","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:14","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"proof","nameLocation":"16304:5:14","nodeType":"VariableDeclaration","scope":4078,"src":"16285:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4055,"nodeType":"ArrayTypeName","src":"16285:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:14","nodeType":"VariableDeclaration","scope":4078,"src":"16319:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4057,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4058,"nodeType":"ArrayTypeName","src":"16319:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"root","nameLocation":"16363:4:14","nodeType":"VariableDeclaration","scope":4078,"src":"16355:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:14","nodeType":"VariableDeclaration","scope":4078,"src":"16377:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4063,"nodeType":"ArrayTypeName","src":"16377:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:14"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"16430:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4066,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:14"},"scope":4441,"src":"16242:278:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4235,"nodeType":"Block","src":"17820:2104:14","statements":[{"assignments":[4094],"declarations":[{"constant":false,"id":4094,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:14","nodeType":"VariableDeclaration","scope":4235,"src":"18204:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4097,"initialValue":{"expression":{"id":4095,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"18224:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:14","memberName":"length","nodeType":"MemberAccess","src":"18224:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:14"},{"assignments":[4099],"declarations":[{"constant":false,"id":4099,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:14","nodeType":"VariableDeclaration","scope":4235,"src":"18247:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4102,"initialValue":{"expression":{"id":4100,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"18271:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:14","memberName":"length","nodeType":"MemberAccess","src":"18271:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"18336:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4104,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"18348:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:14","memberName":"length","nodeType":"MemberAccess","src":"18348:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"18364:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4115,"nodeType":"IfStatement","src":"18332:113:14","trueBody":{"id":4114,"nodeType":"Block","src":"18383:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4111,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"18404:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4113,"nodeType":"RevertStatement","src":"18397:37:14"}]}},{"assignments":[4120],"declarations":[{"constant":false,"id":4120,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:14","nodeType":"VariableDeclaration","scope":4235,"src":"18689:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4119,"nodeType":"ArrayTypeName","src":"18689:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4126,"initialValue":{"arguments":[{"id":4124,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"18729:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4122,"nodeType":"ArrayTypeName","src":"18719:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:14"},{"assignments":[4128],"declarations":[{"constant":false,"id":4128,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:14","nodeType":"VariableDeclaration","scope":4235,"src":"18753:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4130,"initialValue":{"hexValue":"30","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:14"},{"assignments":[4132],"declarations":[{"constant":false,"id":4132,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:14","nodeType":"VariableDeclaration","scope":4235,"src":"18782:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4134,"initialValue":{"hexValue":"30","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:14"},{"assignments":[4136],"declarations":[{"constant":false,"id":4136,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:14","nodeType":"VariableDeclaration","scope":4235,"src":"18811:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4138,"initialValue":{"hexValue":"30","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:14"},{"body":{"id":4198,"nodeType":"Block","src":"19251:310:14","statements":[{"assignments":[4150],"declarations":[{"constant":false,"id":4150,"mutability":"mutable","name":"a","nameLocation":"19273:1:14","nodeType":"VariableDeclaration","scope":4198,"src":"19265:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4163,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"19277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4152,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"19287:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4158,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"19319:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4161,"indexExpression":{"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:14","subExpression":{"id":4159,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"19326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:14","trueExpression":{"baseExpression":{"id":4154,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"19299:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4157,"indexExpression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:14","subExpression":{"id":4155,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"19306:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:14"},{"assignments":[4165],"declarations":[{"constant":false,"id":4165,"mutability":"mutable","name":"b","nameLocation":"19358:1:14","nodeType":"VariableDeclaration","scope":4198,"src":"19350:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4187,"initialValue":{"condition":{"baseExpression":{"id":4166,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"19362:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4168,"indexExpression":{"id":4167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"19373:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4182,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"19474:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4185,"indexExpression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:14","subExpression":{"id":4183,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"19480:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:14","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"19395:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4170,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"19405:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4176,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"19437:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4179,"indexExpression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:14","subExpression":{"id":4177,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"19444:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:14","trueExpression":{"baseExpression":{"id":4172,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"19417:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4175,"indexExpression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:14","subExpression":{"id":4173,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"19424:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:14"},{"expression":{"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4188,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"19505:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4190,"indexExpression":{"id":4189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"19512:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"19545:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"19548:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4191,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"19517:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3368_$","typeString":"type(library Hashes)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:14","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"19517:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4197,"nodeType":"ExpressionStatement","src":"19505:45:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"19227:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4144,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"19231:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4199,"initializationExpression":{"assignments":[4140],"declarations":[{"constant":false,"id":4140,"mutability":"mutable","name":"i","nameLocation":"19220:1:14","nodeType":"VariableDeclaration","scope":4199,"src":"19212:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4142,"initialValue":{"hexValue":"30","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:14","subExpression":{"id":4146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"19246:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4148,"nodeType":"ExpressionStatement","src":"19246:3:14"},"nodeType":"ForStatement","src":"19207:354:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"19575:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4220,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"19816:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4232,"nodeType":"Block","src":"19878:40:14","statements":[{"expression":{"baseExpression":{"id":4228,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"19899:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4230,"indexExpression":{"hexValue":"30","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4092,"id":4231,"nodeType":"Return","src":"19892:15:14"}]},"id":4233,"nodeType":"IfStatement","src":"19812:106:14","trueBody":{"id":4227,"nodeType":"Block","src":"19831:41:14","statements":[{"expression":{"baseExpression":{"id":4223,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"19852:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4225,"indexExpression":{"hexValue":"30","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4092,"id":4226,"nodeType":"Return","src":"19845:16:14"}]}},"id":4234,"nodeType":"IfStatement","src":"19571:347:14","trueBody":{"id":4219,"nodeType":"Block","src":"19594:212:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"19612:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4204,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"19624:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:14","memberName":"length","nodeType":"MemberAccess","src":"19624:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"nodeType":"IfStatement","src":"19608:100:14","trueBody":{"id":4210,"nodeType":"Block","src":"19638:70:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4207,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"19663:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4209,"nodeType":"RevertStatement","src":"19656:37:14"}]}},{"id":4218,"nodeType":"UncheckedBlock","src":"19721:75:14","statements":[{"expression":{"baseExpression":{"id":4212,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"19756:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4216,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4213,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"19763:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4092,"id":4217,"nodeType":"Return","src":"19749:32:14"}]}]}}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"16526:1102:14","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4236,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:14","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"proof","nameLocation":"17696:5:14","nodeType":"VariableDeclaration","scope":4236,"src":"17677:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4081,"nodeType":"ArrayTypeName","src":"17677:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:14","nodeType":"VariableDeclaration","scope":4236,"src":"17711:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4083,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"ArrayTypeName","src":"17711:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:14","nodeType":"VariableDeclaration","scope":4236,"src":"17747:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4087,"nodeType":"ArrayTypeName","src":"17747:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:14"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:14","nodeType":"VariableDeclaration","scope":4236,"src":"17800:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:14"},"scope":4441,"src":"17633:2291:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4272,"nodeType":"Block","src":"20795:92:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4264,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20838:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4265,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"20845:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4266,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"20857:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4267,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"20865:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4263,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4236,4440],"referencedDeclaration":4440,"src":"20812:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4269,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"20876:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4262,"id":4271,"nodeType":"Return","src":"20805:75:14"}]},"documentation":{"id":4237,"nodeType":"StructuredDocumentation","src":"19930:600:14","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:14","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"proof","nameLocation":"20597:5:14","nodeType":"VariableDeclaration","scope":4273,"src":"20578:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4239,"nodeType":"ArrayTypeName","src":"20578:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:14","nodeType":"VariableDeclaration","scope":4273,"src":"20612:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4241,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4242,"nodeType":"ArrayTypeName","src":"20612:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"root","nameLocation":"20656:4:14","nodeType":"VariableDeclaration","scope":4273,"src":"20648:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:14","nodeType":"VariableDeclaration","scope":4273,"src":"20670:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4247,"nodeType":"ArrayTypeName","src":"20670:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:14","nodeType":"VariableDeclaration","scope":4273,"src":"20703:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4257,"nodeType":"FunctionTypeName","parameterTypes":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4257,"src":"20712:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4257,"src":"20721:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:14"},"returnParameterTypes":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4257,"src":"20744:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:14"},"src":"20703:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:14"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4273,"src":"20789:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4260,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:14"},"scope":4441,"src":"20535:352:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4439,"nodeType":"Block","src":"22250:2083:14","statements":[{"assignments":[4299],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:14","nodeType":"VariableDeclaration","scope":4439,"src":"22634:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4302,"initialValue":{"expression":{"id":4300,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"22654:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:14","memberName":"length","nodeType":"MemberAccess","src":"22654:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:14"},{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:14","nodeType":"VariableDeclaration","scope":4439,"src":"22677:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4307,"initialValue":{"expression":{"id":4305,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"22701:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:14","memberName":"length","nodeType":"MemberAccess","src":"22701:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4308,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22766:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4309,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"22778:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:14","memberName":"length","nodeType":"MemberAccess","src":"22778:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"22794:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"22762:113:14","trueBody":{"id":4319,"nodeType":"Block","src":"22813:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4316,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"22834:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4318,"nodeType":"RevertStatement","src":"22827:37:14"}]}},{"assignments":[4325],"declarations":[{"constant":false,"id":4325,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:14","nodeType":"VariableDeclaration","scope":4439,"src":"23119:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4324,"nodeType":"ArrayTypeName","src":"23119:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4331,"initialValue":{"arguments":[{"id":4329,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"23159:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4327,"nodeType":"ArrayTypeName","src":"23149:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:14"},{"assignments":[4333],"declarations":[{"constant":false,"id":4333,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:14","nodeType":"VariableDeclaration","scope":4439,"src":"23183:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4335,"initialValue":{"hexValue":"30","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:14"},{"assignments":[4337],"declarations":[{"constant":false,"id":4337,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:14","nodeType":"VariableDeclaration","scope":4439,"src":"23212:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4339,"initialValue":{"hexValue":"30","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:14"},{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:14","nodeType":"VariableDeclaration","scope":4439,"src":"23241:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4343,"initialValue":{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:14"},{"body":{"id":4402,"nodeType":"Block","src":"23681:289:14","statements":[{"assignments":[4355],"declarations":[{"constant":false,"id":4355,"mutability":"mutable","name":"a","nameLocation":"23703:1:14","nodeType":"VariableDeclaration","scope":4402,"src":"23695:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4368,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"23707:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4357,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"23717:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4363,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"23749:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4366,"indexExpression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:14","subExpression":{"id":4364,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"23756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:14","trueExpression":{"baseExpression":{"id":4359,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"23729:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4362,"indexExpression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:14","subExpression":{"id":4360,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"23736:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:14"},{"assignments":[4370],"declarations":[{"constant":false,"id":4370,"mutability":"mutable","name":"b","nameLocation":"23788:1:14","nodeType":"VariableDeclaration","scope":4402,"src":"23780:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4392,"initialValue":{"condition":{"baseExpression":{"id":4371,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"23792:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4373,"indexExpression":{"id":4372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"23803:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4387,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"23904:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4390,"indexExpression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:14","subExpression":{"id":4388,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"23910:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:14","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4374,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"23825:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4375,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"23835:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4381,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"23867:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4384,"indexExpression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:14","subExpression":{"id":4382,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"23874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:14","trueExpression":{"baseExpression":{"id":4377,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"23847:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4380,"indexExpression":{"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:14","subExpression":{"id":4378,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"23854:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:14"},{"expression":{"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4393,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"23935:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4395,"indexExpression":{"id":4394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"23942:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"23954:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"23957:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4396,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"23947:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4401,"nodeType":"ExpressionStatement","src":"23935:24:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"23657:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4349,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"23661:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4403,"initializationExpression":{"assignments":[4345],"declarations":[{"constant":false,"id":4345,"mutability":"mutable","name":"i","nameLocation":"23650:1:14","nodeType":"VariableDeclaration","scope":4403,"src":"23642:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4347,"initialValue":{"hexValue":"30","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:14","subExpression":{"id":4351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"23676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4353,"nodeType":"ExpressionStatement","src":"23676:3:14"},"nodeType":"ForStatement","src":"23637:333:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4404,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"23984:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"24225:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4436,"nodeType":"Block","src":"24287:40:14","statements":[{"expression":{"baseExpression":{"id":4432,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"24308:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4434,"indexExpression":{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4297,"id":4435,"nodeType":"Return","src":"24301:15:14"}]},"id":4437,"nodeType":"IfStatement","src":"24221:106:14","trueBody":{"id":4431,"nodeType":"Block","src":"24240:41:14","statements":[{"expression":{"baseExpression":{"id":4427,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"24261:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4429,"indexExpression":{"hexValue":"30","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4297,"id":4430,"nodeType":"Return","src":"24254:16:14"}]}},"id":4438,"nodeType":"IfStatement","src":"23980:347:14","trueBody":{"id":4423,"nodeType":"Block","src":"24003:212:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"24021:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4408,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"24033:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:14","memberName":"length","nodeType":"MemberAccess","src":"24033:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4415,"nodeType":"IfStatement","src":"24017:100:14","trueBody":{"id":4414,"nodeType":"Block","src":"24047:70:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4411,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"24072:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4413,"nodeType":"RevertStatement","src":"24065:37:14"}]}},{"id":4422,"nodeType":"UncheckedBlock","src":"24130:75:14","statements":[{"expression":{"baseExpression":{"id":4416,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"24165:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4420,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"24172:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4297,"id":4421,"nodeType":"Return","src":"24158:32:14"}]}]}}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"20893:1099:14","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4440,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:14","nodeType":"FunctionDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"proof","nameLocation":"22060:5:14","nodeType":"VariableDeclaration","scope":4440,"src":"22041:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4276,"nodeType":"ArrayTypeName","src":"22041:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:14","nodeType":"VariableDeclaration","scope":4440,"src":"22075:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4278,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4279,"nodeType":"ArrayTypeName","src":"22075:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:14","nodeType":"VariableDeclaration","scope":4440,"src":"22111:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4282,"nodeType":"ArrayTypeName","src":"22111:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4293,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:14","nodeType":"VariableDeclaration","scope":4440,"src":"22144:56:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4292,"nodeType":"FunctionTypeName","parameterTypes":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"22153:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"22162:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:14"},"returnParameterTypes":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"22185:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:14"},"src":"22144:56:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:14"},"returnParameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:14","nodeType":"VariableDeclaration","scope":4440,"src":"22230:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:14"},"scope":4441,"src":"21997:2336:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4442,"src":"1353:22982:14","usedErrors":[3376],"usedEvents":[]}],"src":"206:24130:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4527],"Strings":[2753]},"id":4528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4443,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4528,"sourceUnit":2754,"src":"149:39:15","symbolAliases":[{"foreign":{"id":4444,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"157:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"190:330:15","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4527,"linearizedBaseContracts":[4527],"name":"MessageHashUtils","nameLocation":"529:16:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":4455,"nodeType":"Block","src":"1339:341:15","statements":[{"AST":{"nativeSrc":"1374:300:15","nodeType":"YulBlock","src":"1374:300:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:15","nodeType":"YulLiteral","src":"1395:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:15","nodeType":"YulLiteral","src":"1401:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:15","nodeType":"YulIdentifier","src":"1388:6:15"},"nativeSrc":"1388:48:15","nodeType":"YulFunctionCall","src":"1388:48:15"},"nativeSrc":"1388:48:15","nodeType":"YulExpressionStatement","src":"1388:48:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:15","nodeType":"YulLiteral","src":"1497:4:15","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:15","nodeType":"YulIdentifier","src":"1503:11:15"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:15","nodeType":"YulIdentifier","src":"1490:6:15"},"nativeSrc":"1490:25:15","nodeType":"YulFunctionCall","src":"1490:25:15"},"nativeSrc":"1490:25:15","nodeType":"YulExpressionStatement","src":"1490:25:15"},{"nativeSrc":"1569:31:15","nodeType":"YulAssignment","src":"1569:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:15","nodeType":"YulLiteral","src":"1589:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:15","nodeType":"YulLiteral","src":"1595:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:15","nodeType":"YulIdentifier","src":"1579:9:15"},"nativeSrc":"1579:21:15","nodeType":"YulFunctionCall","src":"1579:21:15"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:15","nodeType":"YulIdentifier","src":"1569:6:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4452,"isOffset":false,"isSlot":false,"src":"1569:6:15","valueSize":1},{"declaration":4449,"isOffset":false,"isSlot":false,"src":"1503:11:15","valueSize":1}],"flags":["memory-safe"],"id":4454,"nodeType":"InlineAssembly","src":"1349:325:15"}]},"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"552:690:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4456,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:15","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:15","nodeType":"VariableDeclaration","scope":4456,"src":"1279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:15"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"digest","nameLocation":"1331:6:15","nodeType":"VariableDeclaration","scope":4456,"src":"1323:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:15"},"scope":4527,"src":"1247:433:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"2257:143:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4473,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"2366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:15","memberName":"length","nodeType":"MemberAccess","src":"2366:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4471,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2349:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2753_$","typeString":"type(library Strings)"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1465,"src":"2349:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4469,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:15","typeDescriptions":{}}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4477,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"2384:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4465,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:15","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:15","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4464,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4463,"id":4480,"nodeType":"Return","src":"2267:126:15"}]},"documentation":{"id":4457,"nodeType":"StructuredDocumentation","src":"1686:480:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:15","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"message","nameLocation":"2216:7:15","nodeType":"VariableDeclaration","scope":4482,"src":"2203:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4458,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:15"},"returnParameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4482,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:15"},"scope":4527,"src":"2171:229:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4501,"nodeType":"Block","src":"2854:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4496,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2910:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4497,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"2921:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4493,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4492,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4491,"id":4500,"nodeType":"Return","src":"2864:63:15"}]},"documentation":{"id":4483,"nodeType":"StructuredDocumentation","src":"2406:332:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4502,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:15","nodeType":"FunctionDefinition","parameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"validator","nameLocation":"2792:9:15","nodeType":"VariableDeclaration","scope":4502,"src":"2784:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4484,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4487,"mutability":"mutable","name":"data","nameLocation":"2816:4:15","nodeType":"VariableDeclaration","scope":4502,"src":"2803:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4486,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:15"},"returnParameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4502,"src":"2845:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:15"},"scope":4527,"src":"2743:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4513,"nodeType":"Block","src":"3216:216:15","statements":[{"AST":{"nativeSrc":"3251:175:15","nodeType":"YulBlock","src":"3251:175:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:15","nodeType":"YulLiteral","src":"3272:4:15","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:15","nodeType":"YulLiteral","src":"3278:10:15","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:15","nodeType":"YulIdentifier","src":"3265:6:15"},"nativeSrc":"3265:24:15","nodeType":"YulFunctionCall","src":"3265:24:15"},"nativeSrc":"3265:24:15","nodeType":"YulExpressionStatement","src":"3265:24:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:15","nodeType":"YulLiteral","src":"3309:4:15","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:15","nodeType":"YulLiteral","src":"3319:2:15","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:15","nodeType":"YulIdentifier","src":"3323:9:15"}],"functionName":{"name":"shl","nativeSrc":"3315:3:15","nodeType":"YulIdentifier","src":"3315:3:15"},"nativeSrc":"3315:18:15","nodeType":"YulFunctionCall","src":"3315:18:15"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:15","nodeType":"YulIdentifier","src":"3302:6:15"},"nativeSrc":"3302:32:15","nodeType":"YulFunctionCall","src":"3302:32:15"},"nativeSrc":"3302:32:15","nodeType":"YulExpressionStatement","src":"3302:32:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:15","nodeType":"YulLiteral","src":"3354:4:15","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:15","nodeType":"YulIdentifier","src":"3360:11:15"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:15","nodeType":"YulIdentifier","src":"3347:6:15"},"nativeSrc":"3347:25:15","nodeType":"YulFunctionCall","src":"3347:25:15"},"nativeSrc":"3347:25:15","nodeType":"YulExpressionStatement","src":"3347:25:15"},{"nativeSrc":"3385:31:15","nodeType":"YulAssignment","src":"3385:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:15","nodeType":"YulLiteral","src":"3405:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:15","nodeType":"YulLiteral","src":"3411:4:15","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:15","nodeType":"YulIdentifier","src":"3395:9:15"},"nativeSrc":"3395:21:15","nodeType":"YulFunctionCall","src":"3395:21:15"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:15","nodeType":"YulIdentifier","src":"3385:6:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4510,"isOffset":false,"isSlot":false,"src":"3385:6:15","valueSize":1},{"declaration":4507,"isOffset":false,"isSlot":false,"src":"3360:11:15","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"3323:9:15","valueSize":1}],"flags":["memory-safe"],"id":4512,"nodeType":"InlineAssembly","src":"3226:200:15"}]},"documentation":{"id":4503,"nodeType":"StructuredDocumentation","src":"2940:129:15","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4514,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:15","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"validator","nameLocation":"3132:9:15","nodeType":"VariableDeclaration","scope":4514,"src":"3124:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4504,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4507,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:15","nodeType":"VariableDeclaration","scope":4514,"src":"3151:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:15"},"returnParameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"digest","nameLocation":"3208:6:15","nodeType":"VariableDeclaration","scope":4514,"src":"3200:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:15"},"scope":4527,"src":"3074:358:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4525,"nodeType":"Block","src":"3983:265:15","statements":[{"AST":{"nativeSrc":"4018:224:15","nodeType":"YulBlock","src":"4018:224:15","statements":[{"nativeSrc":"4032:22:15","nodeType":"YulVariableDeclaration","src":"4032:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:15","nodeType":"YulLiteral","src":"4049:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:15","nodeType":"YulIdentifier","src":"4043:5:15"},"nativeSrc":"4043:11:15","nodeType":"YulFunctionCall","src":"4043:11:15"},"variables":[{"name":"ptr","nativeSrc":"4036:3:15","nodeType":"YulTypedName","src":"4036:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:15","nodeType":"YulIdentifier","src":"4074:3:15"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:15","nodeType":"YulLiteral","src":"4079:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:15","nodeType":"YulIdentifier","src":"4067:6:15"},"nativeSrc":"4067:23:15","nodeType":"YulFunctionCall","src":"4067:23:15"},"nativeSrc":"4067:23:15","nodeType":"YulExpressionStatement","src":"4067:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:15","nodeType":"YulIdentifier","src":"4114:3:15"},{"kind":"number","nativeSrc":"4119:4:15","nodeType":"YulLiteral","src":"4119:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:15","nodeType":"YulIdentifier","src":"4110:3:15"},"nativeSrc":"4110:14:15","nodeType":"YulFunctionCall","src":"4110:14:15"},{"name":"domainSeparator","nativeSrc":"4126:15:15","nodeType":"YulIdentifier","src":"4126:15:15"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:15","nodeType":"YulIdentifier","src":"4103:6:15"},"nativeSrc":"4103:39:15","nodeType":"YulFunctionCall","src":"4103:39:15"},"nativeSrc":"4103:39:15","nodeType":"YulExpressionStatement","src":"4103:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:15","nodeType":"YulIdentifier","src":"4166:3:15"},{"kind":"number","nativeSrc":"4171:4:15","nodeType":"YulLiteral","src":"4171:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:15","nodeType":"YulIdentifier","src":"4162:3:15"},"nativeSrc":"4162:14:15","nodeType":"YulFunctionCall","src":"4162:14:15"},{"name":"structHash","nativeSrc":"4178:10:15","nodeType":"YulIdentifier","src":"4178:10:15"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:15","nodeType":"YulIdentifier","src":"4155:6:15"},"nativeSrc":"4155:34:15","nodeType":"YulFunctionCall","src":"4155:34:15"},"nativeSrc":"4155:34:15","nodeType":"YulExpressionStatement","src":"4155:34:15"},{"nativeSrc":"4202:30:15","nodeType":"YulAssignment","src":"4202:30:15","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:15","nodeType":"YulIdentifier","src":"4222:3:15"},{"kind":"number","nativeSrc":"4227:4:15","nodeType":"YulLiteral","src":"4227:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:15","nodeType":"YulIdentifier","src":"4212:9:15"},"nativeSrc":"4212:20:15","nodeType":"YulFunctionCall","src":"4212:20:15"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:15","nodeType":"YulIdentifier","src":"4202:6:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4522,"isOffset":false,"isSlot":false,"src":"4202:6:15","valueSize":1},{"declaration":4517,"isOffset":false,"isSlot":false,"src":"4126:15:15","valueSize":1},{"declaration":4519,"isOffset":false,"isSlot":false,"src":"4178:10:15","valueSize":1}],"flags":["memory-safe"],"id":4524,"nodeType":"InlineAssembly","src":"3993:249:15"}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"3438:431:15","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4526,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:15","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:15","nodeType":"VariableDeclaration","scope":4526,"src":"3899:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:15","nodeType":"VariableDeclaration","scope":4526,"src":"3924:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:15"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"digest","nameLocation":"3975:6:15","nodeType":"VariableDeclaration","scope":4526,"src":"3967:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:15"},"scope":4527,"src":"3874:374:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4528,"src":"521:3729:15","usedErrors":[],"usedEvents":[]}],"src":"123:4128:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6148],"Panic":[1010],"SafeCast":[7913]},"id":6149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4529,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6149,"sourceUnit":1011,"src":"129:35:16","symbolAliases":[{"foreign":{"id":4530,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"137:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6149,"sourceUnit":7914,"src":"165:40:16","symbolAliases":[{"foreign":{"id":4532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4534,"nodeType":"StructuredDocumentation","src":"207:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6148,"linearizedBaseContracts":[6148],"name":"Math","nameLocation":"289:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4539,"members":[{"id":4535,"name":"Floor","nameLocation":"324:5:16","nodeType":"EnumValue","src":"324:5:16"},{"id":4536,"name":"Ceil","nameLocation":"367:4:16","nodeType":"EnumValue","src":"367:4:16"},{"id":4537,"name":"Trunc","nameLocation":"409:5:16","nodeType":"EnumValue","src":"409:5:16"},{"id":4538,"name":"Expand","nameLocation":"439:6:16","nodeType":"EnumValue","src":"439:6:16"}],"name":"Rounding","nameLocation":"305:8:16","nodeType":"EnumDefinition","src":"300:169:16"},{"body":{"id":4552,"nodeType":"Block","src":"731:112:16","statements":[{"AST":{"nativeSrc":"766:71:16","nodeType":"YulBlock","src":"766:71:16","statements":[{"nativeSrc":"780:16:16","nodeType":"YulAssignment","src":"780:16:16","value":{"arguments":[{"name":"a","nativeSrc":"791:1:16","nodeType":"YulIdentifier","src":"791:1:16"},{"name":"b","nativeSrc":"794:1:16","nodeType":"YulIdentifier","src":"794:1:16"}],"functionName":{"name":"add","nativeSrc":"787:3:16","nodeType":"YulIdentifier","src":"787:3:16"},"nativeSrc":"787:9:16","nodeType":"YulFunctionCall","src":"787:9:16"},"variableNames":[{"name":"low","nativeSrc":"780:3:16","nodeType":"YulIdentifier","src":"780:3:16"}]},{"nativeSrc":"809:18:16","nodeType":"YulAssignment","src":"809:18:16","value":{"arguments":[{"name":"low","nativeSrc":"820:3:16","nodeType":"YulIdentifier","src":"820:3:16"},{"name":"a","nativeSrc":"825:1:16","nodeType":"YulIdentifier","src":"825:1:16"}],"functionName":{"name":"lt","nativeSrc":"817:2:16","nodeType":"YulIdentifier","src":"817:2:16"},"nativeSrc":"817:10:16","nodeType":"YulFunctionCall","src":"817:10:16"},"variableNames":[{"name":"high","nativeSrc":"809:4:16","nodeType":"YulIdentifier","src":"809:4:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4542,"isOffset":false,"isSlot":false,"src":"791:1:16","valueSize":1},{"declaration":4542,"isOffset":false,"isSlot":false,"src":"825:1:16","valueSize":1},{"declaration":4544,"isOffset":false,"isSlot":false,"src":"794:1:16","valueSize":1},{"declaration":4547,"isOffset":false,"isSlot":false,"src":"809:4:16","valueSize":1},{"declaration":4549,"isOffset":false,"isSlot":false,"src":"780:3:16","valueSize":1},{"declaration":4549,"isOffset":false,"isSlot":false,"src":"820:3:16","valueSize":1}],"flags":["memory-safe"],"id":4551,"nodeType":"InlineAssembly","src":"741:96:16"}]},"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"475:163:16","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:16","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"a","nameLocation":"667:1:16","nodeType":"VariableDeclaration","scope":4553,"src":"659:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"b","nameLocation":"678:1:16","nodeType":"VariableDeclaration","scope":4553,"src":"670:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:16"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"high","nameLocation":"712:4:16","nodeType":"VariableDeclaration","scope":4553,"src":"704:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"low","nameLocation":"726:3:16","nodeType":"VariableDeclaration","scope":4553,"src":"718:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:16"},"scope":6148,"src":"643:200:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"1115:462:16","statements":[{"AST":{"nativeSrc":"1437:134:16","nodeType":"YulBlock","src":"1437:134:16","statements":[{"nativeSrc":"1451:30:16","nodeType":"YulVariableDeclaration","src":"1451:30:16","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:16","nodeType":"YulIdentifier","src":"1468:1:16"},{"name":"b","nativeSrc":"1471:1:16","nodeType":"YulIdentifier","src":"1471:1:16"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:16","nodeType":"YulLiteral","src":"1478:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:16","nodeType":"YulIdentifier","src":"1474:3:16"},"nativeSrc":"1474:6:16","nodeType":"YulFunctionCall","src":"1474:6:16"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:16","nodeType":"YulIdentifier","src":"1461:6:16"},"nativeSrc":"1461:20:16","nodeType":"YulFunctionCall","src":"1461:20:16"},"variables":[{"name":"mm","nativeSrc":"1455:2:16","nodeType":"YulTypedName","src":"1455:2:16","type":""}]},{"nativeSrc":"1494:16:16","nodeType":"YulAssignment","src":"1494:16:16","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:16","nodeType":"YulIdentifier","src":"1505:1:16"},{"name":"b","nativeSrc":"1508:1:16","nodeType":"YulIdentifier","src":"1508:1:16"}],"functionName":{"name":"mul","nativeSrc":"1501:3:16","nodeType":"YulIdentifier","src":"1501:3:16"},"nativeSrc":"1501:9:16","nodeType":"YulFunctionCall","src":"1501:9:16"},"variableNames":[{"name":"low","nativeSrc":"1494:3:16","nodeType":"YulIdentifier","src":"1494:3:16"}]},{"nativeSrc":"1523:38:16","nodeType":"YulAssignment","src":"1523:38:16","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:16","nodeType":"YulIdentifier","src":"1539:2:16"},{"name":"low","nativeSrc":"1543:3:16","nodeType":"YulIdentifier","src":"1543:3:16"}],"functionName":{"name":"sub","nativeSrc":"1535:3:16","nodeType":"YulIdentifier","src":"1535:3:16"},"nativeSrc":"1535:12:16","nodeType":"YulFunctionCall","src":"1535:12:16"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:16","nodeType":"YulIdentifier","src":"1552:2:16"},{"name":"low","nativeSrc":"1556:3:16","nodeType":"YulIdentifier","src":"1556:3:16"}],"functionName":{"name":"lt","nativeSrc":"1549:2:16","nodeType":"YulIdentifier","src":"1549:2:16"},"nativeSrc":"1549:11:16","nodeType":"YulFunctionCall","src":"1549:11:16"}],"functionName":{"name":"sub","nativeSrc":"1531:3:16","nodeType":"YulIdentifier","src":"1531:3:16"},"nativeSrc":"1531:30:16","nodeType":"YulFunctionCall","src":"1531:30:16"},"variableNames":[{"name":"high","nativeSrc":"1523:4:16","nodeType":"YulIdentifier","src":"1523:4:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4556,"isOffset":false,"isSlot":false,"src":"1468:1:16","valueSize":1},{"declaration":4556,"isOffset":false,"isSlot":false,"src":"1505:1:16","valueSize":1},{"declaration":4558,"isOffset":false,"isSlot":false,"src":"1471:1:16","valueSize":1},{"declaration":4558,"isOffset":false,"isSlot":false,"src":"1508:1:16","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"1523:4:16","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"1494:3:16","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"1543:3:16","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"1556:3:16","valueSize":1}],"flags":["memory-safe"],"id":4565,"nodeType":"InlineAssembly","src":"1412:159:16"}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"849:173:16","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:16","nodeType":"FunctionDefinition","parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"a","nameLocation":"1051:1:16","nodeType":"VariableDeclaration","scope":4567,"src":"1043:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4558,"mutability":"mutable","name":"b","nameLocation":"1062:1:16","nodeType":"VariableDeclaration","scope":4567,"src":"1054:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:16"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"high","nameLocation":"1096:4:16","nodeType":"VariableDeclaration","scope":4567,"src":"1088:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"low","nameLocation":"1110:3:16","nodeType":"VariableDeclaration","scope":4567,"src":"1102:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:16"},"scope":6148,"src":"1027:550:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4601,"nodeType":"Block","src":"1784:149:16","statements":[{"id":4600,"nodeType":"UncheckedBlock","src":"1794:133:16","statements":[{"assignments":[4580],"declarations":[{"constant":false,"id":4580,"mutability":"mutable","name":"c","nameLocation":"1826:1:16","nodeType":"VariableDeclaration","scope":4600,"src":"1818:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4584,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"1830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:16"},{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"1849:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"1859:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"1864:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4590,"nodeType":"ExpressionStatement","src":"1849:16:16"},{"expression":{"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1879:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"1888:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"1908:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4593,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"1892:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"1892:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4599,"nodeType":"ExpressionStatement","src":"1879:37:16"}]}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"1583:105:16","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:16","nodeType":"FunctionDefinition","parameters":{"id":4573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"a","nameLocation":"1717:1:16","nodeType":"VariableDeclaration","scope":4602,"src":"1709:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4572,"mutability":"mutable","name":"b","nameLocation":"1728:1:16","nodeType":"VariableDeclaration","scope":4602,"src":"1720:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:16"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"success","nameLocation":"1759:7:16","nodeType":"VariableDeclaration","scope":4602,"src":"1754:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4574,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"result","nameLocation":"1776:6:16","nodeType":"VariableDeclaration","scope":4602,"src":"1768:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:16"},"scope":6148,"src":"1693:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4636,"nodeType":"Block","src":"2143:149:16","statements":[{"id":4635,"nodeType":"UncheckedBlock","src":"2153:133:16","statements":[{"assignments":[4615],"declarations":[{"constant":false,"id":4615,"mutability":"mutable","name":"c","nameLocation":"2185:1:16","nodeType":"VariableDeclaration","scope":4635,"src":"2177:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"2189:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"2193:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:16"},{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4620,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2208:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"2218:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"2223:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4625,"nodeType":"ExpressionStatement","src":"2208:16:16"},{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2238:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"2247:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4630,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2267:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4628,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"2251:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"2251:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"2238:37:16"}]}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"1939:108:16","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4637,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:16","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"a","nameLocation":"2076:1:16","nodeType":"VariableDeclaration","scope":4637,"src":"2068:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"b","nameLocation":"2087:1:16","nodeType":"VariableDeclaration","scope":4637,"src":"2079:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:16"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"success","nameLocation":"2118:7:16","nodeType":"VariableDeclaration","scope":4637,"src":"2113:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4609,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"result","nameLocation":"2135:6:16","nodeType":"VariableDeclaration","scope":4637,"src":"2127:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:16"},"scope":6148,"src":"2052:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4666,"nodeType":"Block","src":"2505:391:16","statements":[{"id":4665,"nodeType":"UncheckedBlock","src":"2515:375:16","statements":[{"assignments":[4650],"declarations":[{"constant":false,"id":4650,"mutability":"mutable","name":"c","nameLocation":"2547:1:16","nodeType":"VariableDeclaration","scope":4665,"src":"2539:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"2551:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2555:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:16"},{"AST":{"nativeSrc":"2595:188:16","nodeType":"YulBlock","src":"2595:188:16","statements":[{"nativeSrc":"2727:42:16","nodeType":"YulAssignment","src":"2727:42:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:16","nodeType":"YulIdentifier","src":"2748:1:16"},{"name":"a","nativeSrc":"2751:1:16","nodeType":"YulIdentifier","src":"2751:1:16"}],"functionName":{"name":"div","nativeSrc":"2744:3:16","nodeType":"YulIdentifier","src":"2744:3:16"},"nativeSrc":"2744:9:16","nodeType":"YulFunctionCall","src":"2744:9:16"},{"name":"b","nativeSrc":"2755:1:16","nodeType":"YulIdentifier","src":"2755:1:16"}],"functionName":{"name":"eq","nativeSrc":"2741:2:16","nodeType":"YulIdentifier","src":"2741:2:16"},"nativeSrc":"2741:16:16","nodeType":"YulFunctionCall","src":"2741:16:16"},{"arguments":[{"name":"a","nativeSrc":"2766:1:16","nodeType":"YulIdentifier","src":"2766:1:16"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:16","nodeType":"YulIdentifier","src":"2759:6:16"},"nativeSrc":"2759:9:16","nodeType":"YulFunctionCall","src":"2759:9:16"}],"functionName":{"name":"or","nativeSrc":"2738:2:16","nodeType":"YulIdentifier","src":"2738:2:16"},"nativeSrc":"2738:31:16","nodeType":"YulFunctionCall","src":"2738:31:16"},"variableNames":[{"name":"success","nativeSrc":"2727:7:16","nodeType":"YulIdentifier","src":"2727:7:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4640,"isOffset":false,"isSlot":false,"src":"2751:1:16","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"2766:1:16","valueSize":1},{"declaration":4642,"isOffset":false,"isSlot":false,"src":"2755:1:16","valueSize":1},{"declaration":4650,"isOffset":false,"isSlot":false,"src":"2748:1:16","valueSize":1},{"declaration":4645,"isOffset":false,"isSlot":false,"src":"2727:7:16","valueSize":1}],"flags":["memory-safe"],"id":4655,"nodeType":"InlineAssembly","src":"2570:213:16"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"2842:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"2851:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4660,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4658,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"2855:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"2855:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"2842:37:16"}]}]},"documentation":{"id":4638,"nodeType":"StructuredDocumentation","src":"2298:111:16","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:16","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"a","nameLocation":"2438:1:16","nodeType":"VariableDeclaration","scope":4667,"src":"2430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"b","nameLocation":"2449:1:16","nodeType":"VariableDeclaration","scope":4667,"src":"2441:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:16"},"returnParameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"success","nameLocation":"2480:7:16","nodeType":"VariableDeclaration","scope":4667,"src":"2475:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4644,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"result","nameLocation":"2497:6:16","nodeType":"VariableDeclaration","scope":4667,"src":"2489:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:16"},"scope":6148,"src":"2414:482:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4687,"nodeType":"Block","src":"3111:231:16","statements":[{"id":4686,"nodeType":"UncheckedBlock","src":"3121:215:16","statements":[{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"3145:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"3155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"ExpressionStatement","src":"3145:15:16"},{"AST":{"nativeSrc":"3199:127:16","nodeType":"YulBlock","src":"3199:127:16","statements":[{"nativeSrc":"3293:19:16","nodeType":"YulAssignment","src":"3293:19:16","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:16","nodeType":"YulIdentifier","src":"3307:1:16"},{"name":"b","nativeSrc":"3310:1:16","nodeType":"YulIdentifier","src":"3310:1:16"}],"functionName":{"name":"div","nativeSrc":"3303:3:16","nodeType":"YulIdentifier","src":"3303:3:16"},"nativeSrc":"3303:9:16","nodeType":"YulFunctionCall","src":"3303:9:16"},"variableNames":[{"name":"result","nativeSrc":"3293:6:16","nodeType":"YulIdentifier","src":"3293:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4670,"isOffset":false,"isSlot":false,"src":"3307:1:16","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"3310:1:16","valueSize":1},{"declaration":4677,"isOffset":false,"isSlot":false,"src":"3293:6:16","valueSize":1}],"flags":["memory-safe"],"id":4685,"nodeType":"InlineAssembly","src":"3174:152:16"}]}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"2902:113:16","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4688,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:16","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"a","nameLocation":"3044:1:16","nodeType":"VariableDeclaration","scope":4688,"src":"3036:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4672,"mutability":"mutable","name":"b","nameLocation":"3055:1:16","nodeType":"VariableDeclaration","scope":4688,"src":"3047:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:16"},"returnParameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"success","nameLocation":"3086:7:16","nodeType":"VariableDeclaration","scope":4688,"src":"3081:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4674,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"result","nameLocation":"3103:6:16","nodeType":"VariableDeclaration","scope":4688,"src":"3095:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:16"},"scope":6148,"src":"3020:322:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4708,"nodeType":"Block","src":"3567:231:16","statements":[{"id":4707,"nodeType":"UncheckedBlock","src":"3577:215:16","statements":[{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"3601:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"3611:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"ExpressionStatement","src":"3601:15:16"},{"AST":{"nativeSrc":"3655:127:16","nodeType":"YulBlock","src":"3655:127:16","statements":[{"nativeSrc":"3749:19:16","nodeType":"YulAssignment","src":"3749:19:16","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:16","nodeType":"YulIdentifier","src":"3763:1:16"},{"name":"b","nativeSrc":"3766:1:16","nodeType":"YulIdentifier","src":"3766:1:16"}],"functionName":{"name":"mod","nativeSrc":"3759:3:16","nodeType":"YulIdentifier","src":"3759:3:16"},"nativeSrc":"3759:9:16","nodeType":"YulFunctionCall","src":"3759:9:16"},"variableNames":[{"name":"result","nativeSrc":"3749:6:16","nodeType":"YulIdentifier","src":"3749:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4691,"isOffset":false,"isSlot":false,"src":"3763:1:16","valueSize":1},{"declaration":4693,"isOffset":false,"isSlot":false,"src":"3766:1:16","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"3749:6:16","valueSize":1}],"flags":["memory-safe"],"id":4706,"nodeType":"InlineAssembly","src":"3630:152:16"}]}]},"documentation":{"id":4689,"nodeType":"StructuredDocumentation","src":"3348:123:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4709,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:16","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"a","nameLocation":"3500:1:16","nodeType":"VariableDeclaration","scope":4709,"src":"3492:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"b","nameLocation":"3511:1:16","nodeType":"VariableDeclaration","scope":4709,"src":"3503:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:16"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"success","nameLocation":"3542:7:16","nodeType":"VariableDeclaration","scope":4709,"src":"3537:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4695,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4698,"mutability":"mutable","name":"result","nameLocation":"3559:6:16","nodeType":"VariableDeclaration","scope":4709,"src":"3551:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:16"},"scope":6148,"src":"3476:322:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4738,"nodeType":"Block","src":"3989:122:16","statements":[{"assignments":[4720,4722],"declarations":[{"constant":false,"id":4720,"mutability":"mutable","name":"success","nameLocation":"4005:7:16","nodeType":"VariableDeclaration","scope":4738,"src":"4000:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4719,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"result","nameLocation":"4022:6:16","nodeType":"VariableDeclaration","scope":4738,"src":"4014:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"arguments":[{"id":4724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"4039:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4725,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"4042:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4723,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"4032:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:16"},{"expression":{"arguments":[{"id":4729,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"4069:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"4078:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4731,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:16","memberName":"max","nodeType":"MemberAccess","src":"4086:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4728,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"4061:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4718,"id":4737,"nodeType":"Return","src":"4054:50:16"}]},"documentation":{"id":4710,"nodeType":"StructuredDocumentation","src":"3804:103:16","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4739,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:16","nodeType":"FunctionDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"a","nameLocation":"3943:1:16","nodeType":"VariableDeclaration","scope":4739,"src":"3935:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"b","nameLocation":"3954:1:16","nodeType":"VariableDeclaration","scope":4739,"src":"3946:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:16"},"returnParameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4739,"src":"3980:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:16"},"scope":6148,"src":"3912:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"4294:73:16","statements":[{"assignments":[null,4750],"declarations":[null,{"constant":false,"id":4750,"mutability":"mutable","name":"result","nameLocation":"4315:6:16","nodeType":"VariableDeclaration","scope":4758,"src":"4307:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4755,"initialValue":{"arguments":[{"id":4752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"4332:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"4335:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4751,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"4325:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:16"},{"expression":{"id":4756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"4354:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4748,"id":4757,"nodeType":"Return","src":"4347:13:16"}]},"documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"4117:95:16","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:16","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"a","nameLocation":"4248:1:16","nodeType":"VariableDeclaration","scope":4759,"src":"4240:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4744,"mutability":"mutable","name":"b","nameLocation":"4259:1:16","nodeType":"VariableDeclaration","scope":4759,"src":"4251:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:16"},"returnParameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"4285:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:16"},"scope":6148,"src":"4217:150:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4788,"nodeType":"Block","src":"4564:122:16","statements":[{"assignments":[4770,4772],"declarations":[{"constant":false,"id":4770,"mutability":"mutable","name":"success","nameLocation":"4580:7:16","nodeType":"VariableDeclaration","scope":4788,"src":"4575:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4769,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4772,"mutability":"mutable","name":"result","nameLocation":"4597:6:16","nodeType":"VariableDeclaration","scope":4788,"src":"4589:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4777,"initialValue":{"arguments":[{"id":4774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"4614:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"4617:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"4607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:16"},{"expression":{"arguments":[{"id":4779,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"4644:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"4653:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:16","memberName":"max","nodeType":"MemberAccess","src":"4661:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4778,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"4636:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4768,"id":4787,"nodeType":"Return","src":"4629:50:16"}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"4373:109:16","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4789,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:16","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"a","nameLocation":"4518:1:16","nodeType":"VariableDeclaration","scope":4789,"src":"4510:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4764,"mutability":"mutable","name":"b","nameLocation":"4529:1:16","nodeType":"VariableDeclaration","scope":4789,"src":"4521:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:16"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4789,"src":"4555:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:16"},"scope":6148,"src":"4487:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4815,"nodeType":"Block","src":"5158:207:16","statements":[{"id":4814,"nodeType":"UncheckedBlock","src":"5168:191:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5306:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"5312:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4803,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5316:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4808,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"5337:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4806,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"5321:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"5321:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4800,"id":4813,"nodeType":"Return","src":"5299:49:16"}]}]},"documentation":{"id":4790,"nodeType":"StructuredDocumentation","src":"4692:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4816,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:16","nodeType":"FunctionDefinition","parameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"condition","nameLocation":"5093:9:16","nodeType":"VariableDeclaration","scope":4816,"src":"5088:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4791,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"a","nameLocation":"5112:1:16","nodeType":"VariableDeclaration","scope":4816,"src":"5104:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"b","nameLocation":"5123:1:16","nodeType":"VariableDeclaration","scope":4816,"src":"5115:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:16"},"returnParameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4816,"src":"5149:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:16"},"scope":6148,"src":"5071:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4834,"nodeType":"Block","src":"5502:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"5527:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"5531:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"5534:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"5537:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4826,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"5519:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4825,"id":4833,"nodeType":"Return","src":"5512:27:16"}]},"documentation":{"id":4817,"nodeType":"StructuredDocumentation","src":"5371:59:16","text":" @dev Returns the largest of two numbers."},"id":4835,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:16","nodeType":"FunctionDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"a","nameLocation":"5456:1:16","nodeType":"VariableDeclaration","scope":4835,"src":"5448:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"b","nameLocation":"5467:1:16","nodeType":"VariableDeclaration","scope":4835,"src":"5459:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:16"},"returnParameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4835,"src":"5493:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4823,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:16"},"scope":6148,"src":"5435:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"5684:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5709:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"5713:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5716:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"5719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"5701:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4844,"id":4852,"nodeType":"Return","src":"5694:27:16"}]},"documentation":{"id":4836,"nodeType":"StructuredDocumentation","src":"5552:60:16","text":" @dev Returns the smallest of two numbers."},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:16","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"a","nameLocation":"5638:1:16","nodeType":"VariableDeclaration","scope":4854,"src":"5630:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"b","nameLocation":"5649:1:16","nodeType":"VariableDeclaration","scope":4854,"src":"5641:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:16"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"5675:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:16"},"scope":6148,"src":"5617:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4876,"nodeType":"Block","src":"5912:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"5967:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4865,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"5971:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"5977:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"5981:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4863,"id":4875,"nodeType":"Return","src":"5959:28:16"}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"5734:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4877,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:16","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"a","nameLocation":"5866:1:16","nodeType":"VariableDeclaration","scope":4877,"src":"5858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"b","nameLocation":"5877:1:16","nodeType":"VariableDeclaration","scope":4877,"src":"5869:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:16"},"returnParameters":{"id":4863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4877,"src":"5903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:16"},"scope":6148,"src":"5841:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4917,"nodeType":"Block","src":"6286:633:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"6300:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4898,"nodeType":"IfStatement","src":"6296:150:16","trueBody":{"id":4897,"nodeType":"Block","src":"6308:138:16","statements":[{"expression":{"arguments":[{"expression":{"id":4893,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6412:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":977,"src":"6412:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4890,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6400:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1009,"src":"6400:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4896,"nodeType":"ExpressionStatement","src":"6400:35:16"}]}},{"id":4916,"nodeType":"UncheckedBlock","src":"6829:84:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"6876:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4899,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"6860:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"6860:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"6887:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"6896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4886,"id":4915,"nodeType":"Return","src":"6853:49:16"}]}]},"documentation":{"id":4878,"nodeType":"StructuredDocumentation","src":"6000:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:16","nodeType":"FunctionDefinition","parameters":{"id":4883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"a","nameLocation":"6240:1:16","nodeType":"VariableDeclaration","scope":4918,"src":"6232:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4882,"mutability":"mutable","name":"b","nameLocation":"6251:1:16","nodeType":"VariableDeclaration","scope":4918,"src":"6243:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:16"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"6277:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:16"},"scope":6148,"src":"6215:704:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"7340:3585:16","statements":[{"id":5052,"nodeType":"UncheckedBlock","src":"7350:3569:16","statements":[{"assignments":[4931,4933],"declarations":[{"constant":false,"id":4931,"mutability":"mutable","name":"high","nameLocation":"7383:4:16","nodeType":"VariableDeclaration","scope":5052,"src":"7375:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4933,"mutability":"mutable","name":"low","nameLocation":"7397:3:16","nodeType":"VariableDeclaration","scope":5052,"src":"7389:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4938,"initialValue":{"arguments":[{"id":4935,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"7411:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4936,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"7414:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"7404:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"7498:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4947,"nodeType":"IfStatement","src":"7494:365:16","trueBody":{"id":4946,"nodeType":"Block","src":"7509:350:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"7827:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4943,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"7833:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4929,"id":4945,"nodeType":"Return","src":"7820:24:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"7969:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4949,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"7984:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"7965:142:16","trueBody":{"id":4965,"nodeType":"Block","src":"7990:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"8028:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4958,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8046:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":977,"src":"8046:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4960,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8070:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":973,"src":"8070:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"8020:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4951,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8008:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1009,"src":"8008:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4964,"nodeType":"ExpressionStatement","src":"8008:84:16"}]}},{"assignments":[4968],"declarations":[{"constant":false,"id":4968,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:16","nodeType":"VariableDeclaration","scope":5052,"src":"8359:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4969,"nodeType":"VariableDeclarationStatement","src":"8359:17:16"},{"AST":{"nativeSrc":"8415:283:16","nodeType":"YulBlock","src":"8415:283:16","statements":[{"nativeSrc":"8484:38:16","nodeType":"YulAssignment","src":"8484:38:16","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:16","nodeType":"YulIdentifier","src":"8504:1:16"},{"name":"y","nativeSrc":"8507:1:16","nodeType":"YulIdentifier","src":"8507:1:16"},{"name":"denominator","nativeSrc":"8510:11:16","nodeType":"YulIdentifier","src":"8510:11:16"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:16","nodeType":"YulIdentifier","src":"8497:6:16"},"nativeSrc":"8497:25:16","nodeType":"YulFunctionCall","src":"8497:25:16"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:16","nodeType":"YulIdentifier","src":"8484:9:16"}]},{"nativeSrc":"8604:37:16","nodeType":"YulAssignment","src":"8604:37:16","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:16","nodeType":"YulIdentifier","src":"8616:4:16"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:16","nodeType":"YulIdentifier","src":"8625:9:16"},{"name":"low","nativeSrc":"8636:3:16","nodeType":"YulIdentifier","src":"8636:3:16"}],"functionName":{"name":"gt","nativeSrc":"8622:2:16","nodeType":"YulIdentifier","src":"8622:2:16"},"nativeSrc":"8622:18:16","nodeType":"YulFunctionCall","src":"8622:18:16"}],"functionName":{"name":"sub","nativeSrc":"8612:3:16","nodeType":"YulIdentifier","src":"8612:3:16"},"nativeSrc":"8612:29:16","nodeType":"YulFunctionCall","src":"8612:29:16"},"variableNames":[{"name":"high","nativeSrc":"8604:4:16","nodeType":"YulIdentifier","src":"8604:4:16"}]},{"nativeSrc":"8658:26:16","nodeType":"YulAssignment","src":"8658:26:16","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:16","nodeType":"YulIdentifier","src":"8669:3:16"},{"name":"remainder","nativeSrc":"8674:9:16","nodeType":"YulIdentifier","src":"8674:9:16"}],"functionName":{"name":"sub","nativeSrc":"8665:3:16","nodeType":"YulIdentifier","src":"8665:3:16"},"nativeSrc":"8665:19:16","nodeType":"YulFunctionCall","src":"8665:19:16"},"variableNames":[{"name":"low","nativeSrc":"8658:3:16","nodeType":"YulIdentifier","src":"8658:3:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4925,"isOffset":false,"isSlot":false,"src":"8510:11:16","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"8604:4:16","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"8616:4:16","valueSize":1},{"declaration":4933,"isOffset":false,"isSlot":false,"src":"8636:3:16","valueSize":1},{"declaration":4933,"isOffset":false,"isSlot":false,"src":"8658:3:16","valueSize":1},{"declaration":4933,"isOffset":false,"isSlot":false,"src":"8669:3:16","valueSize":1},{"declaration":4968,"isOffset":false,"isSlot":false,"src":"8484:9:16","valueSize":1},{"declaration":4968,"isOffset":false,"isSlot":false,"src":"8625:9:16","valueSize":1},{"declaration":4968,"isOffset":false,"isSlot":false,"src":"8674:9:16","valueSize":1},{"declaration":4921,"isOffset":false,"isSlot":false,"src":"8504:1:16","valueSize":1},{"declaration":4923,"isOffset":false,"isSlot":false,"src":"8507:1:16","valueSize":1}],"flags":["memory-safe"],"id":4970,"nodeType":"InlineAssembly","src":"8390:308:16"},{"assignments":[4972],"declarations":[{"constant":false,"id":4972,"mutability":"mutable","name":"twos","nameLocation":"8910:4:16","nodeType":"VariableDeclaration","scope":5052,"src":"8902:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4971,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4979,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"8917:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"8936:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:16"},{"AST":{"nativeSrc":"8987:359:16","nodeType":"YulBlock","src":"8987:359:16","statements":[{"nativeSrc":"9052:37:16","nodeType":"YulAssignment","src":"9052:37:16","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:16","nodeType":"YulIdentifier","src":"9071:11:16"},{"name":"twos","nativeSrc":"9084:4:16","nodeType":"YulIdentifier","src":"9084:4:16"}],"functionName":{"name":"div","nativeSrc":"9067:3:16","nodeType":"YulIdentifier","src":"9067:3:16"},"nativeSrc":"9067:22:16","nodeType":"YulFunctionCall","src":"9067:22:16"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:16","nodeType":"YulIdentifier","src":"9052:11:16"}]},{"nativeSrc":"9153:21:16","nodeType":"YulAssignment","src":"9153:21:16","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:16","nodeType":"YulIdentifier","src":"9164:3:16"},{"name":"twos","nativeSrc":"9169:4:16","nodeType":"YulIdentifier","src":"9169:4:16"}],"functionName":{"name":"div","nativeSrc":"9160:3:16","nodeType":"YulIdentifier","src":"9160:3:16"},"nativeSrc":"9160:14:16","nodeType":"YulFunctionCall","src":"9160:14:16"},"variableNames":[{"name":"low","nativeSrc":"9153:3:16","nodeType":"YulIdentifier","src":"9153:3:16"}]},{"nativeSrc":"9293:39:16","nodeType":"YulAssignment","src":"9293:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:16","nodeType":"YulLiteral","src":"9313:1:16","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:16","nodeType":"YulIdentifier","src":"9316:4:16"}],"functionName":{"name":"sub","nativeSrc":"9309:3:16","nodeType":"YulIdentifier","src":"9309:3:16"},"nativeSrc":"9309:12:16","nodeType":"YulFunctionCall","src":"9309:12:16"},{"name":"twos","nativeSrc":"9323:4:16","nodeType":"YulIdentifier","src":"9323:4:16"}],"functionName":{"name":"div","nativeSrc":"9305:3:16","nodeType":"YulIdentifier","src":"9305:3:16"},"nativeSrc":"9305:23:16","nodeType":"YulFunctionCall","src":"9305:23:16"},{"kind":"number","nativeSrc":"9330:1:16","nodeType":"YulLiteral","src":"9330:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:16","nodeType":"YulIdentifier","src":"9301:3:16"},"nativeSrc":"9301:31:16","nodeType":"YulFunctionCall","src":"9301:31:16"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:16","nodeType":"YulIdentifier","src":"9293:4:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4925,"isOffset":false,"isSlot":false,"src":"9052:11:16","valueSize":1},{"declaration":4925,"isOffset":false,"isSlot":false,"src":"9071:11:16","valueSize":1},{"declaration":4933,"isOffset":false,"isSlot":false,"src":"9153:3:16","valueSize":1},{"declaration":4933,"isOffset":false,"isSlot":false,"src":"9164:3:16","valueSize":1},{"declaration":4972,"isOffset":false,"isSlot":false,"src":"9084:4:16","valueSize":1},{"declaration":4972,"isOffset":false,"isSlot":false,"src":"9169:4:16","valueSize":1},{"declaration":4972,"isOffset":false,"isSlot":false,"src":"9293:4:16","valueSize":1},{"declaration":4972,"isOffset":false,"isSlot":false,"src":"9316:4:16","valueSize":1},{"declaration":4972,"isOffset":false,"isSlot":false,"src":"9323:4:16","valueSize":1}],"flags":["memory-safe"],"id":4980,"nodeType":"InlineAssembly","src":"8962:384:16"},{"expression":{"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4981,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"9409:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"9416:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4983,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"9423:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4986,"nodeType":"ExpressionStatement","src":"9409:18:16"},{"assignments":[4988],"declarations":[{"constant":false,"id":4988,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:16","nodeType":"VariableDeclaration","scope":5052,"src":"9762:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4995,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4990,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"9785:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:16"},{"expression":{"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4996,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"10033:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4999,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10047:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5003,"nodeType":"ExpressionStatement","src":"10018:36:16"},{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5004,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10088:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"10103:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ExpressionStatement","src":"10088:36:16"},{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"10175:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5019,"nodeType":"ExpressionStatement","src":"10160:36:16"},{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"10246:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5027,"nodeType":"ExpressionStatement","src":"10231:36:16"},{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10304:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"10319:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5031,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10333:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5035,"nodeType":"ExpressionStatement","src":"10304:36:16"},{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"10393:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5039,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"10378:36:16"},{"expression":{"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"10859:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"10868:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5046,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10874:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5049,"nodeType":"ExpressionStatement","src":"10859:22:16"},{"expression":{"id":5050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"10902:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4929,"id":5051,"nodeType":"Return","src":"10895:13:16"}]}]},"documentation":{"id":4919,"nodeType":"StructuredDocumentation","src":"6925:312:16","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:16","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"x","nameLocation":"7266:1:16","nodeType":"VariableDeclaration","scope":5054,"src":"7258:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4923,"mutability":"mutable","name":"y","nameLocation":"7277:1:16","nodeType":"VariableDeclaration","scope":5054,"src":"7269:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4925,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:16","nodeType":"VariableDeclaration","scope":5054,"src":"7280:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:16"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"result","nameLocation":"7332:6:16","nodeType":"VariableDeclaration","scope":5054,"src":"7324:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:16"},"scope":6148,"src":"7242:3683:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5090,"nodeType":"Block","src":"11164:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5070,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"11188:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5071,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"11191:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5072,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11194:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5069,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5054,5091],"referencedDeclaration":5054,"src":"11181:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5077,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11242:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":5076,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"11225:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4539_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5080,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"11262:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5081,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"11265:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11268:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5079,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5074,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"11209:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"11209:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5068,"id":5089,"nodeType":"Return","src":"11174:111:16"}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"10931:118:16","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5091,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:16","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"x","nameLocation":"11078:1:16","nodeType":"VariableDeclaration","scope":5091,"src":"11070:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"y","nameLocation":"11089:1:16","nodeType":"VariableDeclaration","scope":5091,"src":"11081:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:16","nodeType":"VariableDeclaration","scope":5091,"src":"11092:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:16","nodeType":"VariableDeclaration","scope":5091,"src":"11113:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":5063,"nodeType":"UserDefinedTypeName","pathNode":{"id":5062,"name":"Rounding","nameLocations":["11113:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"11113:8:16"},"referencedDeclaration":4539,"src":"11113:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:16"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5091,"src":"11155:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:16"},"scope":6148,"src":"11054:238:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5140,"nodeType":"Block","src":"11500:245:16","statements":[{"id":5139,"nodeType":"UncheckedBlock","src":"11510:229:16","statements":[{"assignments":[5104,5106],"declarations":[{"constant":false,"id":5104,"mutability":"mutable","name":"high","nameLocation":"11543:4:16","nodeType":"VariableDeclaration","scope":5139,"src":"11535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5106,"mutability":"mutable","name":"low","nameLocation":"11557:3:16","nodeType":"VariableDeclaration","scope":5139,"src":"11549:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5111,"initialValue":{"arguments":[{"id":5108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"11571:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5109,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"11574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5107,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"11564:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"11594:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5114,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"11607:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"IfStatement","src":"11590:86:16","trueBody":{"id":5124,"nodeType":"Block","src":"11610:66:16","statements":[{"expression":{"arguments":[{"expression":{"id":5120,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"11640:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":973,"src":"11640:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5117,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"11628:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1009,"src":"11628:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5123,"nodeType":"ExpressionStatement","src":"11628:33:16"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"11697:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5128,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"11712:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"11719:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5134,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"11726:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5102,"id":5138,"nodeType":"Return","src":"11689:39:16"}]}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"11298:111:16","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5141,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:16","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"x","nameLocation":"11438:1:16","nodeType":"VariableDeclaration","scope":5141,"src":"11430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"y","nameLocation":"11449:1:16","nodeType":"VariableDeclaration","scope":5141,"src":"11441:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5098,"mutability":"mutable","name":"n","nameLocation":"11458:1:16","nodeType":"VariableDeclaration","scope":5141,"src":"11452:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5097,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:16"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"result","nameLocation":"11492:6:16","nodeType":"VariableDeclaration","scope":5141,"src":"11484:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:16"},"scope":6148,"src":"11414:331:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5179,"nodeType":"Block","src":"11963:113:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5157,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"11987:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5158,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5159,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"11993:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5156,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5141,5180],"referencedDeclaration":5141,"src":"11980:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5164,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"12031:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":5163,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"12014:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4539_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5167,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"12051:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5168,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"12054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5170,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"12062:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5166,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5161,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"11998:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"11998:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5155,"id":5178,"nodeType":"Return","src":"11973:96:16"}]},"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"11751:109:16","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5180,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:16","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"x","nameLocation":"11889:1:16","nodeType":"VariableDeclaration","scope":5180,"src":"11881:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5146,"mutability":"mutable","name":"y","nameLocation":"11900:1:16","nodeType":"VariableDeclaration","scope":5180,"src":"11892:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5148,"mutability":"mutable","name":"n","nameLocation":"11909:1:16","nodeType":"VariableDeclaration","scope":5180,"src":"11903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5147,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5151,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:16","nodeType":"VariableDeclaration","scope":5180,"src":"11912:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":5150,"nodeType":"UserDefinedTypeName","pathNode":{"id":5149,"name":"Rounding","nameLocations":["11912:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"11912:8:16"},"referencedDeclaration":4539,"src":"11912:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:16"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5180,"src":"11954:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:16"},"scope":6148,"src":"11865:211:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5276,"nodeType":"Block","src":"12710:1849:16","statements":[{"id":5275,"nodeType":"UncheckedBlock","src":"12720:1833:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"12748:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"IfStatement","src":"12744:20:16","trueBody":{"expression":{"hexValue":"30","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5189,"id":5194,"nodeType":"Return","src":"12756:8:16"}},{"assignments":[5197],"declarations":[{"constant":false,"id":5197,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:16","nodeType":"VariableDeclaration","scope":5275,"src":"13235:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5201,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"13255:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5199,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"13259:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:16"},{"assignments":[5203],"declarations":[{"constant":false,"id":5203,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:16","nodeType":"VariableDeclaration","scope":5275,"src":"13274:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5205,"initialValue":{"id":5204,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"13288:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:16"},{"assignments":[5207],"declarations":[{"constant":false,"id":5207,"mutability":"mutable","name":"x","nameLocation":"13432:1:16","nodeType":"VariableDeclaration","scope":5275,"src":"13425:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5206,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5209,"initialValue":{"hexValue":"30","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:16"},{"assignments":[5211],"declarations":[{"constant":false,"id":5211,"mutability":"mutable","name":"y","nameLocation":"13458:1:16","nodeType":"VariableDeclaration","scope":5275,"src":"13451:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5210,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5213,"initialValue":{"hexValue":"31","id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:16"},{"body":{"id":5250,"nodeType":"Block","src":"13501:882:16","statements":[{"assignments":[5218],"declarations":[{"constant":false,"id":5218,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:16","nodeType":"VariableDeclaration","scope":5250,"src":"13519:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5217,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5222,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5219,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"13538:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5220,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"13544:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:16"},{"expression":{"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5223,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"13573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5224,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"13578:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5225,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5226,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"13678:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"13923:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"13929:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5229,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"13941:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5234,"nodeType":"ExpressionStatement","src":"13572:395:16"},{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5235,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"13987:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5236,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"13990:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5237,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5238,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"14072:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"14326:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"14330:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5243,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"14341:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5241,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:16","typeDescriptions":{}}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"ExpressionStatement","src":"13986:382:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"13485:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5251,"nodeType":"WhileStatement","src":"13478:905:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"14401:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5257,"nodeType":"IfStatement","src":"14397:22:16","trueBody":{"expression":{"hexValue":"30","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5189,"id":5256,"nodeType":"Return","src":"14411:8:16"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"14470:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"14477:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:16","subExpression":{"id":5265,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"14490:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:16","typeDescriptions":{}}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5271,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"14502:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:16","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5258,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"14462:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5189,"id":5274,"nodeType":"Return","src":"14455:50:16"}]}]},"documentation":{"id":5181,"nodeType":"StructuredDocumentation","src":"12082:553:16","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5277,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:16","nodeType":"FunctionDefinition","parameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"a","nameLocation":"12664:1:16","nodeType":"VariableDeclaration","scope":5277,"src":"12656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5185,"mutability":"mutable","name":"n","nameLocation":"12675:1:16","nodeType":"VariableDeclaration","scope":5277,"src":"12667:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5184,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:16"},"returnParameters":{"id":5189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5277,"src":"12701:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:16"},"scope":6148,"src":"12640:1919:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5297,"nodeType":"Block","src":"15159:82:16","statements":[{"id":5296,"nodeType":"UncheckedBlock","src":"15169:66:16","statements":[{"expression":{"arguments":[{"id":5289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"15212:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"15215:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5293,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"15222:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5287,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"15200:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6148_$","typeString":"type(library Math)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:16","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5334,"src":"15200:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5286,"id":5295,"nodeType":"Return","src":"15193:31:16"}]}]},"documentation":{"id":5278,"nodeType":"StructuredDocumentation","src":"14565:514:16","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5298,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:16","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"a","nameLocation":"15113:1:16","nodeType":"VariableDeclaration","scope":5298,"src":"15105:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5282,"mutability":"mutable","name":"p","nameLocation":"15124:1:16","nodeType":"VariableDeclaration","scope":5298,"src":"15116:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:16"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5298,"src":"15150:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:16"},"scope":6148,"src":"15084:157:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5333,"nodeType":"Block","src":"16011:174:16","statements":[{"assignments":[5311,5313],"declarations":[{"constant":false,"id":5311,"mutability":"mutable","name":"success","nameLocation":"16027:7:16","nodeType":"VariableDeclaration","scope":5333,"src":"16022:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5310,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5313,"mutability":"mutable","name":"result","nameLocation":"16044:6:16","nodeType":"VariableDeclaration","scope":5333,"src":"16036:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5319,"initialValue":{"arguments":[{"id":5315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"16064:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5316,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"16067:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5317,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"16070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5314,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5358,5440],"referencedDeclaration":5358,"src":"16054:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:16"},{"condition":{"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:16","subExpression":{"id":5320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"16087:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"IfStatement","src":"16082:74:16","trueBody":{"id":5329,"nodeType":"Block","src":"16096:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":5325,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":977,"src":"16122:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5322,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"16110:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1009,"src":"16110:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5328,"nodeType":"ExpressionStatement","src":"16110:35:16"}]}},{"expression":{"id":5331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"16172:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5309,"id":5332,"nodeType":"Return","src":"16165:13:16"}]},"documentation":{"id":5299,"nodeType":"StructuredDocumentation","src":"15247:678:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5334,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:16","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"b","nameLocation":"15954:1:16","nodeType":"VariableDeclaration","scope":5334,"src":"15946:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5303,"mutability":"mutable","name":"e","nameLocation":"15965:1:16","nodeType":"VariableDeclaration","scope":5334,"src":"15957:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5302,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5305,"mutability":"mutable","name":"m","nameLocation":"15976:1:16","nodeType":"VariableDeclaration","scope":5334,"src":"15968:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5304,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:16"},"returnParameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5334,"src":"16002:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:16"},"scope":6148,"src":"15930:255:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"17039:1493:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"17053:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"17049:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5347,"id":5354,"nodeType":"Return","src":"17061:17:16"}},{"AST":{"nativeSrc":"17113:1413:16","nodeType":"YulBlock","src":"17113:1413:16","statements":[{"nativeSrc":"17127:22:16","nodeType":"YulVariableDeclaration","src":"17127:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:16","nodeType":"YulLiteral","src":"17144:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:16","nodeType":"YulIdentifier","src":"17138:5:16"},"nativeSrc":"17138:11:16","nodeType":"YulFunctionCall","src":"17138:11:16"},"variables":[{"name":"ptr","nativeSrc":"17131:3:16","nodeType":"YulTypedName","src":"17131:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:16","nodeType":"YulIdentifier","src":"18057:3:16"},{"kind":"number","nativeSrc":"18062:4:16","nodeType":"YulLiteral","src":"18062:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:16","nodeType":"YulIdentifier","src":"18050:6:16"},"nativeSrc":"18050:17:16","nodeType":"YulFunctionCall","src":"18050:17:16"},"nativeSrc":"18050:17:16","nodeType":"YulExpressionStatement","src":"18050:17:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:16","nodeType":"YulIdentifier","src":"18091:3:16"},{"kind":"number","nativeSrc":"18096:4:16","nodeType":"YulLiteral","src":"18096:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:16","nodeType":"YulIdentifier","src":"18087:3:16"},"nativeSrc":"18087:14:16","nodeType":"YulFunctionCall","src":"18087:14:16"},{"kind":"number","nativeSrc":"18103:4:16","nodeType":"YulLiteral","src":"18103:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:16","nodeType":"YulIdentifier","src":"18080:6:16"},"nativeSrc":"18080:28:16","nodeType":"YulFunctionCall","src":"18080:28:16"},"nativeSrc":"18080:28:16","nodeType":"YulExpressionStatement","src":"18080:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:16","nodeType":"YulIdentifier","src":"18132:3:16"},{"kind":"number","nativeSrc":"18137:4:16","nodeType":"YulLiteral","src":"18137:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:16","nodeType":"YulIdentifier","src":"18128:3:16"},"nativeSrc":"18128:14:16","nodeType":"YulFunctionCall","src":"18128:14:16"},{"kind":"number","nativeSrc":"18144:4:16","nodeType":"YulLiteral","src":"18144:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:16","nodeType":"YulIdentifier","src":"18121:6:16"},"nativeSrc":"18121:28:16","nodeType":"YulFunctionCall","src":"18121:28:16"},"nativeSrc":"18121:28:16","nodeType":"YulExpressionStatement","src":"18121:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:16","nodeType":"YulIdentifier","src":"18173:3:16"},{"kind":"number","nativeSrc":"18178:4:16","nodeType":"YulLiteral","src":"18178:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:16","nodeType":"YulIdentifier","src":"18169:3:16"},"nativeSrc":"18169:14:16","nodeType":"YulFunctionCall","src":"18169:14:16"},{"name":"b","nativeSrc":"18185:1:16","nodeType":"YulIdentifier","src":"18185:1:16"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:16","nodeType":"YulIdentifier","src":"18162:6:16"},"nativeSrc":"18162:25:16","nodeType":"YulFunctionCall","src":"18162:25:16"},"nativeSrc":"18162:25:16","nodeType":"YulExpressionStatement","src":"18162:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:16","nodeType":"YulIdentifier","src":"18211:3:16"},{"kind":"number","nativeSrc":"18216:4:16","nodeType":"YulLiteral","src":"18216:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:16","nodeType":"YulIdentifier","src":"18207:3:16"},"nativeSrc":"18207:14:16","nodeType":"YulFunctionCall","src":"18207:14:16"},{"name":"e","nativeSrc":"18223:1:16","nodeType":"YulIdentifier","src":"18223:1:16"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:16","nodeType":"YulIdentifier","src":"18200:6:16"},"nativeSrc":"18200:25:16","nodeType":"YulFunctionCall","src":"18200:25:16"},"nativeSrc":"18200:25:16","nodeType":"YulExpressionStatement","src":"18200:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:16","nodeType":"YulIdentifier","src":"18249:3:16"},{"kind":"number","nativeSrc":"18254:4:16","nodeType":"YulLiteral","src":"18254:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:16","nodeType":"YulIdentifier","src":"18245:3:16"},"nativeSrc":"18245:14:16","nodeType":"YulFunctionCall","src":"18245:14:16"},{"name":"m","nativeSrc":"18261:1:16","nodeType":"YulIdentifier","src":"18261:1:16"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:16","nodeType":"YulIdentifier","src":"18238:6:16"},"nativeSrc":"18238:25:16","nodeType":"YulFunctionCall","src":"18238:25:16"},"nativeSrc":"18238:25:16","nodeType":"YulExpressionStatement","src":"18238:25:16"},{"nativeSrc":"18425:57:16","nodeType":"YulAssignment","src":"18425:57:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:16","nodeType":"YulIdentifier","src":"18447:3:16"},"nativeSrc":"18447:5:16","nodeType":"YulFunctionCall","src":"18447:5:16"},{"kind":"number","nativeSrc":"18454:4:16","nodeType":"YulLiteral","src":"18454:4:16","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:16","nodeType":"YulIdentifier","src":"18460:3:16"},{"kind":"number","nativeSrc":"18465:4:16","nodeType":"YulLiteral","src":"18465:4:16","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:16","nodeType":"YulLiteral","src":"18471:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:16","nodeType":"YulLiteral","src":"18477:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:16","nodeType":"YulIdentifier","src":"18436:10:16"},"nativeSrc":"18436:46:16","nodeType":"YulFunctionCall","src":"18436:46:16"},"variableNames":[{"name":"success","nativeSrc":"18425:7:16","nodeType":"YulIdentifier","src":"18425:7:16"}]},{"nativeSrc":"18495:21:16","nodeType":"YulAssignment","src":"18495:21:16","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:16","nodeType":"YulLiteral","src":"18511:4:16","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:16","nodeType":"YulIdentifier","src":"18505:5:16"},"nativeSrc":"18505:11:16","nodeType":"YulFunctionCall","src":"18505:11:16"},"variableNames":[{"name":"result","nativeSrc":"18495:6:16","nodeType":"YulIdentifier","src":"18495:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":5337,"isOffset":false,"isSlot":false,"src":"18185:1:16","valueSize":1},{"declaration":5339,"isOffset":false,"isSlot":false,"src":"18223:1:16","valueSize":1},{"declaration":5341,"isOffset":false,"isSlot":false,"src":"18261:1:16","valueSize":1},{"declaration":5346,"isOffset":false,"isSlot":false,"src":"18495:6:16","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"18425:7:16","valueSize":1}],"flags":["memory-safe"],"id":5356,"nodeType":"InlineAssembly","src":"17088:1438:16"}]},"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"16191:738:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:16","nodeType":"FunctionDefinition","parameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"b","nameLocation":"16961:1:16","nodeType":"VariableDeclaration","scope":5358,"src":"16953:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5339,"mutability":"mutable","name":"e","nameLocation":"16972:1:16","nodeType":"VariableDeclaration","scope":5358,"src":"16964:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5338,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5341,"mutability":"mutable","name":"m","nameLocation":"16983:1:16","nodeType":"VariableDeclaration","scope":5358,"src":"16975:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:16"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"success","nameLocation":"17014:7:16","nodeType":"VariableDeclaration","scope":5358,"src":"17009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5343,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5346,"mutability":"mutable","name":"result","nameLocation":"17031:6:16","nodeType":"VariableDeclaration","scope":5358,"src":"17023:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:16"},"scope":6148,"src":"16934:1598:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5393,"nodeType":"Block","src":"18729:179:16","statements":[{"assignments":[5371,5373],"declarations":[{"constant":false,"id":5371,"mutability":"mutable","name":"success","nameLocation":"18745:7:16","nodeType":"VariableDeclaration","scope":5393,"src":"18740:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5370,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5373,"mutability":"mutable","name":"result","nameLocation":"18767:6:16","nodeType":"VariableDeclaration","scope":5393,"src":"18754:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5372,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5379,"initialValue":{"arguments":[{"id":5375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"18787:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5376,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"18790:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5377,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"18793:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5374,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5358,5440],"referencedDeclaration":5440,"src":"18777:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:16"},{"condition":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:16","subExpression":{"id":5380,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"18810:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"IfStatement","src":"18805:74:16","trueBody":{"id":5389,"nodeType":"Block","src":"18819:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":5385,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"18845:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":977,"src":"18845:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5382,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"18833:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1010_$","typeString":"type(library Panic)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1009,"src":"18833:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5388,"nodeType":"ExpressionStatement","src":"18833:35:16"}]}},{"expression":{"id":5391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"18895:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5369,"id":5392,"nodeType":"Return","src":"18888:13:16"}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"18538:85:16","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:16","nodeType":"FunctionDefinition","parameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"b","nameLocation":"18657:1:16","nodeType":"VariableDeclaration","scope":5394,"src":"18644:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5360,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"e","nameLocation":"18673:1:16","nodeType":"VariableDeclaration","scope":5394,"src":"18660:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5362,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5365,"mutability":"mutable","name":"m","nameLocation":"18689:1:16","nodeType":"VariableDeclaration","scope":5394,"src":"18676:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5364,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:16"},"returnParameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5394,"src":"18715:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5367,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:16"},"scope":6148,"src":"18628:280:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5439,"nodeType":"Block","src":"19162:771:16","statements":[{"condition":{"arguments":[{"id":5409,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"19187:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5408,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5418,"nodeType":"IfStatement","src":"19172:47:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5412,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5407,"id":5417,"nodeType":"Return","src":"19191:28:16"}},{"assignments":[5420],"declarations":[{"constant":false,"id":5420,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:16","nodeType":"VariableDeclaration","scope":5439,"src":"19230:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5423,"initialValue":{"expression":{"id":5421,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"19245:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:16","memberName":"length","nodeType":"MemberAccess","src":"19245:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:16"},{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"19335:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"19361:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:16","memberName":"length","nodeType":"MemberAccess","src":"19361:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5429,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"19371:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:16","memberName":"length","nodeType":"MemberAccess","src":"19371:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5431,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"19381:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"19387:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5433,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"19390:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5434,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"19393:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5437,"nodeType":"ExpressionStatement","src":"19335:60:16"},{"AST":{"nativeSrc":"19431:496:16","nodeType":"YulBlock","src":"19431:496:16","statements":[{"nativeSrc":"19445:32:16","nodeType":"YulVariableDeclaration","src":"19445:32:16","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:16","nodeType":"YulIdentifier","src":"19464:6:16"},{"kind":"number","nativeSrc":"19472:4:16","nodeType":"YulLiteral","src":"19472:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:16","nodeType":"YulIdentifier","src":"19460:3:16"},"nativeSrc":"19460:17:16","nodeType":"YulFunctionCall","src":"19460:17:16"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:16","nodeType":"YulTypedName","src":"19449:7:16","type":""}]},{"nativeSrc":"19567:73:16","nodeType":"YulAssignment","src":"19567:73:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:16","nodeType":"YulIdentifier","src":"19589:3:16"},"nativeSrc":"19589:5:16","nodeType":"YulFunctionCall","src":"19589:5:16"},{"kind":"number","nativeSrc":"19596:4:16","nodeType":"YulLiteral","src":"19596:4:16","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:16","nodeType":"YulIdentifier","src":"19602:7:16"},{"arguments":[{"name":"result","nativeSrc":"19617:6:16","nodeType":"YulIdentifier","src":"19617:6:16"}],"functionName":{"name":"mload","nativeSrc":"19611:5:16","nodeType":"YulIdentifier","src":"19611:5:16"},"nativeSrc":"19611:13:16","nodeType":"YulFunctionCall","src":"19611:13:16"},{"name":"dataPtr","nativeSrc":"19626:7:16","nodeType":"YulIdentifier","src":"19626:7:16"},{"name":"mLen","nativeSrc":"19635:4:16","nodeType":"YulIdentifier","src":"19635:4:16"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:16","nodeType":"YulIdentifier","src":"19578:10:16"},"nativeSrc":"19578:62:16","nodeType":"YulFunctionCall","src":"19578:62:16"},"variableNames":[{"name":"success","nativeSrc":"19567:7:16","nodeType":"YulIdentifier","src":"19567:7:16"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:16","nodeType":"YulIdentifier","src":"19796:6:16"},{"name":"mLen","nativeSrc":"19804:4:16","nodeType":"YulIdentifier","src":"19804:4:16"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:16","nodeType":"YulIdentifier","src":"19789:6:16"},"nativeSrc":"19789:20:16","nodeType":"YulFunctionCall","src":"19789:20:16"},"nativeSrc":"19789:20:16","nodeType":"YulExpressionStatement","src":"19789:20:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:16","nodeType":"YulLiteral","src":"19892:4:16","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:16","nodeType":"YulIdentifier","src":"19902:7:16"},{"name":"mLen","nativeSrc":"19911:4:16","nodeType":"YulIdentifier","src":"19911:4:16"}],"functionName":{"name":"add","nativeSrc":"19898:3:16","nodeType":"YulIdentifier","src":"19898:3:16"},"nativeSrc":"19898:18:16","nodeType":"YulFunctionCall","src":"19898:18:16"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:16","nodeType":"YulIdentifier","src":"19885:6:16"},"nativeSrc":"19885:32:16","nodeType":"YulFunctionCall","src":"19885:32:16"},"nativeSrc":"19885:32:16","nodeType":"YulExpressionStatement","src":"19885:32:16"}]},"evmVersion":"cancun","externalReferences":[{"declaration":5420,"isOffset":false,"isSlot":false,"src":"19635:4:16","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"19804:4:16","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"19911:4:16","valueSize":1},{"declaration":5406,"isOffset":false,"isSlot":false,"src":"19464:6:16","valueSize":1},{"declaration":5406,"isOffset":false,"isSlot":false,"src":"19617:6:16","valueSize":1},{"declaration":5406,"isOffset":false,"isSlot":false,"src":"19796:6:16","valueSize":1},{"declaration":5404,"isOffset":false,"isSlot":false,"src":"19567:7:16","valueSize":1}],"flags":["memory-safe"],"id":5438,"nodeType":"InlineAssembly","src":"19406:521:16"}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"18914:88:16","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5440,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:16","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"b","nameLocation":"19048:1:16","nodeType":"VariableDeclaration","scope":5440,"src":"19035:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5396,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"e","nameLocation":"19072:1:16","nodeType":"VariableDeclaration","scope":5440,"src":"19059:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5398,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"m","nameLocation":"19096:1:16","nodeType":"VariableDeclaration","scope":5440,"src":"19083:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5400,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:16"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"success","nameLocation":"19132:7:16","nodeType":"VariableDeclaration","scope":5440,"src":"19127:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5403,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"result","nameLocation":"19154:6:16","nodeType":"VariableDeclaration","scope":5440,"src":"19141:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5405,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:16"},"scope":6148,"src":"19007:926:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5472,"nodeType":"Block","src":"20088:176:16","statements":[{"body":{"id":5468,"nodeType":"Block","src":"20145:92:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5459,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"20163:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5461,"indexExpression":{"id":5460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"20173:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"nodeType":"IfStatement","src":"20159:68:16","trueBody":{"id":5466,"nodeType":"Block","src":"20182:45:16","statements":[{"expression":{"hexValue":"66616c7365","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5447,"id":5465,"nodeType":"Return","src":"20200:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"20118:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5453,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"20122:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:16","memberName":"length","nodeType":"MemberAccess","src":"20122:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5469,"initializationExpression":{"assignments":[5449],"declarations":[{"constant":false,"id":5449,"mutability":"mutable","name":"i","nameLocation":"20111:1:16","nodeType":"VariableDeclaration","scope":5469,"src":"20103:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5451,"initialValue":{"hexValue":"30","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:16","subExpression":{"id":5456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"20142:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5458,"nodeType":"ExpressionStatement","src":"20140:3:16"},"nodeType":"ForStatement","src":"20098:139:16"},{"expression":{"hexValue":"74727565","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5447,"id":5471,"nodeType":"Return","src":"20246:11:16"}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"19939:72:16","text":" @dev Returns whether the provided byte array is zero."},"id":5473,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:16","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:16","nodeType":"VariableDeclaration","scope":5473,"src":"20036:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5442,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:16"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5473,"src":"20082:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5445,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:16"},"scope":6148,"src":"20016:248:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5691,"nodeType":"Block","src":"20624:5124:16","statements":[{"id":5690,"nodeType":"UncheckedBlock","src":"20634:5108:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"20728:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5487,"nodeType":"IfStatement","src":"20724:53:16","trueBody":{"id":5486,"nodeType":"Block","src":"20736:41:16","statements":[{"expression":{"id":5484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"20761:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5480,"id":5485,"nodeType":"Return","src":"20754:8:16"}]}},{"assignments":[5489],"declarations":[{"constant":false,"id":5489,"mutability":"mutable","name":"aa","nameLocation":"21712:2:16","nodeType":"VariableDeclaration","scope":5690,"src":"21704:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5488,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5491,"initialValue":{"id":5490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"21717:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:16"},{"assignments":[5493],"declarations":[{"constant":false,"id":5493,"mutability":"mutable","name":"xn","nameLocation":"21740:2:16","nodeType":"VariableDeclaration","scope":5690,"src":"21732:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5495,"initialValue":{"hexValue":"31","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5496,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"21765:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"21761:92:16","trueBody":{"id":5510,"nodeType":"Block","src":"21783:70:16","statements":[{"expression":{"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5502,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"21801:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5505,"nodeType":"ExpressionStatement","src":"21801:10:16"},{"expression":{"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5506,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"21829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5509,"nodeType":"ExpressionStatement","src":"21829:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5512,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"21870:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5527,"nodeType":"IfStatement","src":"21866:90:16","trueBody":{"id":5526,"nodeType":"Block","src":"21887:69:16","statements":[{"expression":{"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5518,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"21905:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5521,"nodeType":"ExpressionStatement","src":"21905:9:16"},{"expression":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5522,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"21932:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5525,"nodeType":"ExpressionStatement","src":"21932:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"21973:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"IfStatement","src":"21969:90:16","trueBody":{"id":5542,"nodeType":"Block","src":"21990:69:16","statements":[{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22008:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5537,"nodeType":"ExpressionStatement","src":"22008:9:16"},{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22035:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"nodeType":"ExpressionStatement","src":"22035:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22076:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"22072:89:16","trueBody":{"id":5558,"nodeType":"Block","src":"22093:68:16","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5550,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22111:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5553,"nodeType":"ExpressionStatement","src":"22111:9:16"},{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22138:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"22138:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22178:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5575,"nodeType":"IfStatement","src":"22174:87:16","trueBody":{"id":5574,"nodeType":"Block","src":"22194:67:16","statements":[{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5566,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22212:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"nodeType":"ExpressionStatement","src":"22212:8:16"},{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5570,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22238:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"22238:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22278:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5591,"nodeType":"IfStatement","src":"22274:87:16","trueBody":{"id":5590,"nodeType":"Block","src":"22294:67:16","statements":[{"expression":{"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5582,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22312:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5585,"nodeType":"ExpressionStatement","src":"22312:8:16"},{"expression":{"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22338:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5589,"nodeType":"ExpressionStatement","src":"22338:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5592,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"22378:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5603,"nodeType":"IfStatement","src":"22374:61:16","trueBody":{"id":5602,"nodeType":"Block","src":"22394:41:16","statements":[{"expression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5598,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22412:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5601,"nodeType":"ExpressionStatement","src":"22412:8:16"}]}},{"expression":{"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5604,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22855:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5606,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"22865:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5612,"nodeType":"ExpressionStatement","src":"22855:18:16"},{"expression":{"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5613,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24760:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24766:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"24771:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5616,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24775:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5623,"nodeType":"ExpressionStatement","src":"24760:23:16"},{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5624,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24869:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5625,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24875:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"24880:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5627,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24884:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ExpressionStatement","src":"24869:23:16"},{"expression":{"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24980:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24986:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"24991:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5638,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"24995:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5645,"nodeType":"ExpressionStatement","src":"24980:23:16"},{"expression":{"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25089:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25095:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"25100:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5649,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25104:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5656,"nodeType":"ExpressionStatement","src":"25089:23:16"},{"expression":{"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5657,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25199:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25205:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"25210:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5660,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25214:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5667,"nodeType":"ExpressionStatement","src":"25199:23:16"},{"expression":{"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5668,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25309:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25315:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"25320:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5671,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25324:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5678,"nodeType":"ExpressionStatement","src":"25309:23:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5679,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25698:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5682,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25719:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5683,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"25724:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5684,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"25728:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5680,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"25703:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"25703:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5480,"id":5689,"nodeType":"Return","src":"25691:40:16"}]}]},"documentation":{"id":5474,"nodeType":"StructuredDocumentation","src":"20270:292:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5692,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:16","nodeType":"FunctionDefinition","parameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"a","nameLocation":"20589:1:16","nodeType":"VariableDeclaration","scope":5692,"src":"20581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:16"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5692,"src":"20615:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:16"},"scope":6148,"src":"20567:5181:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5725,"nodeType":"Block","src":"25921:171:16","statements":[{"id":5724,"nodeType":"UncheckedBlock","src":"25931:155:16","statements":[{"assignments":[5704],"declarations":[{"constant":false,"id":5704,"mutability":"mutable","name":"result","nameLocation":"25963:6:16","nodeType":"VariableDeclaration","scope":5724,"src":"25955:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5708,"initialValue":{"arguments":[{"id":5706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"25977:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5705,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5692,5726],"referencedDeclaration":5692,"src":"25972:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"26000:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5713,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"26042:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":5712,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"26025:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4539_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"26055:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"26064:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"26073:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5710,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26009:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26009:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5702,"id":5723,"nodeType":"Return","src":"25993:82:16"}]}]},"documentation":{"id":5693,"nodeType":"StructuredDocumentation","src":"25754:86:16","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5726,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:16","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"a","nameLocation":"25867:1:16","nodeType":"VariableDeclaration","scope":5726,"src":"25859:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5698,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:16","nodeType":"VariableDeclaration","scope":5726,"src":"25870:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":5697,"nodeType":"UserDefinedTypeName","pathNode":{"id":5696,"name":"Rounding","nameLocations":["25870:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"25870:8:16"},"referencedDeclaration":4539,"src":"25870:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:16"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5726,"src":"25912:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:16"},"scope":6148,"src":"25845:247:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"26281:2334:16","statements":[{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5734,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26363:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"26383:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5735,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26367:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26367:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5744,"nodeType":"ExpressionStatement","src":"26363:64:16"},{"expression":{"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5745,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26503:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5748,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"26525:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5749,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26530:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5746,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26508:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26508:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5758,"nodeType":"ExpressionStatement","src":"26503:56:16"},{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26634:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"26656:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5763,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26661:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5760,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26639:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26639:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5772,"nodeType":"ExpressionStatement","src":"26634:48:16"},{"expression":{"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"26779:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5777,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26784:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5774,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26762:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26762:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5786,"nodeType":"ExpressionStatement","src":"26757:44:16"},{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5787,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26874:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"26896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5791,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26901:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5788,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26879:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26879:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5800,"nodeType":"ExpressionStatement","src":"26874:42:16"},{"expression":{"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5801,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"26988:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5804,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"27010:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5805,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"27015:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"26993:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"26993:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5814,"nodeType":"ExpressionStatement","src":"26988:41:16"},{"AST":{"nativeSrc":"28490:119:16","nodeType":"YulBlock","src":"28490:119:16","statements":[{"nativeSrc":"28504:95:16","nodeType":"YulAssignment","src":"28504:95:16","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:16","nodeType":"YulIdentifier","src":"28512:1:16"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:16","nodeType":"YulIdentifier","src":"28524:1:16"},{"name":"x","nativeSrc":"28527:1:16","nodeType":"YulIdentifier","src":"28527:1:16"}],"functionName":{"name":"shr","nativeSrc":"28520:3:16","nodeType":"YulIdentifier","src":"28520:3:16"},"nativeSrc":"28520:9:16","nodeType":"YulFunctionCall","src":"28520:9:16"},{"kind":"number","nativeSrc":"28531:66:16","nodeType":"YulLiteral","src":"28531:66:16","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:16","nodeType":"YulIdentifier","src":"28515:4:16"},"nativeSrc":"28515:83:16","nodeType":"YulFunctionCall","src":"28515:83:16"}],"functionName":{"name":"or","nativeSrc":"28509:2:16","nodeType":"YulIdentifier","src":"28509:2:16"},"nativeSrc":"28509:90:16","nodeType":"YulFunctionCall","src":"28509:90:16"},"variableNames":[{"name":"r","nativeSrc":"28504:1:16","nodeType":"YulIdentifier","src":"28504:1:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":5732,"isOffset":false,"isSlot":false,"src":"28504:1:16","valueSize":1},{"declaration":5732,"isOffset":false,"isSlot":false,"src":"28512:1:16","valueSize":1},{"declaration":5732,"isOffset":false,"isSlot":false,"src":"28524:1:16","valueSize":1},{"declaration":5729,"isOffset":false,"isSlot":false,"src":"28527:1:16","valueSize":1}],"flags":["memory-safe"],"id":5815,"nodeType":"InlineAssembly","src":"28465:144:16"}]},"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"26098:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:16","nodeType":"FunctionDefinition","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"x","nameLocation":"26244:1:16","nodeType":"VariableDeclaration","scope":5817,"src":"26236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:16"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"r","nameLocation":"26278:1:16","nodeType":"VariableDeclaration","scope":5817,"src":"26270:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5731,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:16"},"scope":6148,"src":"26222:2393:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5850,"nodeType":"Block","src":"28848:175:16","statements":[{"id":5849,"nodeType":"UncheckedBlock","src":"28858:159:16","statements":[{"assignments":[5829],"declarations":[{"constant":false,"id":5829,"mutability":"mutable","name":"result","nameLocation":"28890:6:16","nodeType":"VariableDeclaration","scope":5849,"src":"28882:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5833,"initialValue":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"28904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5817,5851],"referencedDeclaration":5817,"src":"28899:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"28931:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5838,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"28973:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":5837,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"28956:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4539_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"28991:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"29000:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"28940:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"28940:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5827,"id":5848,"nodeType":"Return","src":"28924:82:16"}]}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"28621:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:16","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"28790:5:16","nodeType":"VariableDeclaration","scope":5851,"src":"28782:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5823,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:16","nodeType":"VariableDeclaration","scope":5851,"src":"28797:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":5822,"nodeType":"UserDefinedTypeName","pathNode":{"id":5821,"name":"Rounding","nameLocations":["28797:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"28797:8:16"},"referencedDeclaration":4539,"src":"28797:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:16"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"28839:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:16"},"scope":6148,"src":"28768:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5979,"nodeType":"Block","src":"29216:854:16","statements":[{"assignments":[5860],"declarations":[{"constant":false,"id":5860,"mutability":"mutable","name":"result","nameLocation":"29234:6:16","nodeType":"VariableDeclaration","scope":5979,"src":"29226:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5862,"initialValue":{"hexValue":"30","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:16"},{"id":5976,"nodeType":"UncheckedBlock","src":"29254:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29282:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5879,"nodeType":"IfStatement","src":"29278:103:16","trueBody":{"id":5878,"nodeType":"Block","src":"29301:80:16","statements":[{"expression":{"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29319:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5873,"nodeType":"ExpressionStatement","src":"29319:17:16"},{"expression":{"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"29354:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5877,"nodeType":"ExpressionStatement","src":"29354:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29398:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5896,"nodeType":"IfStatement","src":"29394:103:16","trueBody":{"id":5895,"nodeType":"Block","src":"29417:80:16","statements":[{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29435:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5890,"nodeType":"ExpressionStatement","src":"29435:17:16"},{"expression":{"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5891,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"29470:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5894,"nodeType":"ExpressionStatement","src":"29470:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5913,"nodeType":"IfStatement","src":"29510:103:16","trueBody":{"id":5912,"nodeType":"Block","src":"29533:80:16","statements":[{"expression":{"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5907,"nodeType":"ExpressionStatement","src":"29551:17:16"},{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"29586:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ExpressionStatement","src":"29586:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29630:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5930,"nodeType":"IfStatement","src":"29626:100:16","trueBody":{"id":5929,"nodeType":"Block","src":"29648:78:16","statements":[{"expression":{"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29666:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5924,"nodeType":"ExpressionStatement","src":"29666:16:16"},{"expression":{"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"29700:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5928,"nodeType":"ExpressionStatement","src":"29700:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29743:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5947,"nodeType":"IfStatement","src":"29739:100:16","trueBody":{"id":5946,"nodeType":"Block","src":"29761:78:16","statements":[{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29779:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5941,"nodeType":"ExpressionStatement","src":"29779:16:16"},{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"29813:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5945,"nodeType":"ExpressionStatement","src":"29813:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29856:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5964,"nodeType":"IfStatement","src":"29852:100:16","trueBody":{"id":5963,"nodeType":"Block","src":"29874:78:16","statements":[{"expression":{"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29892:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5958,"nodeType":"ExpressionStatement","src":"29892:16:16"},{"expression":{"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"29926:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5962,"nodeType":"ExpressionStatement","src":"29926:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"29969:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5975,"nodeType":"IfStatement","src":"29965:66:16","trueBody":{"id":5974,"nodeType":"Block","src":"29987:44:16","statements":[{"expression":{"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"30005:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5973,"nodeType":"ExpressionStatement","src":"30005:11:16"}]}}]},{"expression":{"id":5977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"30057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5858,"id":5978,"nodeType":"Return","src":"30050:13:16"}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"29029:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5980,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:16","nodeType":"FunctionDefinition","parameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"value","nameLocation":"29177:5:16","nodeType":"VariableDeclaration","scope":5980,"src":"29169:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5853,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:16"},"returnParameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5980,"src":"29207:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:16"},"scope":6148,"src":"29154:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6013,"nodeType":"Block","src":"30305:177:16","statements":[{"id":6012,"nodeType":"UncheckedBlock","src":"30315:161:16","statements":[{"assignments":[5992],"declarations":[{"constant":false,"id":5992,"mutability":"mutable","name":"result","nameLocation":"30347:6:16","nodeType":"VariableDeclaration","scope":6012,"src":"30339:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5991,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5996,"initialValue":{"arguments":[{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"30362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5993,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5980,6014],"referencedDeclaration":5980,"src":"30356:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"30389:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6001,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"30431:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":6000,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"30414:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4539_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"30450:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"30459:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5998,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"30398:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"30398:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5990,"id":6011,"nodeType":"Return","src":"30382:83:16"}]}]},"documentation":{"id":5981,"nodeType":"StructuredDocumentation","src":"30076:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6014,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:16","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"value","nameLocation":"30247:5:16","nodeType":"VariableDeclaration","scope":6014,"src":"30239:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5986,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:16","nodeType":"VariableDeclaration","scope":6014,"src":"30254:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":5985,"nodeType":"UserDefinedTypeName","pathNode":{"id":5984,"name":"Rounding","nameLocations":["30254:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"30254:8:16"},"referencedDeclaration":4539,"src":"30254:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:16"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6014,"src":"30296:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5988,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:16"},"scope":6148,"src":"30224:258:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6090,"nodeType":"Block","src":"30800:675:16","statements":[{"expression":{"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6022,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"30882:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"30902:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6023,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"30886:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"30886:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6032,"nodeType":"ExpressionStatement","src":"30882:64:16"},{"expression":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6033,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31022:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"31044:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6037,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31049:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6034,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"31027:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"31027:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6046,"nodeType":"ExpressionStatement","src":"31022:56:16"},{"expression":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6047,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31153:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"31175:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6051,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31180:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6048,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"31158:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"31158:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6060,"nodeType":"ExpressionStatement","src":"31153:48:16"},{"expression":{"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31276:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6064,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"31298:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6065,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31303:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6062,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"31281:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"31281:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6074,"nodeType":"ExpressionStatement","src":"31276:44:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31426:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6081,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"31453:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6082,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"31458:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6079,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"31436:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"31436:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6021,"id":6089,"nodeType":"Return","src":"31418:50:16"}]},"documentation":{"id":6015,"nodeType":"StructuredDocumentation","src":"30488:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6091,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:16","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"x","nameLocation":"30763:1:16","nodeType":"VariableDeclaration","scope":6091,"src":"30755:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6016,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:16"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"r","nameLocation":"30797:1:16","nodeType":"VariableDeclaration","scope":6091,"src":"30789:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:16"},"scope":6148,"src":"30739:736:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"31712:184:16","statements":[{"id":6126,"nodeType":"UncheckedBlock","src":"31722:168:16","statements":[{"assignments":[6103],"declarations":[{"constant":false,"id":6103,"mutability":"mutable","name":"result","nameLocation":"31754:6:16","nodeType":"VariableDeclaration","scope":6126,"src":"31746:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6107,"initialValue":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"31770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6104,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6091,6128],"referencedDeclaration":6091,"src":"31763:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"31797:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6112,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"31839:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":6111,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"31822:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4539_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"31858:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"31873:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6109,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"31806:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"31806:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6101,"id":6125,"nodeType":"Return","src":"31790:89:16"}]}]},"documentation":{"id":6092,"nodeType":"StructuredDocumentation","src":"31481:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:16","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"value","nameLocation":"31654:5:16","nodeType":"VariableDeclaration","scope":6128,"src":"31646:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6093,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6097,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:16","nodeType":"VariableDeclaration","scope":6128,"src":"31661:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":6096,"nodeType":"UserDefinedTypeName","pathNode":{"id":6095,"name":"Rounding","nameLocations":["31661:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"31661:8:16"},"referencedDeclaration":4539,"src":"31661:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:16"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6128,"src":"31703:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6099,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:16"},"scope":6148,"src":"31630:266:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"32094:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6139,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"32117:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6137,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:16","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6136,"id":6145,"nodeType":"Return","src":"32104:31:16"}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"31902:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:16","nodeType":"FunctionDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:16","nodeType":"VariableDeclaration","scope":6147,"src":"32046:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"},"typeName":{"id":6131,"nodeType":"UserDefinedTypeName","pathNode":{"id":6130,"name":"Rounding","nameLocations":["32046:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"32046:8:16"},"referencedDeclaration":4539,"src":"32046:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4539","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:16"},"returnParameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6147,"src":"32088:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6134,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:16"},"scope":6148,"src":"32020:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6149,"src":"281:31863:16","usedErrors":[],"usedEvents":[]}],"src":"103:32042:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7913]},"id":7914,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6151,"nodeType":"StructuredDocumentation","src":"218:550:17","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7913,"linearizedBaseContracts":[7913],"name":"SafeCast","nameLocation":"777:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6152,"nodeType":"StructuredDocumentation","src":"792:68:17","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6158,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:17","nodeType":"ErrorDefinition","parameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"bits","nameLocation":"908:4:17","nodeType":"VariableDeclaration","scope":6158,"src":"902:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6153,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6156,"mutability":"mutable","name":"value","nameLocation":"922:5:17","nodeType":"VariableDeclaration","scope":6158,"src":"914:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6155,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:17"},"src":"865:64:17"},{"documentation":{"id":6159,"nodeType":"StructuredDocumentation","src":"935:75:17","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6163,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:17","nodeType":"ErrorDefinition","parameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"value","nameLocation":"1056:5:17","nodeType":"VariableDeclaration","scope":6163,"src":"1049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6160,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:17"},"src":"1015:48:17"},{"documentation":{"id":6164,"nodeType":"StructuredDocumentation","src":"1069:67:17","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6170,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:17","nodeType":"ErrorDefinition","parameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"bits","nameLocation":"1183:4:17","nodeType":"VariableDeclaration","scope":6170,"src":"1177:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6165,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6168,"mutability":"mutable","name":"value","nameLocation":"1196:5:17","nodeType":"VariableDeclaration","scope":6170,"src":"1189:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6167,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:17"},"src":"1141:62:17"},{"documentation":{"id":6171,"nodeType":"StructuredDocumentation","src":"1209:75:17","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6175,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:17","nodeType":"ErrorDefinition","parameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"value","nameLocation":"1331:5:17","nodeType":"VariableDeclaration","scope":6175,"src":"1323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:17"},"src":"1289:49:17"},{"body":{"id":6202,"nodeType":"Block","src":"1695:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"1709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6185,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6184,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:17","memberName":"max","nodeType":"MemberAccess","src":"1717:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6196,"nodeType":"IfStatement","src":"1705:105:17","trueBody":{"id":6195,"nodeType":"Block","src":"1736:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"1793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6190,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"1757:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6194,"nodeType":"RevertStatement","src":"1750:49:17"}]}},{"expression":{"arguments":[{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6197,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:17","typeDescriptions":{}}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6182,"id":6201,"nodeType":"Return","src":"1819:21:17"}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"1344:280:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6203,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:17","nodeType":"FunctionDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"value","nameLocation":"1656:5:17","nodeType":"VariableDeclaration","scope":6203,"src":"1648:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:17"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6203,"src":"1686:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6180,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:17"},"scope":7913,"src":"1629:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6230,"nodeType":"Block","src":"2204:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"2218:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6213,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:17","memberName":"max","nodeType":"MemberAccess","src":"2226:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6224,"nodeType":"IfStatement","src":"2214:105:17","trueBody":{"id":6223,"nodeType":"Block","src":"2245:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"2302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6218,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"2266:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6222,"nodeType":"RevertStatement","src":"2259:49:17"}]}},{"expression":{"arguments":[{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6225,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:17","typeDescriptions":{}}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6210,"id":6229,"nodeType":"Return","src":"2328:21:17"}]},"documentation":{"id":6204,"nodeType":"StructuredDocumentation","src":"1853:280:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6231,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:17","nodeType":"FunctionDefinition","parameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"mutability":"mutable","name":"value","nameLocation":"2165:5:17","nodeType":"VariableDeclaration","scope":6231,"src":"2157:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:17"},"returnParameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6231,"src":"2195:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6208,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:17"},"scope":7913,"src":"2138:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6258,"nodeType":"Block","src":"2713:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"2727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6241,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:17","memberName":"max","nodeType":"MemberAccess","src":"2735:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6252,"nodeType":"IfStatement","src":"2723:105:17","trueBody":{"id":6251,"nodeType":"Block","src":"2754:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"2811:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6246,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"2775:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6250,"nodeType":"RevertStatement","src":"2768:49:17"}]}},{"expression":{"arguments":[{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"2852:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6253,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:17","typeDescriptions":{}}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6238,"id":6257,"nodeType":"Return","src":"2837:21:17"}]},"documentation":{"id":6232,"nodeType":"StructuredDocumentation","src":"2362:280:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6259,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"value","nameLocation":"2674:5:17","nodeType":"VariableDeclaration","scope":6259,"src":"2666:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:17"},"returnParameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6259,"src":"2704:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6236,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:17"},"scope":7913,"src":"2647:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6286,"nodeType":"Block","src":"3222:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"3236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6269,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:17","memberName":"max","nodeType":"MemberAccess","src":"3244:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"3232:105:17","trueBody":{"id":6279,"nodeType":"Block","src":"3263:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"3320:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6274,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"3284:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6278,"nodeType":"RevertStatement","src":"3277:49:17"}]}},{"expression":{"arguments":[{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"3361:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6281,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:17","typeDescriptions":{}}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6266,"id":6285,"nodeType":"Return","src":"3346:21:17"}]},"documentation":{"id":6260,"nodeType":"StructuredDocumentation","src":"2871:280:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:17","nodeType":"FunctionDefinition","parameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"value","nameLocation":"3183:5:17","nodeType":"VariableDeclaration","scope":6287,"src":"3175:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:17"},"returnParameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6287,"src":"3213:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6264,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:17"},"scope":7913,"src":"3156:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6314,"nodeType":"Block","src":"3731:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6297,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6296,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:17","memberName":"max","nodeType":"MemberAccess","src":"3753:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6308,"nodeType":"IfStatement","src":"3741:105:17","trueBody":{"id":6307,"nodeType":"Block","src":"3772:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"3829:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6302,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"3793:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6306,"nodeType":"RevertStatement","src":"3786:49:17"}]}},{"expression":{"arguments":[{"id":6311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"3870:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6309,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:17","typeDescriptions":{}}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6294,"id":6313,"nodeType":"Return","src":"3855:21:17"}]},"documentation":{"id":6288,"nodeType":"StructuredDocumentation","src":"3380:280:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6315,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:17","nodeType":"FunctionDefinition","parameters":{"id":6291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"value","nameLocation":"3692:5:17","nodeType":"VariableDeclaration","scope":6315,"src":"3684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:17"},"returnParameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6315,"src":"3722:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6292,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:17"},"scope":7913,"src":"3665:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6342,"nodeType":"Block","src":"4240:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"4254:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6325,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:17","memberName":"max","nodeType":"MemberAccess","src":"4262:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6336,"nodeType":"IfStatement","src":"4250:105:17","trueBody":{"id":6335,"nodeType":"Block","src":"4281:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"4338:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6330,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"4302:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6334,"nodeType":"RevertStatement","src":"4295:49:17"}]}},{"expression":{"arguments":[{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"4379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6337,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:17","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6322,"id":6341,"nodeType":"Return","src":"4364:21:17"}]},"documentation":{"id":6316,"nodeType":"StructuredDocumentation","src":"3889:280:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6343,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:17","nodeType":"FunctionDefinition","parameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"value","nameLocation":"4201:5:17","nodeType":"VariableDeclaration","scope":6343,"src":"4193:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:17"},"returnParameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6343,"src":"4231:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6320,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:17"},"scope":7913,"src":"4174:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6370,"nodeType":"Block","src":"4749:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"4763:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6353,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:17","memberName":"max","nodeType":"MemberAccess","src":"4771:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6364,"nodeType":"IfStatement","src":"4759:105:17","trueBody":{"id":6363,"nodeType":"Block","src":"4790:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"4847:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6358,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"4811:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6362,"nodeType":"RevertStatement","src":"4804:49:17"}]}},{"expression":{"arguments":[{"id":6367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"4888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6365,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{}}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6350,"id":6369,"nodeType":"Return","src":"4873:21:17"}]},"documentation":{"id":6344,"nodeType":"StructuredDocumentation","src":"4398:280:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:17","nodeType":"FunctionDefinition","parameters":{"id":6347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"mutability":"mutable","name":"value","nameLocation":"4710:5:17","nodeType":"VariableDeclaration","scope":6371,"src":"4702:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:17"},"returnParameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6371,"src":"4740:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6348,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:17"},"scope":7913,"src":"4683:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6398,"nodeType":"Block","src":"5258:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"5272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6381,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:17","memberName":"max","nodeType":"MemberAccess","src":"5280:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6392,"nodeType":"IfStatement","src":"5268:105:17","trueBody":{"id":6391,"nodeType":"Block","src":"5299:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"5356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6386,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"5320:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6390,"nodeType":"RevertStatement","src":"5313:49:17"}]}},{"expression":{"arguments":[{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"5397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6393,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:17","typeDescriptions":{}}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6378,"id":6397,"nodeType":"Return","src":"5382:21:17"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"4907:280:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:17","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"value","nameLocation":"5219:5:17","nodeType":"VariableDeclaration","scope":6399,"src":"5211:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6373,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:17"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6399,"src":"5249:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6376,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:17"},"scope":7913,"src":"5192:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"5767:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"5781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6409,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:17","memberName":"max","nodeType":"MemberAccess","src":"5789:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6420,"nodeType":"IfStatement","src":"5777:105:17","trueBody":{"id":6419,"nodeType":"Block","src":"5808:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"5865:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6414,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"5829:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6418,"nodeType":"RevertStatement","src":"5822:49:17"}]}},{"expression":{"arguments":[{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"5906:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6421,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:17","typeDescriptions":{}}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6406,"id":6425,"nodeType":"Return","src":"5891:21:17"}]},"documentation":{"id":6400,"nodeType":"StructuredDocumentation","src":"5416:280:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:17","nodeType":"FunctionDefinition","parameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"value","nameLocation":"5728:5:17","nodeType":"VariableDeclaration","scope":6427,"src":"5720:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:17"},"returnParameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6427,"src":"5758:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6404,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:17"},"scope":7913,"src":"5701:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6454,"nodeType":"Block","src":"6276:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"6290:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6437,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:17","memberName":"max","nodeType":"MemberAccess","src":"6298:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"nodeType":"IfStatement","src":"6286:105:17","trueBody":{"id":6447,"nodeType":"Block","src":"6317:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"6374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6442,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"6338:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6446,"nodeType":"RevertStatement","src":"6331:49:17"}]}},{"expression":{"arguments":[{"id":6451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"6415:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6449,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:17","typeDescriptions":{}}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6434,"id":6453,"nodeType":"Return","src":"6400:21:17"}]},"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"5925:280:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6455,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:17","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"value","nameLocation":"6237:5:17","nodeType":"VariableDeclaration","scope":6455,"src":"6229:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:17"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6455,"src":"6267:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6432,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:17"},"scope":7913,"src":"6210:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6482,"nodeType":"Block","src":"6785:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"6799:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6465,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:17","memberName":"max","nodeType":"MemberAccess","src":"6807:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6476,"nodeType":"IfStatement","src":"6795:105:17","trueBody":{"id":6475,"nodeType":"Block","src":"6826:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"6883:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6470,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"6847:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6474,"nodeType":"RevertStatement","src":"6840:49:17"}]}},{"expression":{"arguments":[{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"6924:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6477,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:17","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6462,"id":6481,"nodeType":"Return","src":"6909:21:17"}]},"documentation":{"id":6456,"nodeType":"StructuredDocumentation","src":"6434:280:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6483,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:17","nodeType":"FunctionDefinition","parameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"value","nameLocation":"6746:5:17","nodeType":"VariableDeclaration","scope":6483,"src":"6738:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6457,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:17"},"returnParameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6483,"src":"6776:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6460,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:17"},"scope":7913,"src":"6719:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"7294:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7308:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6493,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:17","memberName":"max","nodeType":"MemberAccess","src":"7316:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6504,"nodeType":"IfStatement","src":"7304:105:17","trueBody":{"id":6503,"nodeType":"Block","src":"7335:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7392:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"7356:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6502,"nodeType":"RevertStatement","src":"7349:49:17"}]}},{"expression":{"arguments":[{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7433:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6505,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:17","typeDescriptions":{}}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6490,"id":6509,"nodeType":"Return","src":"7418:21:17"}]},"documentation":{"id":6484,"nodeType":"StructuredDocumentation","src":"6943:280:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:17","nodeType":"FunctionDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6486,"mutability":"mutable","name":"value","nameLocation":"7255:5:17","nodeType":"VariableDeclaration","scope":6511,"src":"7247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:17"},"returnParameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6511,"src":"7285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6488,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:17"},"scope":7913,"src":"7228:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6538,"nodeType":"Block","src":"7803:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"7817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6521,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:17","memberName":"max","nodeType":"MemberAccess","src":"7825:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6532,"nodeType":"IfStatement","src":"7813:105:17","trueBody":{"id":6531,"nodeType":"Block","src":"7844:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"7901:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"7865:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6530,"nodeType":"RevertStatement","src":"7858:49:17"}]}},{"expression":{"arguments":[{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"7942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6533,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:17","typeDescriptions":{}}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6518,"id":6537,"nodeType":"Return","src":"7927:21:17"}]},"documentation":{"id":6512,"nodeType":"StructuredDocumentation","src":"7452:280:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:17","nodeType":"FunctionDefinition","parameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"value","nameLocation":"7764:5:17","nodeType":"VariableDeclaration","scope":6539,"src":"7756:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6513,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:17"},"returnParameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6539,"src":"7794:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6516,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:17"},"scope":7913,"src":"7737:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6566,"nodeType":"Block","src":"8312:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"8326:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6549,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:17","memberName":"max","nodeType":"MemberAccess","src":"8334:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"8322:105:17","trueBody":{"id":6559,"nodeType":"Block","src":"8353:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"8410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"8374:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6558,"nodeType":"RevertStatement","src":"8367:49:17"}]}},{"expression":{"arguments":[{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"8451:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6561,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:17","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6546,"id":6565,"nodeType":"Return","src":"8436:21:17"}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"7961:280:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:17","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"value","nameLocation":"8273:5:17","nodeType":"VariableDeclaration","scope":6567,"src":"8265:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6541,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:17"},"returnParameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6567,"src":"8303:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6544,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:17"},"scope":7913,"src":"8246:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6594,"nodeType":"Block","src":"8821:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"8835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6577,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:17","memberName":"max","nodeType":"MemberAccess","src":"8843:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6588,"nodeType":"IfStatement","src":"8831:105:17","trueBody":{"id":6587,"nodeType":"Block","src":"8862:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"8919:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"8883:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6586,"nodeType":"RevertStatement","src":"8876:49:17"}]}},{"expression":{"arguments":[{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6589,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:17","typeDescriptions":{}}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6574,"id":6593,"nodeType":"Return","src":"8945:21:17"}]},"documentation":{"id":6568,"nodeType":"StructuredDocumentation","src":"8470:280:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:17","nodeType":"FunctionDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"value","nameLocation":"8782:5:17","nodeType":"VariableDeclaration","scope":6595,"src":"8774:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:17"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6595,"src":"8812:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6572,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:17"},"scope":7913,"src":"8755:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6622,"nodeType":"Block","src":"9330:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"9344:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6605,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:17","memberName":"max","nodeType":"MemberAccess","src":"9352:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6616,"nodeType":"IfStatement","src":"9340:105:17","trueBody":{"id":6615,"nodeType":"Block","src":"9371:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"9428:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"9392:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6614,"nodeType":"RevertStatement","src":"9385:49:17"}]}},{"expression":{"arguments":[{"id":6619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"9469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6617,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:17","typeDescriptions":{}}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6602,"id":6621,"nodeType":"Return","src":"9454:21:17"}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"8979:280:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:17","nodeType":"FunctionDefinition","parameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"value","nameLocation":"9291:5:17","nodeType":"VariableDeclaration","scope":6623,"src":"9283:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:17"},"returnParameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6623,"src":"9321:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6600,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:17"},"scope":7913,"src":"9264:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"9839:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"9853:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6633,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:17","memberName":"max","nodeType":"MemberAccess","src":"9861:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"9849:105:17","trueBody":{"id":6643,"nodeType":"Block","src":"9880:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"9937:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"9901:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6642,"nodeType":"RevertStatement","src":"9894:49:17"}]}},{"expression":{"arguments":[{"id":6647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"9978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6645,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:17","typeDescriptions":{}}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6630,"id":6649,"nodeType":"Return","src":"9963:21:17"}]},"documentation":{"id":6624,"nodeType":"StructuredDocumentation","src":"9488:280:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:17","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"value","nameLocation":"9800:5:17","nodeType":"VariableDeclaration","scope":6651,"src":"9792:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6625,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:17"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6651,"src":"9830:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6628,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:17"},"scope":7913,"src":"9773:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6678,"nodeType":"Block","src":"10348:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6661,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:17","memberName":"max","nodeType":"MemberAccess","src":"10370:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6672,"nodeType":"IfStatement","src":"10358:105:17","trueBody":{"id":6671,"nodeType":"Block","src":"10389:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"10446:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"10410:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6670,"nodeType":"RevertStatement","src":"10403:49:17"}]}},{"expression":{"arguments":[{"id":6675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"10487:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6673,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:17","typeDescriptions":{}}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6658,"id":6677,"nodeType":"Return","src":"10472:21:17"}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"9997:280:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:17","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"value","nameLocation":"10309:5:17","nodeType":"VariableDeclaration","scope":6679,"src":"10301:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:17"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6679,"src":"10339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6656,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:17"},"scope":7913,"src":"10282:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6706,"nodeType":"Block","src":"10857:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"10871:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6689,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:17","memberName":"max","nodeType":"MemberAccess","src":"10879:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6700,"nodeType":"IfStatement","src":"10867:105:17","trueBody":{"id":6699,"nodeType":"Block","src":"10898:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"10955:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"10919:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6698,"nodeType":"RevertStatement","src":"10912:49:17"}]}},{"expression":{"arguments":[{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"10996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6701,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:17","typeDescriptions":{}}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6686,"id":6705,"nodeType":"Return","src":"10981:21:17"}]},"documentation":{"id":6680,"nodeType":"StructuredDocumentation","src":"10506:280:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:17","nodeType":"FunctionDefinition","parameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"value","nameLocation":"10818:5:17","nodeType":"VariableDeclaration","scope":6707,"src":"10810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:17"},"returnParameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6707,"src":"10848:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6684,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:17"},"scope":7913,"src":"10791:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6734,"nodeType":"Block","src":"11360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"11374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6717,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:17","memberName":"max","nodeType":"MemberAccess","src":"11382:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6728,"nodeType":"IfStatement","src":"11370:103:17","trueBody":{"id":6727,"nodeType":"Block","src":"11400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"11456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"11421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6726,"nodeType":"RevertStatement","src":"11414:48:17"}]}},{"expression":{"arguments":[{"id":6731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"11496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6729,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:17","typeDescriptions":{}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6714,"id":6733,"nodeType":"Return","src":"11482:20:17"}]},"documentation":{"id":6708,"nodeType":"StructuredDocumentation","src":"11015:276:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"value","nameLocation":"11322:5:17","nodeType":"VariableDeclaration","scope":6735,"src":"11314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:17"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6735,"src":"11352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6712,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:17"},"scope":7913,"src":"11296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6762,"nodeType":"Block","src":"11860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"11874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6745,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:17","memberName":"max","nodeType":"MemberAccess","src":"11882:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"IfStatement","src":"11870:103:17","trueBody":{"id":6755,"nodeType":"Block","src":"11900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"11956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"11921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6754,"nodeType":"RevertStatement","src":"11914:48:17"}]}},{"expression":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"11996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6757,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:17","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6742,"id":6761,"nodeType":"Return","src":"11982:20:17"}]},"documentation":{"id":6736,"nodeType":"StructuredDocumentation","src":"11515:276:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"value","nameLocation":"11822:5:17","nodeType":"VariableDeclaration","scope":6763,"src":"11814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:17"},"returnParameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6763,"src":"11852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6740,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:17"},"scope":7913,"src":"11796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6790,"nodeType":"Block","src":"12360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"12374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6773,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:17","memberName":"max","nodeType":"MemberAccess","src":"12382:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6784,"nodeType":"IfStatement","src":"12370:103:17","trueBody":{"id":6783,"nodeType":"Block","src":"12400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"12456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"12421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6782,"nodeType":"RevertStatement","src":"12414:48:17"}]}},{"expression":{"arguments":[{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"12496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6785,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:17","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6770,"id":6789,"nodeType":"Return","src":"12482:20:17"}]},"documentation":{"id":6764,"nodeType":"StructuredDocumentation","src":"12015:276:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"value","nameLocation":"12322:5:17","nodeType":"VariableDeclaration","scope":6791,"src":"12314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:17"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6791,"src":"12352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6768,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:17"},"scope":7913,"src":"12296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6818,"nodeType":"Block","src":"12860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"12874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6801,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:17","memberName":"max","nodeType":"MemberAccess","src":"12882:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6812,"nodeType":"IfStatement","src":"12870:103:17","trueBody":{"id":6811,"nodeType":"Block","src":"12900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"12956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"12921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6810,"nodeType":"RevertStatement","src":"12914:48:17"}]}},{"expression":{"arguments":[{"id":6815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"12996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6813,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:17","typeDescriptions":{}}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6798,"id":6817,"nodeType":"Return","src":"12982:20:17"}]},"documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"12515:276:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"value","nameLocation":"12822:5:17","nodeType":"VariableDeclaration","scope":6819,"src":"12814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:17"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6819,"src":"12852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6796,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:17"},"scope":7913,"src":"12796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6846,"nodeType":"Block","src":"13360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"13374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6829,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:17","memberName":"max","nodeType":"MemberAccess","src":"13382:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6840,"nodeType":"IfStatement","src":"13370:103:17","trueBody":{"id":6839,"nodeType":"Block","src":"13400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"13456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"13421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6838,"nodeType":"RevertStatement","src":"13414:48:17"}]}},{"expression":{"arguments":[{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"13496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6841,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:17","typeDescriptions":{}}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6826,"id":6845,"nodeType":"Return","src":"13482:20:17"}]},"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"13015:276:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"value","nameLocation":"13322:5:17","nodeType":"VariableDeclaration","scope":6847,"src":"13314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:17"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6847,"src":"13352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6824,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:17"},"scope":7913,"src":"13296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"13860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"13874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6857,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:17","memberName":"max","nodeType":"MemberAccess","src":"13882:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6868,"nodeType":"IfStatement","src":"13870:103:17","trueBody":{"id":6867,"nodeType":"Block","src":"13900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"13956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"13921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6866,"nodeType":"RevertStatement","src":"13914:48:17"}]}},{"expression":{"arguments":[{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"13996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6869,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:17","typeDescriptions":{}}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6854,"id":6873,"nodeType":"Return","src":"13982:20:17"}]},"documentation":{"id":6848,"nodeType":"StructuredDocumentation","src":"13515:276:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"value","nameLocation":"13822:5:17","nodeType":"VariableDeclaration","scope":6875,"src":"13814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:17"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6875,"src":"13852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6852,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:17"},"scope":7913,"src":"13796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6902,"nodeType":"Block","src":"14360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"14374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6885,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:17","memberName":"max","nodeType":"MemberAccess","src":"14382:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6896,"nodeType":"IfStatement","src":"14370:103:17","trueBody":{"id":6895,"nodeType":"Block","src":"14400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"14456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"14421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6894,"nodeType":"RevertStatement","src":"14414:48:17"}]}},{"expression":{"arguments":[{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"14496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6897,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:17","typeDescriptions":{}}},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6882,"id":6901,"nodeType":"Return","src":"14482:20:17"}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"14015:276:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"value","nameLocation":"14322:5:17","nodeType":"VariableDeclaration","scope":6903,"src":"14314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:17"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6903,"src":"14352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6880,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:17"},"scope":7913,"src":"14296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6930,"nodeType":"Block","src":"14860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"14874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6913,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:17","memberName":"max","nodeType":"MemberAccess","src":"14882:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6924,"nodeType":"IfStatement","src":"14870:103:17","trueBody":{"id":6923,"nodeType":"Block","src":"14900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"14956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"14921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6922,"nodeType":"RevertStatement","src":"14914:48:17"}]}},{"expression":{"arguments":[{"id":6927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"14996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6925,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:17","typeDescriptions":{}}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6910,"id":6929,"nodeType":"Return","src":"14982:20:17"}]},"documentation":{"id":6904,"nodeType":"StructuredDocumentation","src":"14515:276:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"value","nameLocation":"14822:5:17","nodeType":"VariableDeclaration","scope":6931,"src":"14814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:17"},"returnParameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6931,"src":"14852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6908,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:17"},"scope":7913,"src":"14796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6958,"nodeType":"Block","src":"15360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"15374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6941,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:17","memberName":"max","nodeType":"MemberAccess","src":"15382:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6952,"nodeType":"IfStatement","src":"15370:103:17","trueBody":{"id":6951,"nodeType":"Block","src":"15400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"15456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"15421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6950,"nodeType":"RevertStatement","src":"15414:48:17"}]}},{"expression":{"arguments":[{"id":6955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"15496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6953,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:17","typeDescriptions":{}}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6938,"id":6957,"nodeType":"Return","src":"15482:20:17"}]},"documentation":{"id":6932,"nodeType":"StructuredDocumentation","src":"15015:276:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"value","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":6959,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6933,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:17"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6959,"src":"15352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6936,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:17"},"scope":7913,"src":"15296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6986,"nodeType":"Block","src":"15860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"15874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6969,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6968,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:17","memberName":"max","nodeType":"MemberAccess","src":"15882:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"nodeType":"IfStatement","src":"15870:103:17","trueBody":{"id":6979,"nodeType":"Block","src":"15900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"15956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6974,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"15921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6978,"nodeType":"RevertStatement","src":"15914:48:17"}]}},{"expression":{"arguments":[{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"15996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6981,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:17","typeDescriptions":{}}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6966,"id":6985,"nodeType":"Return","src":"15982:20:17"}]},"documentation":{"id":6960,"nodeType":"StructuredDocumentation","src":"15515:276:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"value","nameLocation":"15822:5:17","nodeType":"VariableDeclaration","scope":6987,"src":"15814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6961,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:17"},"returnParameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6987,"src":"15852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6964,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:17"},"scope":7913,"src":"15796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7014,"nodeType":"Block","src":"16360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"16374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6997,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:17","memberName":"max","nodeType":"MemberAccess","src":"16382:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"nodeType":"IfStatement","src":"16370:103:17","trueBody":{"id":7007,"nodeType":"Block","src":"16400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"16456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7002,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"16421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7006,"nodeType":"RevertStatement","src":"16414:48:17"}]}},{"expression":{"arguments":[{"id":7011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"16496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7009,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:17","typeDescriptions":{}}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6994,"id":7013,"nodeType":"Return","src":"16482:20:17"}]},"documentation":{"id":6988,"nodeType":"StructuredDocumentation","src":"16015:276:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7015,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"value","nameLocation":"16322:5:17","nodeType":"VariableDeclaration","scope":7015,"src":"16314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:17"},"returnParameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7015,"src":"16352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6992,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:17"},"scope":7913,"src":"16296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7042,"nodeType":"Block","src":"16854:146:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"16868:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7025,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:17","memberName":"max","nodeType":"MemberAccess","src":"16876:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7036,"nodeType":"IfStatement","src":"16864:101:17","trueBody":{"id":7035,"nodeType":"Block","src":"16893:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"16948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7030,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"16914:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7034,"nodeType":"RevertStatement","src":"16907:47:17"}]}},{"expression":{"arguments":[{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"16987:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7037,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:17","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7022,"id":7041,"nodeType":"Return","src":"16974:19:17"}]},"documentation":{"id":7016,"nodeType":"StructuredDocumentation","src":"16515:272:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7043,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:17","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"value","nameLocation":"16817:5:17","nodeType":"VariableDeclaration","scope":7043,"src":"16809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:17"},"returnParameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7043,"src":"16847:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7020,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:17"},"scope":7913,"src":"16792:208:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7065,"nodeType":"Block","src":"17236:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"17250:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7059,"nodeType":"IfStatement","src":"17246:81:17","trueBody":{"id":7058,"nodeType":"Block","src":"17261:66:17","statements":[{"errorCall":{"arguments":[{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"17310:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7054,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"17282:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7057,"nodeType":"RevertStatement","src":"17275:41:17"}]}},{"expression":{"arguments":[{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"17351:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7060,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:17","typeDescriptions":{}}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7050,"id":7064,"nodeType":"Return","src":"17336:21:17"}]},"documentation":{"id":7044,"nodeType":"StructuredDocumentation","src":"17006:160:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:17","nodeType":"FunctionDefinition","parameters":{"id":7047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7046,"mutability":"mutable","name":"value","nameLocation":"17197:5:17","nodeType":"VariableDeclaration","scope":7066,"src":"17190:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7045,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:17"},"returnParameters":{"id":7050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7066,"src":"17227:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7048,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:17"},"scope":7913,"src":"17171:193:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7091,"nodeType":"Block","src":"17761:150:17","statements":[{"expression":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7074,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"17771:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"17791:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7075,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:17","typeDescriptions":{}}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7080,"nodeType":"ExpressionStatement","src":"17771:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7081,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"17811:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"17825:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7090,"nodeType":"IfStatement","src":"17807:98:17","trueBody":{"id":7089,"nodeType":"Block","src":"17832:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"17888:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7084,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"17853:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7088,"nodeType":"RevertStatement","src":"17846:48:17"}]}}]},"documentation":{"id":7067,"nodeType":"StructuredDocumentation","src":"17370:312:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7092,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:17","nodeType":"FunctionDefinition","parameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"value","nameLocation":"17712:5:17","nodeType":"VariableDeclaration","scope":7092,"src":"17705:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7068,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:17"},"returnParameters":{"id":7073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:17","nodeType":"VariableDeclaration","scope":7092,"src":"17742:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7071,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:17"},"scope":7913,"src":"17687:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7117,"nodeType":"Block","src":"18308:150:17","statements":[{"expression":{"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7100,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"18318:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"18338:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7101,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:17","typeDescriptions":{}}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7106,"nodeType":"ExpressionStatement","src":"18318:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"18358:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"18372:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7116,"nodeType":"IfStatement","src":"18354:98:17","trueBody":{"id":7115,"nodeType":"Block","src":"18379:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"18435:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7110,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"18400:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7114,"nodeType":"RevertStatement","src":"18393:48:17"}]}}]},"documentation":{"id":7093,"nodeType":"StructuredDocumentation","src":"17917:312:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7118,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:17","nodeType":"FunctionDefinition","parameters":{"id":7096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7095,"mutability":"mutable","name":"value","nameLocation":"18259:5:17","nodeType":"VariableDeclaration","scope":7118,"src":"18252:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7094,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:17"},"returnParameters":{"id":7099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7098,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:17","nodeType":"VariableDeclaration","scope":7118,"src":"18289:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7097,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:17"},"scope":7913,"src":"18234:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7143,"nodeType":"Block","src":"18855:150:17","statements":[{"expression":{"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7126,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"18865:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"18885:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7127,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:17","typeDescriptions":{}}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7132,"nodeType":"ExpressionStatement","src":"18865:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"18905:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"18919:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7142,"nodeType":"IfStatement","src":"18901:98:17","trueBody":{"id":7141,"nodeType":"Block","src":"18926:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"18982:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7136,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"18947:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7140,"nodeType":"RevertStatement","src":"18940:48:17"}]}}]},"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"18464:312:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7144,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:17","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"value","nameLocation":"18806:5:17","nodeType":"VariableDeclaration","scope":7144,"src":"18799:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7120,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:17"},"returnParameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:17","nodeType":"VariableDeclaration","scope":7144,"src":"18836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7123,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:17"},"scope":7913,"src":"18781:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7169,"nodeType":"Block","src":"19402:150:17","statements":[{"expression":{"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7152,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"19412:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"19432:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7153,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:17","typeDescriptions":{}}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7158,"nodeType":"ExpressionStatement","src":"19412:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"19452:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"19466:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7168,"nodeType":"IfStatement","src":"19448:98:17","trueBody":{"id":7167,"nodeType":"Block","src":"19473:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"19529:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7162,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"19494:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7166,"nodeType":"RevertStatement","src":"19487:48:17"}]}}]},"documentation":{"id":7145,"nodeType":"StructuredDocumentation","src":"19011:312:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7170,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:17","nodeType":"FunctionDefinition","parameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"value","nameLocation":"19353:5:17","nodeType":"VariableDeclaration","scope":7170,"src":"19346:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7146,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:17"},"returnParameters":{"id":7151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7150,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:17","nodeType":"VariableDeclaration","scope":7170,"src":"19383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7149,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:17"},"scope":7913,"src":"19328:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7195,"nodeType":"Block","src":"19949:150:17","statements":[{"expression":{"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7178,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"19959:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"19979:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7179,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:17","typeDescriptions":{}}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7184,"nodeType":"ExpressionStatement","src":"19959:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7185,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"19999:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"20013:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7194,"nodeType":"IfStatement","src":"19995:98:17","trueBody":{"id":7193,"nodeType":"Block","src":"20020:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"20076:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7188,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"20041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7192,"nodeType":"RevertStatement","src":"20034:48:17"}]}}]},"documentation":{"id":7171,"nodeType":"StructuredDocumentation","src":"19558:312:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:17","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7173,"mutability":"mutable","name":"value","nameLocation":"19900:5:17","nodeType":"VariableDeclaration","scope":7196,"src":"19893:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7172,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:17"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:17","nodeType":"VariableDeclaration","scope":7196,"src":"19930:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7175,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:17"},"scope":7913,"src":"19875:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7221,"nodeType":"Block","src":"20496:150:17","statements":[{"expression":{"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7204,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"20506:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"20526:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7205,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:17","typeDescriptions":{}}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7210,"nodeType":"ExpressionStatement","src":"20506:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7211,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"20546:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"20560:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7220,"nodeType":"IfStatement","src":"20542:98:17","trueBody":{"id":7219,"nodeType":"Block","src":"20567:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"20623:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7214,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"20588:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7218,"nodeType":"RevertStatement","src":"20581:48:17"}]}}]},"documentation":{"id":7197,"nodeType":"StructuredDocumentation","src":"20105:312:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7222,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:17","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"value","nameLocation":"20447:5:17","nodeType":"VariableDeclaration","scope":7222,"src":"20440:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7198,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:17"},"returnParameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:17","nodeType":"VariableDeclaration","scope":7222,"src":"20477:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7201,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:17"},"scope":7913,"src":"20422:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7247,"nodeType":"Block","src":"21043:150:17","statements":[{"expression":{"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"21053:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21073:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7231,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:17","typeDescriptions":{}}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7236,"nodeType":"ExpressionStatement","src":"21053:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"21093:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21107:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7246,"nodeType":"IfStatement","src":"21089:98:17","trueBody":{"id":7245,"nodeType":"Block","src":"21114:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21170:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7240,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"21135:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7244,"nodeType":"RevertStatement","src":"21128:48:17"}]}}]},"documentation":{"id":7223,"nodeType":"StructuredDocumentation","src":"20652:312:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7248,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:17","nodeType":"FunctionDefinition","parameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"value","nameLocation":"20994:5:17","nodeType":"VariableDeclaration","scope":7248,"src":"20987:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7224,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:17"},"returnParameters":{"id":7229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:17","nodeType":"VariableDeclaration","scope":7248,"src":"21024:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7227,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:17"},"scope":7913,"src":"20969:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7273,"nodeType":"Block","src":"21590:150:17","statements":[{"expression":{"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"21600:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"21620:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7257,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:17","typeDescriptions":{}}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7262,"nodeType":"ExpressionStatement","src":"21600:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7263,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"21640:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"21654:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7272,"nodeType":"IfStatement","src":"21636:98:17","trueBody":{"id":7271,"nodeType":"Block","src":"21661:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"21717:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7266,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"21682:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7270,"nodeType":"RevertStatement","src":"21675:48:17"}]}}]},"documentation":{"id":7249,"nodeType":"StructuredDocumentation","src":"21199:312:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7274,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:17","nodeType":"FunctionDefinition","parameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"value","nameLocation":"21541:5:17","nodeType":"VariableDeclaration","scope":7274,"src":"21534:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7250,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:17"},"returnParameters":{"id":7255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:17","nodeType":"VariableDeclaration","scope":7274,"src":"21571:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7253,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:17"},"scope":7913,"src":"21516:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7299,"nodeType":"Block","src":"22137:150:17","statements":[{"expression":{"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7282,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"22147:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"22167:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7283,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:17","typeDescriptions":{}}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7288,"nodeType":"ExpressionStatement","src":"22147:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7289,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"22187:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"22201:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7298,"nodeType":"IfStatement","src":"22183:98:17","trueBody":{"id":7297,"nodeType":"Block","src":"22208:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"22264:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7292,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"22229:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7296,"nodeType":"RevertStatement","src":"22222:48:17"}]}}]},"documentation":{"id":7275,"nodeType":"StructuredDocumentation","src":"21746:312:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7300,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:17","nodeType":"FunctionDefinition","parameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7277,"mutability":"mutable","name":"value","nameLocation":"22088:5:17","nodeType":"VariableDeclaration","scope":7300,"src":"22081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7276,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:17"},"returnParameters":{"id":7281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:17","nodeType":"VariableDeclaration","scope":7300,"src":"22118:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7279,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:17"},"scope":7913,"src":"22063:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7325,"nodeType":"Block","src":"22684:150:17","statements":[{"expression":{"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7308,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"22694:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"22714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7309,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:17","typeDescriptions":{}}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7314,"nodeType":"ExpressionStatement","src":"22694:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7315,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"22734:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"22748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7324,"nodeType":"IfStatement","src":"22730:98:17","trueBody":{"id":7323,"nodeType":"Block","src":"22755:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"22811:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7318,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"22776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7322,"nodeType":"RevertStatement","src":"22769:48:17"}]}}]},"documentation":{"id":7301,"nodeType":"StructuredDocumentation","src":"22293:312:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7326,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:17","nodeType":"FunctionDefinition","parameters":{"id":7304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7303,"mutability":"mutable","name":"value","nameLocation":"22635:5:17","nodeType":"VariableDeclaration","scope":7326,"src":"22628:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7302,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:17"},"returnParameters":{"id":7307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7306,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:17","nodeType":"VariableDeclaration","scope":7326,"src":"22665:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7305,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:17"},"scope":7913,"src":"22610:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7351,"nodeType":"Block","src":"23231:150:17","statements":[{"expression":{"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7334,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"23241:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"23261:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7335,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:17","typeDescriptions":{}}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7340,"nodeType":"ExpressionStatement","src":"23241:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"23281:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"23295:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7350,"nodeType":"IfStatement","src":"23277:98:17","trueBody":{"id":7349,"nodeType":"Block","src":"23302:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"23358:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7344,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"23323:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7348,"nodeType":"RevertStatement","src":"23316:48:17"}]}}]},"documentation":{"id":7327,"nodeType":"StructuredDocumentation","src":"22840:312:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7352,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:17","nodeType":"FunctionDefinition","parameters":{"id":7330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7329,"mutability":"mutable","name":"value","nameLocation":"23182:5:17","nodeType":"VariableDeclaration","scope":7352,"src":"23175:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7328,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:17"},"returnParameters":{"id":7333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:17","nodeType":"VariableDeclaration","scope":7352,"src":"23212:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7331,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:17"},"scope":7913,"src":"23157:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7377,"nodeType":"Block","src":"23778:150:17","statements":[{"expression":{"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"23788:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"23808:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7361,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:17","typeDescriptions":{}}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7366,"nodeType":"ExpressionStatement","src":"23788:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7367,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"23828:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"23842:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7376,"nodeType":"IfStatement","src":"23824:98:17","trueBody":{"id":7375,"nodeType":"Block","src":"23849:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"23905:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7370,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"23870:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7374,"nodeType":"RevertStatement","src":"23863:48:17"}]}}]},"documentation":{"id":7353,"nodeType":"StructuredDocumentation","src":"23387:312:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7378,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:17","nodeType":"FunctionDefinition","parameters":{"id":7356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"mutability":"mutable","name":"value","nameLocation":"23729:5:17","nodeType":"VariableDeclaration","scope":7378,"src":"23722:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7354,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:17"},"returnParameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:17","nodeType":"VariableDeclaration","scope":7378,"src":"23759:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7357,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:17"},"scope":7913,"src":"23704:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7403,"nodeType":"Block","src":"24325:150:17","statements":[{"expression":{"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7384,"src":"24335:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"24355:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7387,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:17","typeDescriptions":{}}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7392,"nodeType":"ExpressionStatement","src":"24335:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7393,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7384,"src":"24375:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"24389:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7402,"nodeType":"IfStatement","src":"24371:98:17","trueBody":{"id":7401,"nodeType":"Block","src":"24396:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"24452:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7396,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24417:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7400,"nodeType":"RevertStatement","src":"24410:48:17"}]}}]},"documentation":{"id":7379,"nodeType":"StructuredDocumentation","src":"23934:312:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7404,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:17","nodeType":"FunctionDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"value","nameLocation":"24276:5:17","nodeType":"VariableDeclaration","scope":7404,"src":"24269:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7380,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:17"},"returnParameters":{"id":7385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7384,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:17","nodeType":"VariableDeclaration","scope":7404,"src":"24306:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7383,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:17"},"scope":7913,"src":"24251:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7429,"nodeType":"Block","src":"24872:150:17","statements":[{"expression":{"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7412,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"24882:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"24902:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7413,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:17","typeDescriptions":{}}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7418,"nodeType":"ExpressionStatement","src":"24882:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7419,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"24922:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"24936:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7428,"nodeType":"IfStatement","src":"24918:98:17","trueBody":{"id":7427,"nodeType":"Block","src":"24943:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"24999:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7422,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24964:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7426,"nodeType":"RevertStatement","src":"24957:48:17"}]}}]},"documentation":{"id":7405,"nodeType":"StructuredDocumentation","src":"24481:312:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7430,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:17","nodeType":"FunctionDefinition","parameters":{"id":7408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7407,"mutability":"mutable","name":"value","nameLocation":"24823:5:17","nodeType":"VariableDeclaration","scope":7430,"src":"24816:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7406,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:17"},"returnParameters":{"id":7411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7410,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:17","nodeType":"VariableDeclaration","scope":7430,"src":"24853:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7409,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:17"},"scope":7913,"src":"24798:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7455,"nodeType":"Block","src":"25419:150:17","statements":[{"expression":{"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7438,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"25429:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25449:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7439,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:17","typeDescriptions":{}}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7444,"nodeType":"ExpressionStatement","src":"25429:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7445,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"25469:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25483:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7454,"nodeType":"IfStatement","src":"25465:98:17","trueBody":{"id":7453,"nodeType":"Block","src":"25490:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25546:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7448,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"25511:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7452,"nodeType":"RevertStatement","src":"25504:48:17"}]}}]},"documentation":{"id":7431,"nodeType":"StructuredDocumentation","src":"25028:312:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7456,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:17","nodeType":"FunctionDefinition","parameters":{"id":7434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"value","nameLocation":"25370:5:17","nodeType":"VariableDeclaration","scope":7456,"src":"25363:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7432,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:17"},"returnParameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7436,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:17","nodeType":"VariableDeclaration","scope":7456,"src":"25400:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7435,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:17"},"scope":7913,"src":"25345:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7481,"nodeType":"Block","src":"25966:150:17","statements":[{"expression":{"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7464,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"25976:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"25996:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7465,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:17","typeDescriptions":{}}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7470,"nodeType":"ExpressionStatement","src":"25976:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7471,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"26016:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"26030:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7480,"nodeType":"IfStatement","src":"26012:98:17","trueBody":{"id":7479,"nodeType":"Block","src":"26037:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"26093:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7474,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"26058:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7478,"nodeType":"RevertStatement","src":"26051:48:17"}]}}]},"documentation":{"id":7457,"nodeType":"StructuredDocumentation","src":"25575:312:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7482,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:17","nodeType":"FunctionDefinition","parameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7459,"mutability":"mutable","name":"value","nameLocation":"25917:5:17","nodeType":"VariableDeclaration","scope":7482,"src":"25910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7458,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:17"},"returnParameters":{"id":7463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:17","nodeType":"VariableDeclaration","scope":7482,"src":"25947:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7461,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:17"},"scope":7913,"src":"25892:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7507,"nodeType":"Block","src":"26513:150:17","statements":[{"expression":{"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"26523:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"26543:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7491,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:17","typeDescriptions":{}}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7496,"nodeType":"ExpressionStatement","src":"26523:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7497,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"26563:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"26577:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7506,"nodeType":"IfStatement","src":"26559:98:17","trueBody":{"id":7505,"nodeType":"Block","src":"26584:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"26640:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7500,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"26605:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7504,"nodeType":"RevertStatement","src":"26598:48:17"}]}}]},"documentation":{"id":7483,"nodeType":"StructuredDocumentation","src":"26122:312:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7508,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:17","nodeType":"FunctionDefinition","parameters":{"id":7486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7485,"mutability":"mutable","name":"value","nameLocation":"26464:5:17","nodeType":"VariableDeclaration","scope":7508,"src":"26457:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7484,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:17"},"returnParameters":{"id":7489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:17","nodeType":"VariableDeclaration","scope":7508,"src":"26494:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7487,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:17"},"scope":7913,"src":"26439:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7533,"nodeType":"Block","src":"27060:150:17","statements":[{"expression":{"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7516,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"27070:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"27090:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7517,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:17","typeDescriptions":{}}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7522,"nodeType":"ExpressionStatement","src":"27070:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7523,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"27110:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"27124:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7532,"nodeType":"IfStatement","src":"27106:98:17","trueBody":{"id":7531,"nodeType":"Block","src":"27131:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"27187:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7526,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27152:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7530,"nodeType":"RevertStatement","src":"27145:48:17"}]}}]},"documentation":{"id":7509,"nodeType":"StructuredDocumentation","src":"26669:312:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7534,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:17","nodeType":"FunctionDefinition","parameters":{"id":7512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7511,"mutability":"mutable","name":"value","nameLocation":"27011:5:17","nodeType":"VariableDeclaration","scope":7534,"src":"27004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7510,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:17"},"returnParameters":{"id":7515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7514,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:17","nodeType":"VariableDeclaration","scope":7534,"src":"27041:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7513,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:17"},"scope":7913,"src":"26986:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7559,"nodeType":"Block","src":"27607:150:17","statements":[{"expression":{"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7542,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"27617:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7537,"src":"27637:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7543,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:17","typeDescriptions":{}}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7548,"nodeType":"ExpressionStatement","src":"27617:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7549,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"27657:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7537,"src":"27671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7558,"nodeType":"IfStatement","src":"27653:98:17","trueBody":{"id":7557,"nodeType":"Block","src":"27678:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7537,"src":"27734:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7552,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27699:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7556,"nodeType":"RevertStatement","src":"27692:48:17"}]}}]},"documentation":{"id":7535,"nodeType":"StructuredDocumentation","src":"27216:312:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7560,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:17","nodeType":"FunctionDefinition","parameters":{"id":7538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7537,"mutability":"mutable","name":"value","nameLocation":"27558:5:17","nodeType":"VariableDeclaration","scope":7560,"src":"27551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7536,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:17"},"returnParameters":{"id":7541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7540,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:17","nodeType":"VariableDeclaration","scope":7560,"src":"27588:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7539,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:17"},"scope":7913,"src":"27533:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7585,"nodeType":"Block","src":"28147:148:17","statements":[{"expression":{"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7568,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"28157:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"28176:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7569,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:17","typeDescriptions":{}}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7574,"nodeType":"ExpressionStatement","src":"28157:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"28196:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"28210:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7584,"nodeType":"IfStatement","src":"28192:97:17","trueBody":{"id":7583,"nodeType":"Block","src":"28217:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"28272:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7578,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"28238:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7582,"nodeType":"RevertStatement","src":"28231:47:17"}]}}]},"documentation":{"id":7561,"nodeType":"StructuredDocumentation","src":"27763:307:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7586,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:17","nodeType":"FunctionDefinition","parameters":{"id":7564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7563,"mutability":"mutable","name":"value","nameLocation":"28099:5:17","nodeType":"VariableDeclaration","scope":7586,"src":"28092:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7562,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:17"},"returnParameters":{"id":7567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7566,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:17","nodeType":"VariableDeclaration","scope":7586,"src":"28129:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7565,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:17"},"scope":7913,"src":"28075:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7611,"nodeType":"Block","src":"28685:148:17","statements":[{"expression":{"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"28695:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"28714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7595,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:17","typeDescriptions":{}}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7600,"nodeType":"ExpressionStatement","src":"28695:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"28734:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"28748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7610,"nodeType":"IfStatement","src":"28730:97:17","trueBody":{"id":7609,"nodeType":"Block","src":"28755:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"28810:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7604,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"28776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7608,"nodeType":"RevertStatement","src":"28769:47:17"}]}}]},"documentation":{"id":7587,"nodeType":"StructuredDocumentation","src":"28301:307:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7612,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:17","nodeType":"FunctionDefinition","parameters":{"id":7590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7589,"mutability":"mutable","name":"value","nameLocation":"28637:5:17","nodeType":"VariableDeclaration","scope":7612,"src":"28630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7588,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:17"},"returnParameters":{"id":7593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7592,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:17","nodeType":"VariableDeclaration","scope":7612,"src":"28667:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7591,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:17"},"scope":7913,"src":"28613:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7637,"nodeType":"Block","src":"29223:148:17","statements":[{"expression":{"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"29233:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"29252:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7621,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:17","typeDescriptions":{}}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7626,"nodeType":"ExpressionStatement","src":"29233:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"29272:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"29286:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7636,"nodeType":"IfStatement","src":"29268:97:17","trueBody":{"id":7635,"nodeType":"Block","src":"29293:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"29348:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7630,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"29314:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7634,"nodeType":"RevertStatement","src":"29307:47:17"}]}}]},"documentation":{"id":7613,"nodeType":"StructuredDocumentation","src":"28839:307:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7638,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:17","nodeType":"FunctionDefinition","parameters":{"id":7616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7615,"mutability":"mutable","name":"value","nameLocation":"29175:5:17","nodeType":"VariableDeclaration","scope":7638,"src":"29168:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7614,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:17"},"returnParameters":{"id":7619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7618,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:17","nodeType":"VariableDeclaration","scope":7638,"src":"29205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7617,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:17"},"scope":7913,"src":"29151:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7663,"nodeType":"Block","src":"29761:148:17","statements":[{"expression":{"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7646,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"29771:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"29790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7647,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:17","typeDescriptions":{}}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7652,"nodeType":"ExpressionStatement","src":"29771:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"29810:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"29824:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7662,"nodeType":"IfStatement","src":"29806:97:17","trueBody":{"id":7661,"nodeType":"Block","src":"29831:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"29886:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7656,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"29852:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7660,"nodeType":"RevertStatement","src":"29845:47:17"}]}}]},"documentation":{"id":7639,"nodeType":"StructuredDocumentation","src":"29377:307:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7664,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:17","nodeType":"FunctionDefinition","parameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7641,"mutability":"mutable","name":"value","nameLocation":"29713:5:17","nodeType":"VariableDeclaration","scope":7664,"src":"29706:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7640,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:17"},"returnParameters":{"id":7645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:17","nodeType":"VariableDeclaration","scope":7664,"src":"29743:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7643,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:17"},"scope":7913,"src":"29689:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7689,"nodeType":"Block","src":"30299:148:17","statements":[{"expression":{"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"30309:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"30328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7673,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:17","typeDescriptions":{}}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7678,"nodeType":"ExpressionStatement","src":"30309:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"30348:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7688,"nodeType":"IfStatement","src":"30344:97:17","trueBody":{"id":7687,"nodeType":"Block","src":"30369:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"30424:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7682,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"30390:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7686,"nodeType":"RevertStatement","src":"30383:47:17"}]}}]},"documentation":{"id":7665,"nodeType":"StructuredDocumentation","src":"29915:307:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7690,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:17","nodeType":"FunctionDefinition","parameters":{"id":7668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7667,"mutability":"mutable","name":"value","nameLocation":"30251:5:17","nodeType":"VariableDeclaration","scope":7690,"src":"30244:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7666,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:17"},"returnParameters":{"id":7671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7670,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:17","nodeType":"VariableDeclaration","scope":7690,"src":"30281:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7669,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:17"},"scope":7913,"src":"30227:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7715,"nodeType":"Block","src":"30837:148:17","statements":[{"expression":{"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"30847:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"30866:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7699,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:17","typeDescriptions":{}}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7704,"nodeType":"ExpressionStatement","src":"30847:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"30886:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"30900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7714,"nodeType":"IfStatement","src":"30882:97:17","trueBody":{"id":7713,"nodeType":"Block","src":"30907:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"30962:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7708,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"30928:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7712,"nodeType":"RevertStatement","src":"30921:47:17"}]}}]},"documentation":{"id":7691,"nodeType":"StructuredDocumentation","src":"30453:307:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7716,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:17","nodeType":"FunctionDefinition","parameters":{"id":7694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7693,"mutability":"mutable","name":"value","nameLocation":"30789:5:17","nodeType":"VariableDeclaration","scope":7716,"src":"30782:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7692,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:17"},"returnParameters":{"id":7697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7696,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:17","nodeType":"VariableDeclaration","scope":7716,"src":"30819:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7695,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:17"},"scope":7913,"src":"30765:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7741,"nodeType":"Block","src":"31375:148:17","statements":[{"expression":{"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"31385:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"31404:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7725,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:17","typeDescriptions":{}}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7730,"nodeType":"ExpressionStatement","src":"31385:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"31424:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"31438:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7740,"nodeType":"IfStatement","src":"31420:97:17","trueBody":{"id":7739,"nodeType":"Block","src":"31445:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"31500:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7734,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"31466:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7738,"nodeType":"RevertStatement","src":"31459:47:17"}]}}]},"documentation":{"id":7717,"nodeType":"StructuredDocumentation","src":"30991:307:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7742,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:17","nodeType":"FunctionDefinition","parameters":{"id":7720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"value","nameLocation":"31327:5:17","nodeType":"VariableDeclaration","scope":7742,"src":"31320:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7718,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:17"},"returnParameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:17","nodeType":"VariableDeclaration","scope":7742,"src":"31357:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7721,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:17"},"scope":7913,"src":"31303:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7767,"nodeType":"Block","src":"31913:148:17","statements":[{"expression":{"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"31923:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"31942:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7751,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:17","typeDescriptions":{}}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7756,"nodeType":"ExpressionStatement","src":"31923:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"31962:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"31976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7766,"nodeType":"IfStatement","src":"31958:97:17","trueBody":{"id":7765,"nodeType":"Block","src":"31983:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"32038:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7760,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"32004:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7764,"nodeType":"RevertStatement","src":"31997:47:17"}]}}]},"documentation":{"id":7743,"nodeType":"StructuredDocumentation","src":"31529:307:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:17","nodeType":"FunctionDefinition","parameters":{"id":7746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"value","nameLocation":"31865:5:17","nodeType":"VariableDeclaration","scope":7768,"src":"31858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7744,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:17"},"returnParameters":{"id":7749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:17","nodeType":"VariableDeclaration","scope":7768,"src":"31895:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7747,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:17"},"scope":7913,"src":"31841:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7793,"nodeType":"Block","src":"32451:148:17","statements":[{"expression":{"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"32461:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"32480:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7777,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:17","typeDescriptions":{}}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7782,"nodeType":"ExpressionStatement","src":"32461:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"32500:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"32514:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7792,"nodeType":"IfStatement","src":"32496:97:17","trueBody":{"id":7791,"nodeType":"Block","src":"32521:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"32576:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7786,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"32542:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7790,"nodeType":"RevertStatement","src":"32535:47:17"}]}}]},"documentation":{"id":7769,"nodeType":"StructuredDocumentation","src":"32067:307:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:17","nodeType":"FunctionDefinition","parameters":{"id":7772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7771,"mutability":"mutable","name":"value","nameLocation":"32403:5:17","nodeType":"VariableDeclaration","scope":7794,"src":"32396:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7770,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:17"},"returnParameters":{"id":7775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7774,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:17","nodeType":"VariableDeclaration","scope":7794,"src":"32433:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7773,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:17"},"scope":7913,"src":"32379:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7819,"nodeType":"Block","src":"32989:148:17","statements":[{"expression":{"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"32999:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"33018:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7803,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:17","typeDescriptions":{}}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7808,"nodeType":"ExpressionStatement","src":"32999:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"33038:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"33052:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7818,"nodeType":"IfStatement","src":"33034:97:17","trueBody":{"id":7817,"nodeType":"Block","src":"33059:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"33114:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7812,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"33080:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7816,"nodeType":"RevertStatement","src":"33073:47:17"}]}}]},"documentation":{"id":7795,"nodeType":"StructuredDocumentation","src":"32605:307:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7820,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:17","nodeType":"FunctionDefinition","parameters":{"id":7798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"value","nameLocation":"32941:5:17","nodeType":"VariableDeclaration","scope":7820,"src":"32934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7796,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:17"},"returnParameters":{"id":7801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7800,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:17","nodeType":"VariableDeclaration","scope":7820,"src":"32971:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7799,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:17"},"scope":7913,"src":"32917:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7845,"nodeType":"Block","src":"33527:148:17","statements":[{"expression":{"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"33537:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"33556:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7829,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:17","typeDescriptions":{}}},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7834,"nodeType":"ExpressionStatement","src":"33537:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"33576:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"33590:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7844,"nodeType":"IfStatement","src":"33572:97:17","trueBody":{"id":7843,"nodeType":"Block","src":"33597:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"33652:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7838,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"33618:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7842,"nodeType":"RevertStatement","src":"33611:47:17"}]}}]},"documentation":{"id":7821,"nodeType":"StructuredDocumentation","src":"33143:307:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7846,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:17","nodeType":"FunctionDefinition","parameters":{"id":7824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"value","nameLocation":"33479:5:17","nodeType":"VariableDeclaration","scope":7846,"src":"33472:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7822,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:17"},"returnParameters":{"id":7827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7826,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:17","nodeType":"VariableDeclaration","scope":7846,"src":"33509:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7825,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:17"},"scope":7913,"src":"33455:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7871,"nodeType":"Block","src":"34058:146:17","statements":[{"expression":{"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"34068:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"34086:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7855,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:17","typeDescriptions":{}}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7860,"nodeType":"ExpressionStatement","src":"34068:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"34106:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"34120:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7870,"nodeType":"IfStatement","src":"34102:96:17","trueBody":{"id":7869,"nodeType":"Block","src":"34127:71:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"34181:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7864,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"34148:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7868,"nodeType":"RevertStatement","src":"34141:46:17"}]}}]},"documentation":{"id":7847,"nodeType":"StructuredDocumentation","src":"33681:302:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:17","nodeType":"FunctionDefinition","parameters":{"id":7850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7849,"mutability":"mutable","name":"value","nameLocation":"34011:5:17","nodeType":"VariableDeclaration","scope":7872,"src":"34004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7848,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:17"},"returnParameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:17","nodeType":"VariableDeclaration","scope":7872,"src":"34041:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7851,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:17"},"scope":7913,"src":"33988:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7901,"nodeType":"Block","src":"34444:250:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7875,"src":"34557:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7884,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:17","memberName":"max","nodeType":"MemberAccess","src":"34573:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7881,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:17","typeDescriptions":{}}},"id":7888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7895,"nodeType":"IfStatement","src":"34553:105:17","trueBody":{"id":7894,"nodeType":"Block","src":"34592:66:17","statements":[{"errorCall":{"arguments":[{"id":7891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7875,"src":"34641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7890,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34613:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7893,"nodeType":"RevertStatement","src":"34606:41:17"}]}},{"expression":{"arguments":[{"id":7898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7875,"src":"34681:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7896,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:17","typeDescriptions":{}}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7879,"id":7900,"nodeType":"Return","src":"34667:20:17"}]},"documentation":{"id":7873,"nodeType":"StructuredDocumentation","src":"34210:165:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:17","nodeType":"FunctionDefinition","parameters":{"id":7876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7875,"mutability":"mutable","name":"value","nameLocation":"34406:5:17","nodeType":"VariableDeclaration","scope":7902,"src":"34398:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7874,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:17"},"returnParameters":{"id":7879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7902,"src":"34436:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7877,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:17"},"scope":7913,"src":"34380:314:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7911,"nodeType":"Block","src":"34853:87:17","statements":[{"AST":{"nativeSrc":"34888:46:17","nodeType":"YulBlock","src":"34888:46:17","statements":[{"nativeSrc":"34902:22:17","nodeType":"YulAssignment","src":"34902:22:17","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:17","nodeType":"YulIdentifier","src":"34921:1:17"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:17","nodeType":"YulIdentifier","src":"34914:6:17"},"nativeSrc":"34914:9:17","nodeType":"YulFunctionCall","src":"34914:9:17"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:17","nodeType":"YulIdentifier","src":"34907:6:17"},"nativeSrc":"34907:17:17","nodeType":"YulFunctionCall","src":"34907:17:17"},"variableNames":[{"name":"u","nativeSrc":"34902:1:17","nodeType":"YulIdentifier","src":"34902:1:17"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":7905,"isOffset":false,"isSlot":false,"src":"34921:1:17","valueSize":1},{"declaration":7908,"isOffset":false,"isSlot":false,"src":"34902:1:17","valueSize":1}],"flags":["memory-safe"],"id":7910,"nodeType":"InlineAssembly","src":"34863:71:17"}]},"documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"34700:90:17","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7912,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:17","nodeType":"FunctionDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"b","nameLocation":"34816:1:17","nodeType":"VariableDeclaration","scope":7912,"src":"34811:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7904,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:17"},"returnParameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"u","nameLocation":"34850:1:17","nodeType":"VariableDeclaration","scope":7912,"src":"34842:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7907,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:17"},"scope":7913,"src":"34795:145:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7914,"src":"769:34173:17","usedErrors":[6158,6163,6170,6175],"usedEvents":[]}],"src":"192:34751:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7913],"SignedMath":[8057]},"id":8058,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7915,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8058,"sourceUnit":7914,"src":"135:40:18","symbolAliases":[{"foreign":{"id":7916,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"143:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7918,"nodeType":"StructuredDocumentation","src":"177:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8057,"linearizedBaseContracts":[8057],"name":"SignedMath","nameLocation":"266:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":7947,"nodeType":"Block","src":"746:215:18","statements":[{"id":7946,"nodeType":"UncheckedBlock","src":"756:199:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"894:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"900:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"904:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7939,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"932:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7937,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"916:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7913_$","typeString":"type(library SafeCast)"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7912,"src":"916:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7935,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:18","typeDescriptions":{}}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7929,"id":7945,"nodeType":"Return","src":"887:57:18"}]}]},"documentation":{"id":7919,"nodeType":"StructuredDocumentation","src":"283:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7948,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:18","nodeType":"FunctionDefinition","parameters":{"id":7926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7921,"mutability":"mutable","name":"condition","nameLocation":"684:9:18","nodeType":"VariableDeclaration","scope":7948,"src":"679:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7920,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7923,"mutability":"mutable","name":"a","nameLocation":"702:1:18","nodeType":"VariableDeclaration","scope":7948,"src":"695:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7922,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7925,"mutability":"mutable","name":"b","nameLocation":"712:1:18","nodeType":"VariableDeclaration","scope":7948,"src":"705:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7924,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:18"},"returnParameters":{"id":7929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7948,"src":"738:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7927,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:18"},"scope":8057,"src":"662:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7966,"nodeType":"Block","src":"1102:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"1127:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"1131:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"1134:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"1137:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7958,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"1119:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7957,"id":7965,"nodeType":"Return","src":"1112:27:18"}]},"documentation":{"id":7949,"nodeType":"StructuredDocumentation","src":"967:66:18","text":" @dev Returns the largest of two signed numbers."},"id":7967,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:18","nodeType":"FunctionDefinition","parameters":{"id":7954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7951,"mutability":"mutable","name":"a","nameLocation":"1058:1:18","nodeType":"VariableDeclaration","scope":7967,"src":"1051:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7950,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7953,"mutability":"mutable","name":"b","nameLocation":"1068:1:18","nodeType":"VariableDeclaration","scope":7967,"src":"1061:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7952,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:18"},"returnParameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7967,"src":"1094:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7955,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:18"},"scope":8057,"src":"1038:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7985,"nodeType":"Block","src":"1288:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"1313:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"1317:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"1320:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"1323:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7977,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"1305:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7976,"id":7984,"nodeType":"Return","src":"1298:27:18"}]},"documentation":{"id":7968,"nodeType":"StructuredDocumentation","src":"1152:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":7986,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:18","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7970,"mutability":"mutable","name":"a","nameLocation":"1244:1:18","nodeType":"VariableDeclaration","scope":7986,"src":"1237:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7969,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7972,"mutability":"mutable","name":"b","nameLocation":"1254:1:18","nodeType":"VariableDeclaration","scope":7986,"src":"1247:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7971,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:18"},"returnParameters":{"id":7976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7986,"src":"1280:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7974,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:18"},"scope":8057,"src":"1224:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8029,"nodeType":"Block","src":"1537:162:18","statements":[{"assignments":[7997],"declarations":[{"constant":false,"id":7997,"mutability":"mutable","name":"x","nameLocation":"1606:1:18","nodeType":"VariableDeclaration","scope":8029,"src":"1599:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7996,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8010,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1611:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"1615:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8002,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1622:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"1626:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8011,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"1651:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8016,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"1671:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{}}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8012,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:18","typeDescriptions":{}}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1685:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"1689:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7995,"id":8028,"nodeType":"Return","src":"1644:48:18"}]},"documentation":{"id":7987,"nodeType":"StructuredDocumentation","src":"1338:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8030,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:18","nodeType":"FunctionDefinition","parameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"a","nameLocation":"1493:1:18","nodeType":"VariableDeclaration","scope":8030,"src":"1486:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7988,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7991,"mutability":"mutable","name":"b","nameLocation":"1503:1:18","nodeType":"VariableDeclaration","scope":8030,"src":"1496:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7990,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:18"},"returnParameters":{"id":7995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8030,"src":"1529:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7993,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:18"},"scope":8057,"src":"1469:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8055,"nodeType":"Block","src":"1843:767:18","statements":[{"id":8054,"nodeType":"UncheckedBlock","src":"1853:751:18","statements":[{"assignments":[8039],"declarations":[{"constant":false,"id":8039,"mutability":"mutable","name":"mask","nameLocation":"2424:4:18","nodeType":"VariableDeclaration","scope":8054,"src":"2417:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8038,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8043,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8040,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"2431:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8046,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"2576:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8047,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"2580:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8050,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"2588:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:18","typeDescriptions":{}}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8037,"id":8053,"nodeType":"Return","src":"2560:33:18"}]}]},"documentation":{"id":8031,"nodeType":"StructuredDocumentation","src":"1705:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8056,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:18","nodeType":"FunctionDefinition","parameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"n","nameLocation":"1808:1:18","nodeType":"VariableDeclaration","scope":8056,"src":"1801:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8032,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:18"},"returnParameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8056,"src":"1834:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:18"},"scope":8057,"src":"1788:822:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8058,"src":"258:2354:18","usedErrors":[],"usedEvents":[]}],"src":"109:2504:18"},"id":18},"src/L9-Excercise/AIAgentShareToken.sol":{"ast":{"absolutePath":"src/L9-Excercise/AIAgentShareToken.sol","exportedSymbols":{"AIAgentShare":[8661],"ECDSA":[3101],"EIP712":[3328],"ERC20":[824],"MerkleProof":[4441],"Ownable":[147]},"id":8662,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8059,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"83:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8662,"sourceUnit":825,"src":"110:68:19","symbolAliases":[{"foreign":{"id":8060,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"118:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8662,"sourceUnit":148,"src":"180:67:19","symbolAliases":[{"foreign":{"id":8062,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"188:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":8065,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8662,"sourceUnit":3329,"src":"249:77:19","symbolAliases":[{"foreign":{"id":8064,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"257:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":8067,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8662,"sourceUnit":3102,"src":"328:75:19","symbolAliases":[{"foreign":{"id":8066,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"336:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":8069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8662,"sourceUnit":4442,"src":"405:87:19","symbolAliases":[{"foreign":{"id":8068,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"413:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8070,"name":"ERC20","nameLocations":["521:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"521:5:19"},"id":8071,"nodeType":"InheritanceSpecifier","src":"521:5:19"},{"baseName":{"id":8072,"name":"Ownable","nameLocations":["528:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"528:7:19"},"id":8073,"nodeType":"InheritanceSpecifier","src":"528:7:19"},{"baseName":{"id":8074,"name":"EIP712","nameLocations":["537:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":3328,"src":"537:6:19"},"id":8075,"nodeType":"InheritanceSpecifier","src":"537:6:19"}],"canonicalName":"AIAgentShare","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8661,"linearizedBaseContracts":[8661,3328,172,147,824,214,928,902,958],"name":"AIAgentShare","nameLocation":"505:12:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"233e08777131763a85257b15eafc9f96ef08f259653d9944301ff924b3917cf5","id":8079,"name":"Purchase","nameLocation":"557:8:19","nodeType":"EventDefinition","parameters":{"id":8078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8077,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"582:5:19","nodeType":"VariableDeclaration","scope":8079,"src":"566:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8076,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"565:23:19"},"src":"551:38:19"},{"anonymous":false,"eventSelector":"a18ccddbafa2abd18f548774a92a0c9f76df5771ea5a927074cf0dce0265e6d0","id":8085,"name":"DelegatedPurchase","nameLocation":"601:17:19","nodeType":"EventDefinition","parameters":{"id":8084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"indexed":true,"mutability":"mutable","name":"authorizer","nameLocation":"635:10:19","nodeType":"VariableDeclaration","scope":8085,"src":"619:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8080,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8083,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"663:6:19","nodeType":"VariableDeclaration","scope":8085,"src":"647:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8082,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"618:52:19"},"src":"595:76:19"},{"anonymous":false,"eventSelector":"d6891bd2534e5c59dc10743e5a7b2469cb5dcf61cfba85f70efddecb2b4553a2","id":8087,"name":"FundingRoundFinilized","nameLocation":"683:21:19","nodeType":"EventDefinition","parameters":{"id":8086,"nodeType":"ParameterList","parameters":[],"src":"704:2:19"},"src":"677:30:19"},{"errorSelector":"e6c4247b","id":8089,"name":"InvalidAddress","nameLocation":"721:14:19","nodeType":"ErrorDefinition","parameters":{"id":8088,"nodeType":"ParameterList","parameters":[],"src":"735:2:19"},"src":"715:23:19"},{"errorSelector":"2c5211c6","id":8091,"name":"InvalidAmount","nameLocation":"750:13:19","nodeType":"ErrorDefinition","parameters":{"id":8090,"nodeType":"ParameterList","parameters":[],"src":"763:2:19"},"src":"744:22:19"},{"errorSelector":"8baa579f","id":8093,"name":"InvalidSignature","nameLocation":"778:16:19","nodeType":"ErrorDefinition","parameters":{"id":8092,"nodeType":"ParameterList","parameters":[],"src":"794:2:19"},"src":"772:25:19"},{"errorSelector":"2ba75b25","id":8095,"name":"UserNotWhitelisted","nameLocation":"809:18:19","nodeType":"ErrorDefinition","parameters":{"id":8094,"nodeType":"ParameterList","parameters":[],"src":"827:2:19"},"src":"803:27:19"},{"errorSelector":"d08480ed","id":8097,"name":"InsufficientFundingBalance","nameLocation":"842:26:19","nodeType":"ErrorDefinition","parameters":{"id":8096,"nodeType":"ParameterList","parameters":[],"src":"868:2:19"},"src":"836:35:19"},{"errorSelector":"356680b7","id":8099,"name":"InsufficientFunds","nameLocation":"883:17:19","nodeType":"ErrorDefinition","parameters":{"id":8098,"nodeType":"ParameterList","parameters":[],"src":"900:2:19"},"src":"877:26:19"},{"errorSelector":"07101974","id":8101,"name":"FundingRoundNotExpired","nameLocation":"915:22:19","nodeType":"ErrorDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[],"src":"937:2:19"},"src":"909:31:19"},{"errorSelector":"607023bf","id":8103,"name":"FundingRoundAlreadyFinilized","nameLocation":"952:28:19","nodeType":"ErrorDefinition","parameters":{"id":8102,"nodeType":"ParameterList","parameters":[],"src":"980:2:19"},"src":"946:37:19"},{"errorSelector":"538fb163","id":8105,"name":"RelayerOnlyAccess","nameLocation":"995:17:19","nodeType":"ErrorDefinition","parameters":{"id":8104,"nodeType":"ParameterList","parameters":[],"src":"1012:2:19"},"src":"989:26:19"},{"errorSelector":"4d175db1","id":8107,"name":"InvalidParticipantIndex","nameLocation":"1027:23:19","nodeType":"ErrorDefinition","parameters":{"id":8106,"nodeType":"ParameterList","parameters":[],"src":"1050:2:19"},"src":"1021:32:19"},{"errorSelector":"3cccb988","id":8109,"name":"HasClaimedTokens","nameLocation":"1065:16:19","nodeType":"ErrorDefinition","parameters":{"id":8108,"nodeType":"ParameterList","parameters":[],"src":"1081:2:19"},"src":"1059:25:19"},{"constant":true,"functionSelector":"b9be6303","id":8114,"mutability":"constant","name":"DELEGATE_PURCHASE_TYPE_HASH","nameLocation":"1116:27:19","nodeType":"VariableDeclaration","scope":8661,"src":"1092:218:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1092:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174655075726368617365286164647265737320617574686f72697a65722c61646472657373207461726765742c75696e7432353620616d6f756e742c75696e743235362076616c696441667465722c75696e743235362065787069726174696f6e2c62797465733332206e6f6e636529","id":8112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1179:120:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc9bf37d032f38f48a078c07741a8112c5d73160d7beafc368f9603eee9b9118","typeString":"literal_string \"DelegatePurchase(address authorizer,address target,uint256 amount,uint256 validAfter,uint256 expiration,bytes32 nonce)\""},"value":"DelegatePurchase(address authorizer,address target,uint256 amount,uint256 validAfter,uint256 expiration,bytes32 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fc9bf37d032f38f48a078c07741a8112c5d73160d7beafc368f9603eee9b9118","typeString":"literal_string \"DelegatePurchase(address authorizer,address target,uint256 amount,uint256 validAfter,uint256 expiration,bytes32 nonce)\""}],"id":8111,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1155:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:155:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d96f7335","id":8123,"mutability":"constant","name":"MIN_BUY_AMOUNT","nameLocation":"1341:14:19","nodeType":"VariableDeclaration","scope":8661,"src":"1317:59:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_99999999999999999999_by_1","typeString":"int_const 99999999999999999999"},"id":8122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"id":8120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":8116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1358:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1364:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1370:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1364:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1358:14:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1358:18:19","typeDescriptions":{"typeIdentifier":"t_rational_99999999999999999999_by_1","typeString":"int_const 99999999999999999999"}},"visibility":"public"},{"constant":true,"functionSelector":"88d9f5ea","id":8132,"mutability":"constant","name":"MAX_BUY_AMOUNT","nameLocation":"1421:14:19","nodeType":"VariableDeclaration","scope":8661,"src":"1397:62:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_50000000000000000000001_by_1","typeString":"int_const 50000000000000000000001"},"id":8131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_50000000000000000000000_by_1","typeString":"int_const 50000000000000000000000"},"id":8129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35305f303030","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1438:6:19","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1447:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1447:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1438:17:19","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000000_by_1","typeString":"int_const 50000000000000000000000"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1458:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1438:21:19","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000001_by_1","typeString":"int_const 50000000000000000000001"}},"visibility":"public"},{"constant":true,"functionSelector":"833b9499","id":8135,"mutability":"constant","name":"PRICE_PER_TOKEN","nameLocation":"1504:15:19","nodeType":"VariableDeclaration","scope":8661,"src":"1480:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":8134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:9:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"public"},{"constant":true,"functionSelector":"75405d0d","id":8142,"mutability":"constant","name":"RELAYER_REWARD","nameLocation":"1586:14:19","nodeType":"VariableDeclaration","scope":8661,"src":"1562:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"},"id":8141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35","id":8137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1603:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1607:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1613:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1607:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1603:12:19","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"74244bc9","id":8145,"mutability":"constant","name":"TOTAL_PARTICIPANTS","nameLocation":"1658:18:19","nodeType":"VariableDeclaration","scope":8661,"src":"1634:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1634:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":8144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1679:3:19","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"public"},{"constant":false,"functionSelector":"6a443f67","id":8147,"mutability":"immutable","name":"whitelisteParticipantsHash","nameLocation":"1716:26:19","nodeType":"VariableDeclaration","scope":8661,"src":"1691:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1691:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"8f620487","id":8149,"mutability":"immutable","name":"expirationDate","nameLocation":"1774:14:19","nodeType":"VariableDeclaration","scope":8661,"src":"1749:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8406c079","id":8151,"mutability":"immutable","name":"relayer","nameLocation":"1820:7:19","nodeType":"VariableDeclaration","scope":8661,"src":"1795:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8150,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"04a79c97","id":8153,"mutability":"mutable","name":"fundingAmount","nameLocation":"1851:13:19","nodeType":"VariableDeclaration","scope":8661,"src":"1836:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7e799858","id":8155,"mutability":"mutable","name":"hasBeenFinalized","nameLocation":"1883:16:19","nodeType":"VariableDeclaration","scope":8661,"src":"1871:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8154,"name":"bool","nodeType":"ElementaryTypeName","src":"1871:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"5f0a0d6b","id":8159,"mutability":"mutable","name":"whitelistClaimTracker","nameLocation":"1926:21:19","nodeType":"VariableDeclaration","scope":8661,"src":"1908:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage","typeString":"uint256[2]"},"typeName":{"baseType":{"id":8156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8158,"length":{"hexValue":"32","id":8157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1916:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1908:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"public"},{"body":{"id":8171,"nodeType":"Block","src":"2007:82:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8162,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2026:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2030:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2026:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8164,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"2040:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2026:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8166,"name":"RelayerOnlyAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8105,"src":"2049:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2018:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8169,"nodeType":"ExpressionStatement","src":"2018:51:19"},{"id":8170,"nodeType":"PlaceholderStatement","src":"2080:1:19"}]},"id":8172,"name":"onlyRelayer","nameLocation":"1993:11:19","nodeType":"ModifierDefinition","parameters":{"id":8160,"nodeType":"ParameterList","parameters":[],"src":"2004:2:19"},"src":"1984:105:19","virtual":false,"visibility":"internal"},{"body":{"id":8188,"nodeType":"Block","src":"2138:78:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8177,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"2157:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2175:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2167:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8178,"name":"address","nodeType":"ElementaryTypeName","src":"2167:7:19","typeDescriptions":{}}},"id":8181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2167:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2157:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8183,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"2179:14:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2179:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8186,"nodeType":"ExpressionStatement","src":"2149:47:19"},{"id":8187,"nodeType":"PlaceholderStatement","src":"2207:1:19"}]},"id":8189,"name":"validateAddress","nameLocation":"2106:15:19","nodeType":"ModifierDefinition","parameters":{"id":8175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8174,"mutability":"mutable","name":"target","nameLocation":"2130:6:19","nodeType":"VariableDeclaration","scope":8189,"src":"2122:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8173,"name":"address","nodeType":"ElementaryTypeName","src":"2122:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2121:16:19"},"src":"2097:119:19","virtual":false,"visibility":"internal"},{"body":{"id":8237,"nodeType":"Block","src":"2554:222:19","statements":[{"expression":{"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8216,"name":"fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"2565:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8217,"name":"_fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"2581:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2565:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8219,"nodeType":"ExpressionStatement","src":"2565:30:19"},{"expression":{"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8220,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"2606:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8221,"name":"_relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"2616:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2606:18:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8223,"nodeType":"ExpressionStatement","src":"2606:18:19"},{"expression":{"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8224,"name":"whitelisteParticipantsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"2635:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8225,"name":"_whitelistHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"2664:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2635:43:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8227,"nodeType":"ExpressionStatement","src":"2635:43:19"},{"expression":{"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8228,"name":"expirationDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"2689:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8229,"name":"_expirationDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"2706:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2689:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8231,"nodeType":"ExpressionStatement","src":"2689:32:19"},{"expression":{"arguments":[{"id":8233,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"2740:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8234,"name":"fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"2754:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8232,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2734:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2734:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8236,"nodeType":"ExpressionStatement","src":"2734:34:19"}]},"id":8238,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8202,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"2426:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8203,"kind":"modifierInvocation","modifierName":{"id":8201,"name":"validateAddress","nameLocations":["2410:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":8189,"src":"2410:15:19"},"nodeType":"ModifierInvocation","src":"2410:29:19"},{"arguments":[{"hexValue":"41494167656e74536861726520","id":8205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2455:15:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b95190df2011534358fe07dac2ff22b8f60dcb50e7a95704767962f8d3039cca","typeString":"literal_string \"AIAgentShare \""},"value":"AIAgentShare "},{"hexValue":"414953","id":8206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2472:5:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_af0f1c9651d6c32f052ef184da9a1a5276244089b3c90a0a646e5b1ed25aadca","typeString":"literal_string \"AIS\""},"value":"AIS"}],"id":8207,"kind":"baseConstructorSpecifier","modifierName":{"id":8204,"name":"ERC20","nameLocations":["2449:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"2449:5:19"},"nodeType":"ModifierInvocation","src":"2449:29:19"},{"arguments":[{"id":8209,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"2496:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8210,"kind":"baseConstructorSpecifier","modifierName":{"id":8208,"name":"Ownable","nameLocations":["2488:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2488:7:19"},"nodeType":"ModifierInvocation","src":"2488:21:19"},{"arguments":[{"hexValue":"4149204167656e74205368617265","id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2526:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_e607d2ffd445727104c15cd3fef62ee5cd4e38f1948522f1073211599bf3c98b","typeString":"literal_string \"AI Agent Share\""},"value":"AI Agent Share"},{"hexValue":"31","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2544:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":8214,"kind":"baseConstructorSpecifier","modifierName":{"id":8211,"name":"EIP712","nameLocations":["2519:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":3328,"src":"2519:6:19"},"nodeType":"ModifierInvocation","src":"2519:29:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"initialOwner","nameLocation":"2254:12:19","nodeType":"VariableDeclaration","scope":8238,"src":"2246:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8190,"name":"address","nodeType":"ElementaryTypeName","src":"2246:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"_fundingAmount","nameLocation":"2285:14:19","nodeType":"VariableDeclaration","scope":8238,"src":"2277:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8195,"mutability":"mutable","name":"_relayer","nameLocation":"2318:8:19","nodeType":"VariableDeclaration","scope":8238,"src":"2310:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8194,"name":"address","nodeType":"ElementaryTypeName","src":"2310:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8197,"mutability":"mutable","name":"_whitelistHash","nameLocation":"2345:14:19","nodeType":"VariableDeclaration","scope":8238,"src":"2337:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8199,"mutability":"mutable","name":"_expirationDate","nameLocation":"2378:15:19","nodeType":"VariableDeclaration","scope":8238,"src":"2370:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2235:165:19"},"returnParameters":{"id":8215,"nodeType":"ParameterList","parameters":[],"src":"2554:0:19"},"scope":8661,"src":"2224:552:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8296,"nodeType":"Block","src":"3117:486:19","statements":[{"assignments":[8262],"declarations":[{"constant":false,"id":8262,"mutability":"mutable","name":"digest","nameLocation":"3136:6:19","nodeType":"VariableDeclaration","scope":8296,"src":"3128:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3128:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8277,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":8267,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"3237:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8268,"name":"authorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"3268:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8269,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"3301:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8270,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"3330:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8271,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"3359:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8272,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"3392:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8273,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"3425:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8265,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3204:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3208:6:19","memberName":"encode","nodeType":"MemberAccess","src":"3204:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3204:245:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8264,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3176:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3176:288:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8263,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"3145:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3145:330:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3128:347:19"},{"assignments":[8279],"declarations":[{"constant":false,"id":8279,"mutability":"mutable","name":"signer","nameLocation":"3496:6:19","nodeType":"VariableDeclaration","scope":8296,"src":"3488:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8278,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8287,"initialValue":{"arguments":[{"id":8282,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"3519:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8283,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"3527:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":8284,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"3530:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8285,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"3533:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8280,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"3505:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3101_$","typeString":"type(library ECDSA)"}},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3511:7:19","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"3505:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3505:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3488:47:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8289,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"3554:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8290,"name":"authorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"3564:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3554:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8292,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"3576:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3546:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3546:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8295,"nodeType":"ExpressionStatement","src":"3546:49:19"}]},"id":8297,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"2828:18:19","nodeType":"FunctionDefinition","parameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8240,"mutability":"mutable","name":"typeHash","nameLocation":"2865:8:19","nodeType":"VariableDeclaration","scope":8297,"src":"2857:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2857:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8242,"mutability":"mutable","name":"authorizer","nameLocation":"2892:10:19","nodeType":"VariableDeclaration","scope":8297,"src":"2884:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8241,"name":"address","nodeType":"ElementaryTypeName","src":"2884:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8244,"mutability":"mutable","name":"target","nameLocation":"2921:6:19","nodeType":"VariableDeclaration","scope":8297,"src":"2913:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8243,"name":"address","nodeType":"ElementaryTypeName","src":"2913:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8246,"mutability":"mutable","name":"amount","nameLocation":"2946:6:19","nodeType":"VariableDeclaration","scope":8297,"src":"2938:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8248,"mutability":"mutable","name":"validAfter","nameLocation":"2971:10:19","nodeType":"VariableDeclaration","scope":8297,"src":"2963:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8250,"mutability":"mutable","name":"expiration","nameLocation":"3000:10:19","nodeType":"VariableDeclaration","scope":8297,"src":"2992:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8252,"mutability":"mutable","name":"nonce","nameLocation":"3029:5:19","nodeType":"VariableDeclaration","scope":8297,"src":"3021:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3021:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8254,"mutability":"mutable","name":"v","nameLocation":"3051:1:19","nodeType":"VariableDeclaration","scope":8297,"src":"3045:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8253,"name":"uint8","nodeType":"ElementaryTypeName","src":"3045:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8256,"mutability":"mutable","name":"r","nameLocation":"3071:1:19","nodeType":"VariableDeclaration","scope":8297,"src":"3063:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8258,"mutability":"mutable","name":"s","nameLocation":"3091:1:19","nodeType":"VariableDeclaration","scope":8297,"src":"3083:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3083:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2846:253:19"},"returnParameters":{"id":8260,"nodeType":"ParameterList","parameters":[],"src":"3117:0:19"},"scope":8661,"src":"2819:784:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":8335,"nodeType":"Block","src":"3793:205:19","statements":[{"assignments":[8312],"declarations":[{"constant":false,"id":8312,"mutability":"mutable","name":"leaf","nameLocation":"3812:4:19","nodeType":"VariableDeclaration","scope":8335,"src":"3804:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3804:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8327,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":8320,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"3877:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"3885:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8303,"src":"3893:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8318,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3866:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3870:6:19","memberName":"encode","nodeType":"MemberAccess","src":"3866:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3866:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8317,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3856:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3856:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3843:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8314,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:19","typeDescriptions":{}}},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3849:6:19","memberName":"concat","nodeType":"MemberAccess","src":"3843:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3843:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8313,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3819:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:94:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3804:109:19"},{"expression":{"arguments":[{"id":8330,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"3950:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":8331,"name":"whitelisteParticipantsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"3957:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8332,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"3985:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8328,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"3931:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4441_$","typeString":"type(library MerkleProof)"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3943:6:19","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":3397,"src":"3931:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3931:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8310,"id":8334,"nodeType":"Return","src":"3924:66:19"}]},"id":8336,"implemented":true,"kind":"function","modifiers":[],"name":"_validateParticipant","nameLocation":"3620:20:19","nodeType":"FunctionDefinition","parameters":{"id":8307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"mutability":"mutable","name":"userID","nameLocation":"3659:6:19","nodeType":"VariableDeclaration","scope":8336,"src":"3651:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3651:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8301,"mutability":"mutable","name":"target","nameLocation":"3684:6:19","nodeType":"VariableDeclaration","scope":8336,"src":"3676:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8300,"name":"address","nodeType":"ElementaryTypeName","src":"3676:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8303,"mutability":"mutable","name":"amount","nameLocation":"3709:6:19","nodeType":"VariableDeclaration","scope":8336,"src":"3701:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8306,"mutability":"mutable","name":"proof","nameLocation":"3743:5:19","nodeType":"VariableDeclaration","scope":8336,"src":"3726:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3726:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8305,"nodeType":"ArrayTypeName","src":"3726:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3640:115:19"},"returnParameters":{"id":8310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8336,"src":"3787:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8308,"name":"bool","nodeType":"ElementaryTypeName","src":"3787:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3786:6:19"},"scope":8661,"src":"3611:387:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8379,"nodeType":"Block","src":"4112:283:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8346,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"4131:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8347,"name":"TOTAL_PARTICIPANTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"4140:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4131:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8349,"name":"InvalidParticipantIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"4160:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4160:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4123:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8352,"nodeType":"ExpressionStatement","src":"4123:63:19"},{"assignments":[8354],"declarations":[{"constant":false,"id":8354,"mutability":"mutable","name":"bitsCount","nameLocation":"4205:9:19","nodeType":"VariableDeclaration","scope":8379,"src":"4199:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8353,"name":"uint8","nodeType":"ElementaryTypeName","src":"4199:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":8356,"initialValue":{"hexValue":"323535","id":8355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4217:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"nodeType":"VariableDeclarationStatement","src":"4199:21:19"},{"assignments":[8358],"declarations":[{"constant":false,"id":8358,"mutability":"mutable","name":"index","nameLocation":"4239:5:19","nodeType":"VariableDeclaration","scope":8379,"src":"4231:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8359,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"4247:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8360,"name":"bitsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"4256:9:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4247:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4231:34:19"},{"assignments":[8364],"declarations":[{"constant":false,"id":8364,"mutability":"mutable","name":"bitIndex","nameLocation":"4286:8:19","nodeType":"VariableDeclaration","scope":8379,"src":"4278:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4278:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8368,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8365,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"4297:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":8366,"name":"bitsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"4306:9:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4297:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4278:37:19"},{"assignments":[8370],"declarations":[{"constant":false,"id":8370,"mutability":"mutable","name":"mask","nameLocation":"4334:4:19","nodeType":"VariableDeclaration","scope":8379,"src":"4326:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8374,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4341:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8372,"name":"bitIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"4346:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4341:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4326:28:19"},{"expression":{"components":[{"id":8375,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"4375:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8376,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"4382:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4374:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":8344,"id":8378,"nodeType":"Return","src":"4367:20:19"}]},"id":8380,"implemented":true,"kind":"function","modifiers":[],"name":"_createClaimBitMaskData","nameLocation":"4015:23:19","nodeType":"FunctionDefinition","parameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"userID","nameLocation":"4057:6:19","nodeType":"VariableDeclaration","scope":8380,"src":"4049:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8337,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4038:32:19"},"returnParameters":{"id":8344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8380,"src":"4094:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8380,"src":"4103:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4093:18:19"},"scope":8661,"src":"4006:389:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8399,"nodeType":"Block","src":"4456:131:19","statements":[{"assignments":[8386,8388],"declarations":[{"constant":false,"id":8386,"mutability":"mutable","name":"index","nameLocation":"4476:5:19","nodeType":"VariableDeclaration","scope":8399,"src":"4468:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8388,"mutability":"mutable","name":"mask","nameLocation":"4491:4:19","nodeType":"VariableDeclaration","scope":8399,"src":"4483:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8387,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8392,"initialValue":{"arguments":[{"id":8390,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"4523:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8389,"name":"_createClaimBitMaskData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"4499:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4499:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4467:63:19"},{"expression":{"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8393,"name":"whitelistClaimTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8159,"src":"4543:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage","typeString":"uint256[2] storage ref"}},"id":8395,"indexExpression":{"id":8394,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"4565:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4543:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":8396,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8388,"src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4543:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8398,"nodeType":"ExpressionStatement","src":"4543:36:19"}]},"id":8400,"implemented":true,"kind":"function","modifiers":[],"name":"_updateClaimStatus","nameLocation":"4412:18:19","nodeType":"FunctionDefinition","parameters":{"id":8383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8382,"mutability":"mutable","name":"userID","nameLocation":"4439:6:19","nodeType":"VariableDeclaration","scope":8400,"src":"4431:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8381,"name":"uint256","nodeType":"ElementaryTypeName","src":"4431:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4430:16:19"},"returnParameters":{"id":8384,"nodeType":"ParameterList","parameters":[],"src":"4456:0:19"},"scope":8661,"src":"4403:184:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8492,"nodeType":"Block","src":"4794:844:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8416,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"4830:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8415,"name":"hasClaimedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"4813:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4813:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":8418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4841:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4813:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8420,"name":"HasClaimedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"4848:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4848:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4805:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4805:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8423,"nodeType":"ExpressionStatement","src":"4805:62:19"},{"expression":{"arguments":[{"id":8425,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"4897:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8424,"name":"_updateClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"4878:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8427,"nodeType":"ExpressionStatement","src":"4878:26:19"},{"expression":{"arguments":[{"arguments":[{"id":8430,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"4960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8431,"name":"recepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"4968:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8432,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"4979:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8433,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"4997:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":8429,"name":"_validateParticipant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"4939:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256,address,uint256,bytes32[] memory) view returns (bool)"}},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8435,"name":"UserNotWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"5018:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5018:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4917:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:132:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8438,"nodeType":"ExpressionStatement","src":"4917:132:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8440,"name":"fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"5084:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5100:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5084:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8443,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"5104:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5084:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8445,"name":"InsufficientFundingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"5135:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5135:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5062:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5062:112:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8448,"nodeType":"ExpressionStatement","src":"5062:112:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8450,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"5209:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8451,"name":"MIN_BUY_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"5228:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5209:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8453,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"5263:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8454,"name":"MAX_BUY_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"5282:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5209:87:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8457,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"5311:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5187:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:150:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8460,"nodeType":"ExpressionStatement","src":"5187:150:19"},{"assignments":[8462],"declarations":[{"constant":false,"id":8462,"mutability":"mutable","name":"totalCost","nameLocation":"5358:9:19","nodeType":"VariableDeclaration","scope":8492,"src":"5350:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5350:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8472,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8463,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"5371:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8464,"name":"PRICE_PER_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"5390:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5371:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5370:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8468,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5428:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5428:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5422:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5370:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5350:88:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5457:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5461:5:19","memberName":"value","nodeType":"MemberAccess","src":"5457:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8476,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"5470:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5457:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8478,"name":"InsufficientFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"5481:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5449:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8481,"nodeType":"ExpressionStatement","src":"5449:52:19"},{"id":8486,"nodeType":"UncheckedBlock","src":"5514:70:19","statements":[{"expression":{"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8482,"name":"fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"5539:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8483,"name":"authorizedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"5556:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5539:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8485,"nodeType":"ExpressionStatement","src":"5539:33:19"}]},{"expression":{"arguments":[{"id":8488,"name":"recepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"5602:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8489,"name":"amountToPurchase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"5613:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8487,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5596:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5596:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8491,"nodeType":"ExpressionStatement","src":"5596:34:19"}]},"id":8493,"implemented":true,"kind":"function","modifiers":[],"name":"_purchase","nameLocation":"4604:9:19","nodeType":"FunctionDefinition","parameters":{"id":8412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8402,"mutability":"mutable","name":"userID","nameLocation":"4632:6:19","nodeType":"VariableDeclaration","scope":8493,"src":"4624:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8401,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8404,"mutability":"mutable","name":"recepient","nameLocation":"4657:9:19","nodeType":"VariableDeclaration","scope":8493,"src":"4649:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8403,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8406,"mutability":"mutable","name":"authorizedAmount","nameLocation":"4685:16:19","nodeType":"VariableDeclaration","scope":8493,"src":"4677:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8408,"mutability":"mutable","name":"amountToPurchase","nameLocation":"4720:16:19","nodeType":"VariableDeclaration","scope":8493,"src":"4712:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8407,"name":"uint256","nodeType":"ElementaryTypeName","src":"4712:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8411,"mutability":"mutable","name":"proof","nameLocation":"4764:5:19","nodeType":"VariableDeclaration","scope":8493,"src":"4747:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4747:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8410,"nodeType":"ArrayTypeName","src":"4747:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4613:163:19"},"returnParameters":{"id":8413,"nodeType":"ParameterList","parameters":[],"src":"4794:0:19"},"scope":8661,"src":"4595:1043:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":8517,"nodeType":"Block","src":"5748:144:19","statements":[{"assignments":[8501,8503],"declarations":[{"constant":false,"id":8501,"mutability":"mutable","name":"index","nameLocation":"5768:5:19","nodeType":"VariableDeclaration","scope":8517,"src":"5760:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5760:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8503,"mutability":"mutable","name":"mask","nameLocation":"5783:4:19","nodeType":"VariableDeclaration","scope":8517,"src":"5775:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8507,"initialValue":{"arguments":[{"id":8505,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"5815:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8504,"name":"_createClaimBitMaskData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"5791:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5791:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5759:63:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8508,"name":"whitelistClaimTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8159,"src":"5843:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage","typeString":"uint256[2] storage ref"}},"id":8510,"indexExpression":{"id":8509,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5843:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8511,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"5874:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5843:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5842:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5842:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8499,"id":8516,"nodeType":"Return","src":"5835:49:19"}]},"functionSelector":"c17c7aee","id":8518,"implemented":true,"kind":"function","modifiers":[],"name":"hasClaimedTokens","nameLocation":"5688:16:19","nodeType":"FunctionDefinition","parameters":{"id":8496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8495,"mutability":"mutable","name":"userID","nameLocation":"5713:6:19","nodeType":"VariableDeclaration","scope":8518,"src":"5705:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5705:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5704:16:19"},"returnParameters":{"id":8499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8518,"src":"5742:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8497,"name":"bool","nodeType":"ElementaryTypeName","src":"5742:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5741:6:19"},"scope":8661,"src":"5679:213:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8542,"nodeType":"Block","src":"6023:107:19","statements":[{"expression":{"arguments":[{"id":8529,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"6044:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8530,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6052:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6056:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6052:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"6064:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"6072:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8534,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8525,"src":"6080:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":8528,"name":"_purchase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"6034:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,uint256,bytes32[] memory)"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6034:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8536,"nodeType":"ExpressionStatement","src":"6034:52:19"},{"eventCall":{"arguments":[{"expression":{"id":8538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6111:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6115:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6111:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8537,"name":"Purchase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"6102:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6102:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8541,"nodeType":"EmitStatement","src":"6097:25:19"}]},"functionSelector":"4ddc43b5","id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"purchase","nameLocation":"5909:8:19","nodeType":"FunctionDefinition","parameters":{"id":8526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"userID","nameLocation":"5936:6:19","nodeType":"VariableDeclaration","scope":8543,"src":"5928:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8519,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8522,"mutability":"mutable","name":"amount","nameLocation":"5961:6:19","nodeType":"VariableDeclaration","scope":8543,"src":"5953:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8525,"mutability":"mutable","name":"proof","nameLocation":"5995:5:19","nodeType":"VariableDeclaration","scope":8543,"src":"5978:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5978:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8524,"nodeType":"ArrayTypeName","src":"5978:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5917:90:19"},"returnParameters":{"id":8527,"nodeType":"ParameterList","parameters":[],"src":"6023:0:19"},"scope":8661,"src":"5900:230:19","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":8610,"nodeType":"Block","src":"6477:508:19","statements":[{"expression":{"arguments":[{"id":8572,"name":"DELEGATE_PURCHASE_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"6521:27:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8573,"name":"authorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"6563:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8574,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"6588:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"6609:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8576,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"6630:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8577,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6655:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8578,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"6680:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8579,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"6700:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":8580,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"6716:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8581,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"6732:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8571,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"6488:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6488:256:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8583,"nodeType":"ExpressionStatement","src":"6488:256:19"},{"expression":{"arguments":[{"id":8585,"name":"userID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"6767:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8586,"name":"authorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"6775:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8587,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"6787:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"6795:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8589,"name":"RELAYER_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"6804:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6795:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8591,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8560,"src":"6820:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":8584,"name":"_purchase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"6757:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,uint256,bytes32[] memory)"}},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6757:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8593,"nodeType":"ExpressionStatement","src":"6757:69:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8594,"name":"RELAYER_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"6843:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6860:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6843:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8604,"nodeType":"IfStatement","src":"6839:84:19","trueBody":{"id":8603,"nodeType":"Block","src":"6863:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":8598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6884:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6888:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6884:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8600,"name":"RELAYER_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"6896:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8597,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6878:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6878:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8602,"nodeType":"ExpressionStatement","src":"6878:33:19"}]}},{"eventCall":{"arguments":[{"id":8606,"name":"authorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"6958:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8607,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"6970:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8605,"name":"DelegatedPurchase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"6940:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6940:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8609,"nodeType":"EmitStatement","src":"6935:42:19"}]},"functionSelector":"685e089b","id":8611,"implemented":true,"kind":"function","modifiers":[{"id":8569,"kind":"modifierInvocation","modifierName":{"id":8568,"name":"onlyRelayer","nameLocations":["6465:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":8172,"src":"6465:11:19"},"nodeType":"ModifierInvocation","src":"6465:11:19"}],"name":"delegatePurchase","nameLocation":"6147:16:19","nodeType":"FunctionDefinition","parameters":{"id":8567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8545,"mutability":"mutable","name":"userID","nameLocation":"6182:6:19","nodeType":"VariableDeclaration","scope":8611,"src":"6174:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8544,"name":"uint256","nodeType":"ElementaryTypeName","src":"6174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8547,"mutability":"mutable","name":"authorizer","nameLocation":"6207:10:19","nodeType":"VariableDeclaration","scope":8611,"src":"6199:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8546,"name":"address","nodeType":"ElementaryTypeName","src":"6199:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8549,"mutability":"mutable","name":"target","nameLocation":"6236:6:19","nodeType":"VariableDeclaration","scope":8611,"src":"6228:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8548,"name":"address","nodeType":"ElementaryTypeName","src":"6228:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8551,"mutability":"mutable","name":"amount","nameLocation":"6261:6:19","nodeType":"VariableDeclaration","scope":8611,"src":"6253:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6253:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8553,"mutability":"mutable","name":"validAfter","nameLocation":"6286:10:19","nodeType":"VariableDeclaration","scope":8611,"src":"6278:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6278:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8555,"mutability":"mutable","name":"expiration","nameLocation":"6315:10:19","nodeType":"VariableDeclaration","scope":8611,"src":"6307:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8557,"mutability":"mutable","name":"nonce","nameLocation":"6344:5:19","nodeType":"VariableDeclaration","scope":8611,"src":"6336:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6336:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8560,"mutability":"mutable","name":"proof","nameLocation":"6377:5:19","nodeType":"VariableDeclaration","scope":8611,"src":"6360:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6360:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8559,"nodeType":"ArrayTypeName","src":"6360:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8562,"mutability":"mutable","name":"v","nameLocation":"6399:1:19","nodeType":"VariableDeclaration","scope":8611,"src":"6393:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8561,"name":"uint8","nodeType":"ElementaryTypeName","src":"6393:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8564,"mutability":"mutable","name":"r","nameLocation":"6419:1:19","nodeType":"VariableDeclaration","scope":8611,"src":"6411:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6411:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8566,"mutability":"mutable","name":"s","nameLocation":"6439:1:19","nodeType":"VariableDeclaration","scope":8611,"src":"6431:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6431:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6163:284:19"},"returnParameters":{"id":8570,"nodeType":"ParameterList","parameters":[],"src":"6477:0:19"},"scope":8661,"src":"6138:847:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8659,"nodeType":"Block","src":"7044:592:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8617,"name":"hasBeenFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"7063:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":8618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7083:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7063:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8620,"name":"FundingRoundAlreadyFinilized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"7090:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7090:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7055:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8623,"nodeType":"ExpressionStatement","src":"7055:66:19"},{"expression":{"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8624,"name":"hasBeenFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"7132:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7151:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7132:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8627,"nodeType":"ExpressionStatement","src":"7132:23:19"},{"assignments":[8629],"declarations":[{"constant":false,"id":8629,"mutability":"mutable","name":"remainingBalance","nameLocation":"7344:16:19","nodeType":"VariableDeclaration","scope":8659,"src":"7336:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8628,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8631,"initialValue":{"id":8630,"name":"fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"7363:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7336:40:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8632,"name":"remainingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"7391:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7410:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7391:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8655,"nodeType":"IfStatement","src":"7387:201:19","trueBody":{"id":8654,"nodeType":"Block","src":"7413:175:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8636,"name":"expirationDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"7436:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8637,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7453:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7459:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"7453:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7436:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8640,"name":"FundingRoundNotExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"7470:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7470:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_error","typeString":"error"}],"id":8635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7428:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_error_$returns$__$","typeString":"function (bool,error) pure"}},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7428:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8643,"nodeType":"ExpressionStatement","src":"7428:67:19"},{"expression":{"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8644,"name":"fundingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"7512:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7512:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8647,"nodeType":"ExpressionStatement","src":"7512:17:19"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8649,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7550:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8651,"name":"remainingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"7559:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8648,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7544:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8653,"nodeType":"ExpressionStatement","src":"7544:32:19"}]}},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8656,"name":"FundingRoundFinilized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"7605:21:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8658,"nodeType":"EmitStatement","src":"7600:28:19"}]},"functionSelector":"f4d6f498","id":8660,"implemented":true,"kind":"function","modifiers":[{"id":8614,"kind":"modifierInvocation","modifierName":{"id":8613,"name":"onlyOwner","nameLocations":["7034:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7034:9:19"},"nodeType":"ModifierInvocation","src":"7034:9:19"}],"name":"finalizeFundingRound","nameLocation":"7002:20:19","nodeType":"FunctionDefinition","parameters":{"id":8612,"nodeType":"ParameterList","parameters":[],"src":"7022:2:19"},"returnParameters":{"id":8615,"nodeType":"ParameterList","parameters":[],"src":"7044:0:19"},"scope":8661,"src":"6993:643:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8662,"src":"496:7143:19","usedErrors":[13,18,184,189,194,203,208,213,1024,1026,2764,2769,2774,8089,8091,8093,8095,8097,8099,8101,8103,8105,8107,8109],"usedEvents":[24,152,836,845,8079,8085,8087]}],"src":"83:7558:19"},"id":19}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cca8e34ba4a10a3072e457ee409c3e14973552ffad66786674cea596605f229764736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xA8 0xE3 0x4B LOG4 LOG1 EXP ADDRESS PUSH19 0xE457EE409C3E14973552FFAD66786674CEA596 PUSH1 0x5F 0x22 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cca8e34ba4a10a3072e457ee409c3e14973552ffad66786674cea596605f229764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xA8 0xE3 0x4B LOG4 LOG1 EXP ADDRESS PUSH19 0xE457EE409C3E14973552FFAD66786674CEA596 PUSH1 0x5F 0x22 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f8b040c0129d6467db1e02d5ca77cbf395b7179adf812c845e38b3405f9b7fe364736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xB0 BLOCKHASH 0xC0 SLT SWAP14 PUSH5 0x67DB1E02D5 0xCA PUSH24 0xCBF395B7179ADF812C845E38B3405F9B7FE364736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1255:3046:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f8b040c0129d6467db1e02d5ca77cbf395b7179adf812c845e38b3405f9b7fe364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xB0 BLOCKHASH 0xC0 SLT SWAP14 PUSH5 0x67DB1E02D5 0xCA PUSH24 0xCBF395B7179ADF812C845E38B3405F9B7FE364736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1255:3046:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e11909616c8a357ae57cd11f3e744f7b7de3a3174b44a2b6467fa9904f2585764736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E GT SWAP1 SWAP7 AND 0xC8 LOG3 JUMPI 0xAE JUMPI 0xCD GT RETURN 0xE7 PREVRANDAO 0xF7 0xB7 0xDE GASPRICE BALANCE PUSH21 0xB44A2B6467FA9904F2585764736F6C634300081C00 CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e11909616c8a357ae57cd11f3e744f7b7de3a3174b44a2b6467fa9904f2585764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E GT SWAP1 SWAP7 AND 0xC8 LOG3 JUMPI 0xAE JUMPI 0xCD GT RETURN 0xE7 PREVRANDAO 0xF7 0xB7 0xDE GASPRICE BALANCE PUSH21 0xB44A2B6467FA9904F2585764736F6C634300081C00 CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b3a52a1edc00f264a10131122419f3e0cbee127bc9d5d98a20ed65729d6a232a64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xA5 0x2A 0x1E 0xDC STOP CALLCODE PUSH5 0xA101311224 NOT RETURN 0xE0 0xCB 0xEE SLT PUSH28 0xC9D5D98A20ED65729D6A232A64736F6C634300081C00330000000000 ","sourceMap":"297:18980:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b3a52a1edc00f264a10131122419f3e0cbee127bc9d5d98a20ed65729d6a232a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xA5 0x2A 0x1E 0xDC STOP CALLCODE PUSH5 0xA101311224 NOT RETURN 0xE0 0xCB 0xEE SLT PUSH28 0xC9D5D98A20ED65729D6A232A64736F6C634300081C00330000000000 ","sourceMap":"297:18980:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202ef22f034d9ef93c3116f406f8a9011283259adf13a9fa2ff192c56c59d5435164736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E CALLCODE 0x2F SUB 0x4D SWAP15 0xF9 EXTCODECOPY BALANCE AND DELEGATECALL MOD 0xF8 0xA9 ADD SLT DUP4 0x25 SWAP11 0xDF SGT 0xA9 STATICCALL 0x2F CALL SWAP3 0xC5 PUSH13 0x59D5435164736F6C634300081C STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202ef22f034d9ef93c3116f406f8a9011283259adf13a9fa2ff192c56c59d5435164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E CALLCODE 0x2F SUB 0x4D SWAP15 0xF9 EXTCODECOPY BALANCE AND DELEGATECALL MOD 0xF8 0xA9 ADD SLT DUP4 0x25 SWAP11 0xDF SGT 0xA9 STATICCALL 0x2F CALL SWAP3 0xC5 PUSH13 0x59D5435164736F6C634300081C STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122002f03cbd2e0fe4a67b03b66ad212d5100557fdaa49a904a62b60c8637316f24d64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL CREATE EXTCODECOPY 0xBD 0x2E 0xF 0xE4 0xA6 PUSH28 0x3B66AD212D5100557FDAA49A904A62B60C8637316F24D64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"221:811:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;221:811:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122002f03cbd2e0fe4a67b03b66ad212d5100557fdaa49a904a62b60c8637316f24d64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL CREATE EXTCODECOPY 0xBD 0x2E 0xF 0xE4 0xA6 PUSH28 0x3B66AD212D5100557FDAA49A904A62B60C8637316F24D64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"221:811:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f1e35f8c4f60590db716dd2ece1d684ce6d25a515836d918602bbfb11fbe5a1764736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE3 PUSH0 DUP13 0x4F PUSH1 0x59 0xD 0xB7 AND 0xDD 0x2E 0xCE SAR PUSH9 0x4CE6D25A515836D918 PUSH1 0x2B 0xBF 0xB1 0x1F 0xBE GAS OR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1353:22982:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1353:22982:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f1e35f8c4f60590db716dd2ece1d684ce6d25a515836d918602bbfb11fbe5a1764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE3 PUSH0 DUP13 0x4F PUSH1 0x59 0xD 0xB7 AND 0xDD 0x2E 0xCE SAR PUSH9 0x4CE6D25A515836D918 PUSH1 0x2B 0xBF 0xB1 0x1F 0xBE GAS OR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1353:22982:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d16d13e105f8f65b59b77c3a4171d84c0c7f3f1e869e32773d21c750d789751e64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH14 0x13E105F8F65B59B77C3A4171D84C 0xC PUSH32 0x3F1E869E32773D21C750D789751E64736F6C634300081C003300000000000000 ","sourceMap":"521:3729:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d16d13e105f8f65b59b77c3a4171d84c0c7f3f1e869e32773d21c750d789751e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH14 0x13E105F8F65B59B77C3A4171D84C 0xC PUSH32 0x3F1E869E32773D21C750D789751E64736F6C634300081C003300000000000000 ","sourceMap":"521:3729:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe4e02625737cdc6e5df7a89e49f6326eee89d2e7f600f66a448560a69f761dc64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4E MUL PUSH3 0x5737CD 0xC6 0xE5 0xDF PUSH27 0x89E49F6326EEE89D2E7F600F66A448560A69F761DC64736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:31863:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe4e02625737cdc6e5df7a89e49f6326eee89d2e7f600f66a448560a69f761dc64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4E MUL PUSH3 0x5737CD 0xC6 0xE5 0xDF PUSH27 0x89E49F6326EEE89D2E7F600F66A448560A69F761DC64736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:31863:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f46a6ffb56326a473b5758acd55e32e99b937035796e94c7557579cea6fb9d464736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CHAINID 0xA6 SELFDESTRUCT 0xB5 PUSH4 0x26A473B5 PUSH22 0x8ACD55E32E99B937035796E94C7557579CEA6FB9D464 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f46a6ffb56326a473b5758acd55e32e99b937035796e94c7557579cea6fb9d464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CHAINID 0xA6 SELFDESTRUCT 0xB5 PUSH4 0x26A473B5 PUSH22 0x8ACD55E32E99B937035796E94C7557579CEA6FB9D464 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208a55ed03b5bd2a413c0af052249d29c7f889c11b46b32ff454a480fb14df671c64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 SSTORE 0xED SUB 0xB5 0xBD 0x2A COINBASE EXTCODECOPY EXP CREATE MSTORE 0x24 SWAP14 0x29 0xC7 0xF8 DUP10 0xC1 SHL CHAINID 0xB3 0x2F DELEGATECALL SLOAD LOG4 DUP1 0xFB EQ 0xDF PUSH8 0x1C64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208a55ed03b5bd2a413c0af052249d29c7f889c11b46b32ff454a480fb14df671c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 SSTORE 0xED SUB 0xB5 0xBD 0x2A COINBASE EXTCODECOPY EXP CREATE MSTORE 0x24 SWAP14 0x29 0xC7 0xF8 DUP10 0xC1 SHL CHAINID 0xB3 0x2F DELEGATECALL SLOAD LOG4 DUP1 0xFB EQ 0xDF PUSH8 0x1C64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"src/L9-Excercise/AIAgentShareToken.sol":{"AIAgentShare":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"_fundingAmount","type":"uint256"},{"internalType":"address","name":"_relayer","type":"address"},{"internalType":"bytes32","name":"_whitelistHash","type":"bytes32"},{"internalType":"uint256","name":"_expirationDate","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FundingRoundAlreadyFinilized","type":"error"},{"inputs":[],"name":"FundingRoundNotExpired","type":"error"},{"inputs":[],"name":"HasClaimedTokens","type":"error"},{"inputs":[],"name":"InsufficientFundingBalance","type":"error"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidParticipantIndex","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"RelayerOnlyAccess","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"UserNotWhitelisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authorizer","type":"address"},{"indexed":true,"internalType":"address","name":"target","type":"address"}],"name":"DelegatedPurchase","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"FundingRoundFinilized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"}],"name":"Purchase","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DELEGATE_PURCHASE_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BUY_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BUY_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRICE_PER_TOKEN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAYER_REWARD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_PARTICIPANTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"userID","type":"uint256"},{"internalType":"address","name":"authorizer","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"validAfter","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegatePurchase","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"expirationDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finalizeFundingRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fundingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hasBeenFinalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"userID","type":"uint256"}],"name":"hasClaimedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"userID","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"purchase","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"relayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"whitelistClaimTracker","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"whitelisteParticipantsHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3198":{"entryPoint":null,"id":3198,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8238":{"entryPoint":null,"id":8238,"parameterSlots":5,"returnSlots":0},"@_buildDomainSeparator_3245":{"entryPoint":null,"id":3245,"parameterSlots":0,"returnSlots":1},"@_mint_664":{"entryPoint":664,"id":664,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":533,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_631":{"entryPoint":781,"id":631,"parameterSlots":3,"returnSlots":0},"@getStringSlot_1328":{"entryPoint":null,"id":1328,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1168":{"entryPoint":614,"id":1168,"parameterSlots":2,"returnSlots":1},"@toShortString_1070":{"entryPoint":720,"id":1070,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_addresst_bytes32t_uint256_fromMemory":{"entryPoint":1102,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1604,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1254,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1569,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1330,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1198,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":1178,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5601:20","nodeType":"YulBlock","src":"0:5601:20","statements":[{"nativeSrc":"6:3:20","nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nativeSrc":"74:117:20","nodeType":"YulBlock","src":"74:117:20","statements":[{"nativeSrc":"84:22:20","nodeType":"YulAssignment","src":"84:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:20","nodeType":"YulIdentifier","src":"99:6:20"}],"functionName":{"name":"mload","nativeSrc":"93:5:20","nodeType":"YulIdentifier","src":"93:5:20"},"nativeSrc":"93:13:20","nodeType":"YulFunctionCall","src":"93:13:20"},"variableNames":[{"name":"value","nativeSrc":"84:5:20","nodeType":"YulIdentifier","src":"84:5:20"}]},{"body":{"nativeSrc":"169:16:20","nodeType":"YulBlock","src":"169:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:20","nodeType":"YulLiteral","src":"178:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:20","nodeType":"YulLiteral","src":"181:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:20","nodeType":"YulIdentifier","src":"171:6:20"},"nativeSrc":"171:12:20","nodeType":"YulFunctionCall","src":"171:12:20"},"nativeSrc":"171:12:20","nodeType":"YulExpressionStatement","src":"171:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:20","nodeType":"YulIdentifier","src":"128:5:20"},{"arguments":[{"name":"value","nativeSrc":"139:5:20","nodeType":"YulIdentifier","src":"139:5:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:20","nodeType":"YulLiteral","src":"154:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:20","nodeType":"YulLiteral","src":"159:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:20","nodeType":"YulIdentifier","src":"150:3:20"},"nativeSrc":"150:11:20","nodeType":"YulFunctionCall","src":"150:11:20"},{"kind":"number","nativeSrc":"163:1:20","nodeType":"YulLiteral","src":"163:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:20","nodeType":"YulIdentifier","src":"146:3:20"},"nativeSrc":"146:19:20","nodeType":"YulFunctionCall","src":"146:19:20"}],"functionName":{"name":"and","nativeSrc":"135:3:20","nodeType":"YulIdentifier","src":"135:3:20"},"nativeSrc":"135:31:20","nodeType":"YulFunctionCall","src":"135:31:20"}],"functionName":{"name":"eq","nativeSrc":"125:2:20","nodeType":"YulIdentifier","src":"125:2:20"},"nativeSrc":"125:42:20","nodeType":"YulFunctionCall","src":"125:42:20"}],"functionName":{"name":"iszero","nativeSrc":"118:6:20","nodeType":"YulIdentifier","src":"118:6:20"},"nativeSrc":"118:50:20","nodeType":"YulFunctionCall","src":"118:50:20"},"nativeSrc":"115:70:20","nodeType":"YulIf","src":"115:70:20"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:20","nodeType":"YulTypedName","src":"53:6:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:20","nodeType":"YulTypedName","src":"64:5:20","type":""}],"src":"14:177:20"},{"body":{"nativeSrc":"345:427:20","nodeType":"YulBlock","src":"345:427:20","statements":[{"body":{"nativeSrc":"392:16:20","nodeType":"YulBlock","src":"392:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"401:1:20","nodeType":"YulLiteral","src":"401:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"404:1:20","nodeType":"YulLiteral","src":"404:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"394:6:20","nodeType":"YulIdentifier","src":"394:6:20"},"nativeSrc":"394:12:20","nodeType":"YulFunctionCall","src":"394:12:20"},"nativeSrc":"394:12:20","nodeType":"YulExpressionStatement","src":"394:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"366:7:20","nodeType":"YulIdentifier","src":"366:7:20"},{"name":"headStart","nativeSrc":"375:9:20","nodeType":"YulIdentifier","src":"375:9:20"}],"functionName":{"name":"sub","nativeSrc":"362:3:20","nodeType":"YulIdentifier","src":"362:3:20"},"nativeSrc":"362:23:20","nodeType":"YulFunctionCall","src":"362:23:20"},{"kind":"number","nativeSrc":"387:3:20","nodeType":"YulLiteral","src":"387:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"358:3:20","nodeType":"YulIdentifier","src":"358:3:20"},"nativeSrc":"358:33:20","nodeType":"YulFunctionCall","src":"358:33:20"},"nativeSrc":"355:53:20","nodeType":"YulIf","src":"355:53:20"},{"nativeSrc":"417:50:20","nodeType":"YulAssignment","src":"417:50:20","value":{"arguments":[{"name":"headStart","nativeSrc":"457:9:20","nodeType":"YulIdentifier","src":"457:9:20"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"427:29:20","nodeType":"YulIdentifier","src":"427:29:20"},"nativeSrc":"427:40:20","nodeType":"YulFunctionCall","src":"427:40:20"},"variableNames":[{"name":"value0","nativeSrc":"417:6:20","nodeType":"YulIdentifier","src":"417:6:20"}]},{"nativeSrc":"476:14:20","nodeType":"YulVariableDeclaration","src":"476:14:20","value":{"kind":"number","nativeSrc":"489:1:20","nodeType":"YulLiteral","src":"489:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"480:5:20","nodeType":"YulTypedName","src":"480:5:20","type":""}]},{"nativeSrc":"499:34:20","nodeType":"YulAssignment","src":"499:34:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"518:9:20","nodeType":"YulIdentifier","src":"518:9:20"},{"kind":"number","nativeSrc":"529:2:20","nodeType":"YulLiteral","src":"529:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"514:3:20","nodeType":"YulIdentifier","src":"514:3:20"},"nativeSrc":"514:18:20","nodeType":"YulFunctionCall","src":"514:18:20"}],"functionName":{"name":"mload","nativeSrc":"508:5:20","nodeType":"YulIdentifier","src":"508:5:20"},"nativeSrc":"508:25:20","nodeType":"YulFunctionCall","src":"508:25:20"},"variableNames":[{"name":"value","nativeSrc":"499:5:20","nodeType":"YulIdentifier","src":"499:5:20"}]},{"nativeSrc":"542:15:20","nodeType":"YulAssignment","src":"542:15:20","value":{"name":"value","nativeSrc":"552:5:20","nodeType":"YulIdentifier","src":"552:5:20"},"variableNames":[{"name":"value1","nativeSrc":"542:6:20","nodeType":"YulIdentifier","src":"542:6:20"}]},{"nativeSrc":"566:59:20","nodeType":"YulAssignment","src":"566:59:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"610:9:20","nodeType":"YulIdentifier","src":"610:9:20"},{"kind":"number","nativeSrc":"621:2:20","nodeType":"YulLiteral","src":"621:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"606:3:20","nodeType":"YulIdentifier","src":"606:3:20"},"nativeSrc":"606:18:20","nodeType":"YulFunctionCall","src":"606:18:20"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"576:29:20","nodeType":"YulIdentifier","src":"576:29:20"},"nativeSrc":"576:49:20","nodeType":"YulFunctionCall","src":"576:49:20"},"variableNames":[{"name":"value2","nativeSrc":"566:6:20","nodeType":"YulIdentifier","src":"566:6:20"}]},{"nativeSrc":"634:35:20","nodeType":"YulAssignment","src":"634:35:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"654:9:20","nodeType":"YulIdentifier","src":"654:9:20"},{"kind":"number","nativeSrc":"665:2:20","nodeType":"YulLiteral","src":"665:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"650:3:20","nodeType":"YulIdentifier","src":"650:3:20"},"nativeSrc":"650:18:20","nodeType":"YulFunctionCall","src":"650:18:20"}],"functionName":{"name":"mload","nativeSrc":"644:5:20","nodeType":"YulIdentifier","src":"644:5:20"},"nativeSrc":"644:25:20","nodeType":"YulFunctionCall","src":"644:25:20"},"variableNames":[{"name":"value3","nativeSrc":"634:6:20","nodeType":"YulIdentifier","src":"634:6:20"}]},{"nativeSrc":"678:16:20","nodeType":"YulVariableDeclaration","src":"678:16:20","value":{"kind":"number","nativeSrc":"693:1:20","nodeType":"YulLiteral","src":"693:1:20","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"682:7:20","nodeType":"YulTypedName","src":"682:7:20","type":""}]},{"nativeSrc":"703:37:20","nodeType":"YulAssignment","src":"703:37:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"724:9:20","nodeType":"YulIdentifier","src":"724:9:20"},{"kind":"number","nativeSrc":"735:3:20","nodeType":"YulLiteral","src":"735:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"720:3:20","nodeType":"YulIdentifier","src":"720:3:20"},"nativeSrc":"720:19:20","nodeType":"YulFunctionCall","src":"720:19:20"}],"functionName":{"name":"mload","nativeSrc":"714:5:20","nodeType":"YulIdentifier","src":"714:5:20"},"nativeSrc":"714:26:20","nodeType":"YulFunctionCall","src":"714:26:20"},"variableNames":[{"name":"value_1","nativeSrc":"703:7:20","nodeType":"YulIdentifier","src":"703:7:20"}]},{"nativeSrc":"749:17:20","nodeType":"YulAssignment","src":"749:17:20","value":{"name":"value_1","nativeSrc":"759:7:20","nodeType":"YulIdentifier","src":"759:7:20"},"variableNames":[{"name":"value4","nativeSrc":"749:6:20","nodeType":"YulIdentifier","src":"749:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_bytes32t_uint256_fromMemory","nativeSrc":"196:576:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"279:9:20","nodeType":"YulTypedName","src":"279:9:20","type":""},{"name":"dataEnd","nativeSrc":"290:7:20","nodeType":"YulTypedName","src":"290:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"302:6:20","nodeType":"YulTypedName","src":"302:6:20","type":""},{"name":"value1","nativeSrc":"310:6:20","nodeType":"YulTypedName","src":"310:6:20","type":""},{"name":"value2","nativeSrc":"318:6:20","nodeType":"YulTypedName","src":"318:6:20","type":""},{"name":"value3","nativeSrc":"326:6:20","nodeType":"YulTypedName","src":"326:6:20","type":""},{"name":"value4","nativeSrc":"334:6:20","nodeType":"YulTypedName","src":"334:6:20","type":""}],"src":"196:576:20"},{"body":{"nativeSrc":"809:95:20","nodeType":"YulBlock","src":"809:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"826:1:20","nodeType":"YulLiteral","src":"826:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"833:3:20","nodeType":"YulLiteral","src":"833:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"838:10:20","nodeType":"YulLiteral","src":"838:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"829:3:20","nodeType":"YulIdentifier","src":"829:3:20"},"nativeSrc":"829:20:20","nodeType":"YulFunctionCall","src":"829:20:20"}],"functionName":{"name":"mstore","nativeSrc":"819:6:20","nodeType":"YulIdentifier","src":"819:6:20"},"nativeSrc":"819:31:20","nodeType":"YulFunctionCall","src":"819:31:20"},"nativeSrc":"819:31:20","nodeType":"YulExpressionStatement","src":"819:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"866:1:20","nodeType":"YulLiteral","src":"866:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"869:4:20","nodeType":"YulLiteral","src":"869:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"859:6:20","nodeType":"YulIdentifier","src":"859:6:20"},"nativeSrc":"859:15:20","nodeType":"YulFunctionCall","src":"859:15:20"},"nativeSrc":"859:15:20","nodeType":"YulExpressionStatement","src":"859:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"890:1:20","nodeType":"YulLiteral","src":"890:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"893:4:20","nodeType":"YulLiteral","src":"893:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"883:6:20","nodeType":"YulIdentifier","src":"883:6:20"},"nativeSrc":"883:15:20","nodeType":"YulFunctionCall","src":"883:15:20"},"nativeSrc":"883:15:20","nodeType":"YulExpressionStatement","src":"883:15:20"}]},"name":"panic_error_0x41","nativeSrc":"777:127:20","nodeType":"YulFunctionDefinition","src":"777:127:20"},{"body":{"nativeSrc":"964:325:20","nodeType":"YulBlock","src":"964:325:20","statements":[{"nativeSrc":"974:22:20","nodeType":"YulAssignment","src":"974:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"988:1:20","nodeType":"YulLiteral","src":"988:1:20","type":"","value":"1"},{"name":"data","nativeSrc":"991:4:20","nodeType":"YulIdentifier","src":"991:4:20"}],"functionName":{"name":"shr","nativeSrc":"984:3:20","nodeType":"YulIdentifier","src":"984:3:20"},"nativeSrc":"984:12:20","nodeType":"YulFunctionCall","src":"984:12:20"},"variableNames":[{"name":"length","nativeSrc":"974:6:20","nodeType":"YulIdentifier","src":"974:6:20"}]},{"nativeSrc":"1005:38:20","nodeType":"YulVariableDeclaration","src":"1005:38:20","value":{"arguments":[{"name":"data","nativeSrc":"1035:4:20","nodeType":"YulIdentifier","src":"1035:4:20"},{"kind":"number","nativeSrc":"1041:1:20","nodeType":"YulLiteral","src":"1041:1:20","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1031:3:20","nodeType":"YulIdentifier","src":"1031:3:20"},"nativeSrc":"1031:12:20","nodeType":"YulFunctionCall","src":"1031:12:20"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1009:18:20","nodeType":"YulTypedName","src":"1009:18:20","type":""}]},{"body":{"nativeSrc":"1082:31:20","nodeType":"YulBlock","src":"1082:31:20","statements":[{"nativeSrc":"1084:27:20","nodeType":"YulAssignment","src":"1084:27:20","value":{"arguments":[{"name":"length","nativeSrc":"1098:6:20","nodeType":"YulIdentifier","src":"1098:6:20"},{"kind":"number","nativeSrc":"1106:4:20","nodeType":"YulLiteral","src":"1106:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1094:3:20","nodeType":"YulIdentifier","src":"1094:3:20"},"nativeSrc":"1094:17:20","nodeType":"YulFunctionCall","src":"1094:17:20"},"variableNames":[{"name":"length","nativeSrc":"1084:6:20","nodeType":"YulIdentifier","src":"1084:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1062:18:20","nodeType":"YulIdentifier","src":"1062:18:20"}],"functionName":{"name":"iszero","nativeSrc":"1055:6:20","nodeType":"YulIdentifier","src":"1055:6:20"},"nativeSrc":"1055:26:20","nodeType":"YulFunctionCall","src":"1055:26:20"},"nativeSrc":"1052:61:20","nodeType":"YulIf","src":"1052:61:20"},{"body":{"nativeSrc":"1172:111:20","nodeType":"YulBlock","src":"1172:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1193:1:20","nodeType":"YulLiteral","src":"1193:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1200:3:20","nodeType":"YulLiteral","src":"1200:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"1205:10:20","nodeType":"YulLiteral","src":"1205:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1196:3:20","nodeType":"YulIdentifier","src":"1196:3:20"},"nativeSrc":"1196:20:20","nodeType":"YulFunctionCall","src":"1196:20:20"}],"functionName":{"name":"mstore","nativeSrc":"1186:6:20","nodeType":"YulIdentifier","src":"1186:6:20"},"nativeSrc":"1186:31:20","nodeType":"YulFunctionCall","src":"1186:31:20"},"nativeSrc":"1186:31:20","nodeType":"YulExpressionStatement","src":"1186:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1237:1:20","nodeType":"YulLiteral","src":"1237:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"1240:4:20","nodeType":"YulLiteral","src":"1240:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1230:6:20","nodeType":"YulIdentifier","src":"1230:6:20"},"nativeSrc":"1230:15:20","nodeType":"YulFunctionCall","src":"1230:15:20"},"nativeSrc":"1230:15:20","nodeType":"YulExpressionStatement","src":"1230:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1265:1:20","nodeType":"YulLiteral","src":"1265:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1268:4:20","nodeType":"YulLiteral","src":"1268:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1258:6:20","nodeType":"YulIdentifier","src":"1258:6:20"},"nativeSrc":"1258:15:20","nodeType":"YulFunctionCall","src":"1258:15:20"},"nativeSrc":"1258:15:20","nodeType":"YulExpressionStatement","src":"1258:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1128:18:20","nodeType":"YulIdentifier","src":"1128:18:20"},{"arguments":[{"name":"length","nativeSrc":"1151:6:20","nodeType":"YulIdentifier","src":"1151:6:20"},{"kind":"number","nativeSrc":"1159:2:20","nodeType":"YulLiteral","src":"1159:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1148:2:20","nodeType":"YulIdentifier","src":"1148:2:20"},"nativeSrc":"1148:14:20","nodeType":"YulFunctionCall","src":"1148:14:20"}],"functionName":{"name":"eq","nativeSrc":"1125:2:20","nodeType":"YulIdentifier","src":"1125:2:20"},"nativeSrc":"1125:38:20","nodeType":"YulFunctionCall","src":"1125:38:20"},"nativeSrc":"1122:161:20","nodeType":"YulIf","src":"1122:161:20"}]},"name":"extract_byte_array_length","nativeSrc":"909:380:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"944:4:20","nodeType":"YulTypedName","src":"944:4:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"953:6:20","nodeType":"YulTypedName","src":"953:6:20","type":""}],"src":"909:380:20"},{"body":{"nativeSrc":"1350:65:20","nodeType":"YulBlock","src":"1350:65:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1367:1:20","nodeType":"YulLiteral","src":"1367:1:20","type":"","value":"0"},{"name":"ptr","nativeSrc":"1370:3:20","nodeType":"YulIdentifier","src":"1370:3:20"}],"functionName":{"name":"mstore","nativeSrc":"1360:6:20","nodeType":"YulIdentifier","src":"1360:6:20"},"nativeSrc":"1360:14:20","nodeType":"YulFunctionCall","src":"1360:14:20"},"nativeSrc":"1360:14:20","nodeType":"YulExpressionStatement","src":"1360:14:20"},{"nativeSrc":"1383:26:20","nodeType":"YulAssignment","src":"1383:26:20","value":{"arguments":[{"kind":"number","nativeSrc":"1401:1:20","nodeType":"YulLiteral","src":"1401:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1404:4:20","nodeType":"YulLiteral","src":"1404:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1391:9:20","nodeType":"YulIdentifier","src":"1391:9:20"},"nativeSrc":"1391:18:20","nodeType":"YulFunctionCall","src":"1391:18:20"},"variableNames":[{"name":"data","nativeSrc":"1383:4:20","nodeType":"YulIdentifier","src":"1383:4:20"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1294:121:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1333:3:20","nodeType":"YulTypedName","src":"1333:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1341:4:20","nodeType":"YulTypedName","src":"1341:4:20","type":""}],"src":"1294:121:20"},{"body":{"nativeSrc":"1501:437:20","nodeType":"YulBlock","src":"1501:437:20","statements":[{"body":{"nativeSrc":"1534:398:20","nodeType":"YulBlock","src":"1534:398:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1555:1:20","nodeType":"YulLiteral","src":"1555:1:20","type":"","value":"0"},{"name":"array","nativeSrc":"1558:5:20","nodeType":"YulIdentifier","src":"1558:5:20"}],"functionName":{"name":"mstore","nativeSrc":"1548:6:20","nodeType":"YulIdentifier","src":"1548:6:20"},"nativeSrc":"1548:16:20","nodeType":"YulFunctionCall","src":"1548:16:20"},"nativeSrc":"1548:16:20","nodeType":"YulExpressionStatement","src":"1548:16:20"},{"nativeSrc":"1577:30:20","nodeType":"YulVariableDeclaration","src":"1577:30:20","value":{"arguments":[{"kind":"number","nativeSrc":"1599:1:20","nodeType":"YulLiteral","src":"1599:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1602:4:20","nodeType":"YulLiteral","src":"1602:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1589:9:20","nodeType":"YulIdentifier","src":"1589:9:20"},"nativeSrc":"1589:18:20","nodeType":"YulFunctionCall","src":"1589:18:20"},"variables":[{"name":"data","nativeSrc":"1581:4:20","nodeType":"YulTypedName","src":"1581:4:20","type":""}]},{"nativeSrc":"1620:57:20","nodeType":"YulVariableDeclaration","src":"1620:57:20","value":{"arguments":[{"name":"data","nativeSrc":"1643:4:20","nodeType":"YulIdentifier","src":"1643:4:20"},{"arguments":[{"kind":"number","nativeSrc":"1653:1:20","nodeType":"YulLiteral","src":"1653:1:20","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1660:10:20","nodeType":"YulIdentifier","src":"1660:10:20"},{"kind":"number","nativeSrc":"1672:2:20","nodeType":"YulLiteral","src":"1672:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1656:3:20","nodeType":"YulIdentifier","src":"1656:3:20"},"nativeSrc":"1656:19:20","nodeType":"YulFunctionCall","src":"1656:19:20"}],"functionName":{"name":"shr","nativeSrc":"1649:3:20","nodeType":"YulIdentifier","src":"1649:3:20"},"nativeSrc":"1649:27:20","nodeType":"YulFunctionCall","src":"1649:27:20"}],"functionName":{"name":"add","nativeSrc":"1639:3:20","nodeType":"YulIdentifier","src":"1639:3:20"},"nativeSrc":"1639:38:20","nodeType":"YulFunctionCall","src":"1639:38:20"},"variables":[{"name":"deleteStart","nativeSrc":"1624:11:20","nodeType":"YulTypedName","src":"1624:11:20","type":""}]},{"body":{"nativeSrc":"1714:23:20","nodeType":"YulBlock","src":"1714:23:20","statements":[{"nativeSrc":"1716:19:20","nodeType":"YulAssignment","src":"1716:19:20","value":{"name":"data","nativeSrc":"1731:4:20","nodeType":"YulIdentifier","src":"1731:4:20"},"variableNames":[{"name":"deleteStart","nativeSrc":"1716:11:20","nodeType":"YulIdentifier","src":"1716:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1696:10:20","nodeType":"YulIdentifier","src":"1696:10:20"},{"kind":"number","nativeSrc":"1708:4:20","nodeType":"YulLiteral","src":"1708:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1693:2:20","nodeType":"YulIdentifier","src":"1693:2:20"},"nativeSrc":"1693:20:20","nodeType":"YulFunctionCall","src":"1693:20:20"},"nativeSrc":"1690:47:20","nodeType":"YulIf","src":"1690:47:20"},{"nativeSrc":"1750:41:20","nodeType":"YulVariableDeclaration","src":"1750:41:20","value":{"arguments":[{"name":"data","nativeSrc":"1764:4:20","nodeType":"YulIdentifier","src":"1764:4:20"},{"arguments":[{"kind":"number","nativeSrc":"1774:1:20","nodeType":"YulLiteral","src":"1774:1:20","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1781:3:20","nodeType":"YulIdentifier","src":"1781:3:20"},{"kind":"number","nativeSrc":"1786:2:20","nodeType":"YulLiteral","src":"1786:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1777:3:20","nodeType":"YulIdentifier","src":"1777:3:20"},"nativeSrc":"1777:12:20","nodeType":"YulFunctionCall","src":"1777:12:20"}],"functionName":{"name":"shr","nativeSrc":"1770:3:20","nodeType":"YulIdentifier","src":"1770:3:20"},"nativeSrc":"1770:20:20","nodeType":"YulFunctionCall","src":"1770:20:20"}],"functionName":{"name":"add","nativeSrc":"1760:3:20","nodeType":"YulIdentifier","src":"1760:3:20"},"nativeSrc":"1760:31:20","nodeType":"YulFunctionCall","src":"1760:31:20"},"variables":[{"name":"_1","nativeSrc":"1754:2:20","nodeType":"YulTypedName","src":"1754:2:20","type":""}]},{"nativeSrc":"1804:24:20","nodeType":"YulVariableDeclaration","src":"1804:24:20","value":{"name":"deleteStart","nativeSrc":"1817:11:20","nodeType":"YulIdentifier","src":"1817:11:20"},"variables":[{"name":"start","nativeSrc":"1808:5:20","nodeType":"YulTypedName","src":"1808:5:20","type":""}]},{"body":{"nativeSrc":"1902:20:20","nodeType":"YulBlock","src":"1902:20:20","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1911:5:20","nodeType":"YulIdentifier","src":"1911:5:20"},{"kind":"number","nativeSrc":"1918:1:20","nodeType":"YulLiteral","src":"1918:1:20","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1904:6:20","nodeType":"YulIdentifier","src":"1904:6:20"},"nativeSrc":"1904:16:20","nodeType":"YulFunctionCall","src":"1904:16:20"},"nativeSrc":"1904:16:20","nodeType":"YulExpressionStatement","src":"1904:16:20"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1852:5:20","nodeType":"YulIdentifier","src":"1852:5:20"},{"name":"_1","nativeSrc":"1859:2:20","nodeType":"YulIdentifier","src":"1859:2:20"}],"functionName":{"name":"lt","nativeSrc":"1849:2:20","nodeType":"YulIdentifier","src":"1849:2:20"},"nativeSrc":"1849:13:20","nodeType":"YulFunctionCall","src":"1849:13:20"},"nativeSrc":"1841:81:20","nodeType":"YulForLoop","post":{"nativeSrc":"1863:26:20","nodeType":"YulBlock","src":"1863:26:20","statements":[{"nativeSrc":"1865:22:20","nodeType":"YulAssignment","src":"1865:22:20","value":{"arguments":[{"name":"start","nativeSrc":"1878:5:20","nodeType":"YulIdentifier","src":"1878:5:20"},{"kind":"number","nativeSrc":"1885:1:20","nodeType":"YulLiteral","src":"1885:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1874:3:20","nodeType":"YulIdentifier","src":"1874:3:20"},"nativeSrc":"1874:13:20","nodeType":"YulFunctionCall","src":"1874:13:20"},"variableNames":[{"name":"start","nativeSrc":"1865:5:20","nodeType":"YulIdentifier","src":"1865:5:20"}]}]},"pre":{"nativeSrc":"1845:3:20","nodeType":"YulBlock","src":"1845:3:20","statements":[]},"src":"1841:81:20"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1517:3:20","nodeType":"YulIdentifier","src":"1517:3:20"},{"kind":"number","nativeSrc":"1522:2:20","nodeType":"YulLiteral","src":"1522:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1514:2:20","nodeType":"YulIdentifier","src":"1514:2:20"},"nativeSrc":"1514:11:20","nodeType":"YulFunctionCall","src":"1514:11:20"},"nativeSrc":"1511:421:20","nodeType":"YulIf","src":"1511:421:20"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1420:518:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1473:5:20","nodeType":"YulTypedName","src":"1473:5:20","type":""},{"name":"len","nativeSrc":"1480:3:20","nodeType":"YulTypedName","src":"1480:3:20","type":""},{"name":"startIndex","nativeSrc":"1485:10:20","nodeType":"YulTypedName","src":"1485:10:20","type":""}],"src":"1420:518:20"},{"body":{"nativeSrc":"2028:81:20","nodeType":"YulBlock","src":"2028:81:20","statements":[{"nativeSrc":"2038:65:20","nodeType":"YulAssignment","src":"2038:65:20","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2053:4:20","nodeType":"YulIdentifier","src":"2053:4:20"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2071:1:20","nodeType":"YulLiteral","src":"2071:1:20","type":"","value":"3"},{"name":"len","nativeSrc":"2074:3:20","nodeType":"YulIdentifier","src":"2074:3:20"}],"functionName":{"name":"shl","nativeSrc":"2067:3:20","nodeType":"YulIdentifier","src":"2067:3:20"},"nativeSrc":"2067:11:20","nodeType":"YulFunctionCall","src":"2067:11:20"},{"arguments":[{"kind":"number","nativeSrc":"2084:1:20","nodeType":"YulLiteral","src":"2084:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2080:3:20","nodeType":"YulIdentifier","src":"2080:3:20"},"nativeSrc":"2080:6:20","nodeType":"YulFunctionCall","src":"2080:6:20"}],"functionName":{"name":"shr","nativeSrc":"2063:3:20","nodeType":"YulIdentifier","src":"2063:3:20"},"nativeSrc":"2063:24:20","nodeType":"YulFunctionCall","src":"2063:24:20"}],"functionName":{"name":"not","nativeSrc":"2059:3:20","nodeType":"YulIdentifier","src":"2059:3:20"},"nativeSrc":"2059:29:20","nodeType":"YulFunctionCall","src":"2059:29:20"}],"functionName":{"name":"and","nativeSrc":"2049:3:20","nodeType":"YulIdentifier","src":"2049:3:20"},"nativeSrc":"2049:40:20","nodeType":"YulFunctionCall","src":"2049:40:20"},{"arguments":[{"kind":"number","nativeSrc":"2095:1:20","nodeType":"YulLiteral","src":"2095:1:20","type":"","value":"1"},{"name":"len","nativeSrc":"2098:3:20","nodeType":"YulIdentifier","src":"2098:3:20"}],"functionName":{"name":"shl","nativeSrc":"2091:3:20","nodeType":"YulIdentifier","src":"2091:3:20"},"nativeSrc":"2091:11:20","nodeType":"YulFunctionCall","src":"2091:11:20"}],"functionName":{"name":"or","nativeSrc":"2046:2:20","nodeType":"YulIdentifier","src":"2046:2:20"},"nativeSrc":"2046:57:20","nodeType":"YulFunctionCall","src":"2046:57:20"},"variableNames":[{"name":"used","nativeSrc":"2038:4:20","nodeType":"YulIdentifier","src":"2038:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1943:166:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2005:4:20","nodeType":"YulTypedName","src":"2005:4:20","type":""},{"name":"len","nativeSrc":"2011:3:20","nodeType":"YulTypedName","src":"2011:3:20","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2019:4:20","nodeType":"YulTypedName","src":"2019:4:20","type":""}],"src":"1943:166:20"},{"body":{"nativeSrc":"2210:1203:20","nodeType":"YulBlock","src":"2210:1203:20","statements":[{"nativeSrc":"2220:24:20","nodeType":"YulVariableDeclaration","src":"2220:24:20","value":{"arguments":[{"name":"src","nativeSrc":"2240:3:20","nodeType":"YulIdentifier","src":"2240:3:20"}],"functionName":{"name":"mload","nativeSrc":"2234:5:20","nodeType":"YulIdentifier","src":"2234:5:20"},"nativeSrc":"2234:10:20","nodeType":"YulFunctionCall","src":"2234:10:20"},"variables":[{"name":"newLen","nativeSrc":"2224:6:20","nodeType":"YulTypedName","src":"2224:6:20","type":""}]},{"body":{"nativeSrc":"2287:22:20","nodeType":"YulBlock","src":"2287:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2289:16:20","nodeType":"YulIdentifier","src":"2289:16:20"},"nativeSrc":"2289:18:20","nodeType":"YulFunctionCall","src":"2289:18:20"},"nativeSrc":"2289:18:20","nodeType":"YulExpressionStatement","src":"2289:18:20"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2259:6:20","nodeType":"YulIdentifier","src":"2259:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2275:2:20","nodeType":"YulLiteral","src":"2275:2:20","type":"","value":"64"},{"kind":"number","nativeSrc":"2279:1:20","nodeType":"YulLiteral","src":"2279:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2271:3:20","nodeType":"YulIdentifier","src":"2271:3:20"},"nativeSrc":"2271:10:20","nodeType":"YulFunctionCall","src":"2271:10:20"},{"kind":"number","nativeSrc":"2283:1:20","nodeType":"YulLiteral","src":"2283:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2267:3:20","nodeType":"YulIdentifier","src":"2267:3:20"},"nativeSrc":"2267:18:20","nodeType":"YulFunctionCall","src":"2267:18:20"}],"functionName":{"name":"gt","nativeSrc":"2256:2:20","nodeType":"YulIdentifier","src":"2256:2:20"},"nativeSrc":"2256:30:20","nodeType":"YulFunctionCall","src":"2256:30:20"},"nativeSrc":"2253:56:20","nodeType":"YulIf","src":"2253:56:20"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2362:4:20","nodeType":"YulIdentifier","src":"2362:4:20"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2400:4:20","nodeType":"YulIdentifier","src":"2400:4:20"}],"functionName":{"name":"sload","nativeSrc":"2394:5:20","nodeType":"YulIdentifier","src":"2394:5:20"},"nativeSrc":"2394:11:20","nodeType":"YulFunctionCall","src":"2394:11:20"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"2368:25:20","nodeType":"YulIdentifier","src":"2368:25:20"},"nativeSrc":"2368:38:20","nodeType":"YulFunctionCall","src":"2368:38:20"},{"name":"newLen","nativeSrc":"2408:6:20","nodeType":"YulIdentifier","src":"2408:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2318:43:20","nodeType":"YulIdentifier","src":"2318:43:20"},"nativeSrc":"2318:97:20","nodeType":"YulFunctionCall","src":"2318:97:20"},"nativeSrc":"2318:97:20","nodeType":"YulExpressionStatement","src":"2318:97:20"},{"nativeSrc":"2424:18:20","nodeType":"YulVariableDeclaration","src":"2424:18:20","value":{"kind":"number","nativeSrc":"2441:1:20","nodeType":"YulLiteral","src":"2441:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"2428:9:20","nodeType":"YulTypedName","src":"2428:9:20","type":""}]},{"nativeSrc":"2451:17:20","nodeType":"YulAssignment","src":"2451:17:20","value":{"kind":"number","nativeSrc":"2464:4:20","nodeType":"YulLiteral","src":"2464:4:20","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2451:9:20","nodeType":"YulIdentifier","src":"2451:9:20"}]},{"cases":[{"body":{"nativeSrc":"2514:642:20","nodeType":"YulBlock","src":"2514:642:20","statements":[{"nativeSrc":"2528:35:20","nodeType":"YulVariableDeclaration","src":"2528:35:20","value":{"arguments":[{"name":"newLen","nativeSrc":"2547:6:20","nodeType":"YulIdentifier","src":"2547:6:20"},{"arguments":[{"kind":"number","nativeSrc":"2559:2:20","nodeType":"YulLiteral","src":"2559:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2555:3:20","nodeType":"YulIdentifier","src":"2555:3:20"},"nativeSrc":"2555:7:20","nodeType":"YulFunctionCall","src":"2555:7:20"}],"functionName":{"name":"and","nativeSrc":"2543:3:20","nodeType":"YulIdentifier","src":"2543:3:20"},"nativeSrc":"2543:20:20","nodeType":"YulFunctionCall","src":"2543:20:20"},"variables":[{"name":"loopEnd","nativeSrc":"2532:7:20","nodeType":"YulTypedName","src":"2532:7:20","type":""}]},{"nativeSrc":"2576:49:20","nodeType":"YulVariableDeclaration","src":"2576:49:20","value":{"arguments":[{"name":"slot","nativeSrc":"2620:4:20","nodeType":"YulIdentifier","src":"2620:4:20"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2590:29:20","nodeType":"YulIdentifier","src":"2590:29:20"},"nativeSrc":"2590:35:20","nodeType":"YulFunctionCall","src":"2590:35:20"},"variables":[{"name":"dstPtr","nativeSrc":"2580:6:20","nodeType":"YulTypedName","src":"2580:6:20","type":""}]},{"nativeSrc":"2638:10:20","nodeType":"YulVariableDeclaration","src":"2638:10:20","value":{"kind":"number","nativeSrc":"2647:1:20","nodeType":"YulLiteral","src":"2647:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2642:1:20","nodeType":"YulTypedName","src":"2642:1:20","type":""}]},{"body":{"nativeSrc":"2718:165:20","nodeType":"YulBlock","src":"2718:165:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2743:6:20","nodeType":"YulIdentifier","src":"2743:6:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2761:3:20","nodeType":"YulIdentifier","src":"2761:3:20"},{"name":"srcOffset","nativeSrc":"2766:9:20","nodeType":"YulIdentifier","src":"2766:9:20"}],"functionName":{"name":"add","nativeSrc":"2757:3:20","nodeType":"YulIdentifier","src":"2757:3:20"},"nativeSrc":"2757:19:20","nodeType":"YulFunctionCall","src":"2757:19:20"}],"functionName":{"name":"mload","nativeSrc":"2751:5:20","nodeType":"YulIdentifier","src":"2751:5:20"},"nativeSrc":"2751:26:20","nodeType":"YulFunctionCall","src":"2751:26:20"}],"functionName":{"name":"sstore","nativeSrc":"2736:6:20","nodeType":"YulIdentifier","src":"2736:6:20"},"nativeSrc":"2736:42:20","nodeType":"YulFunctionCall","src":"2736:42:20"},"nativeSrc":"2736:42:20","nodeType":"YulExpressionStatement","src":"2736:42:20"},{"nativeSrc":"2795:24:20","nodeType":"YulAssignment","src":"2795:24:20","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2809:6:20","nodeType":"YulIdentifier","src":"2809:6:20"},{"kind":"number","nativeSrc":"2817:1:20","nodeType":"YulLiteral","src":"2817:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2805:3:20","nodeType":"YulIdentifier","src":"2805:3:20"},"nativeSrc":"2805:14:20","nodeType":"YulFunctionCall","src":"2805:14:20"},"variableNames":[{"name":"dstPtr","nativeSrc":"2795:6:20","nodeType":"YulIdentifier","src":"2795:6:20"}]},{"nativeSrc":"2836:33:20","nodeType":"YulAssignment","src":"2836:33:20","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2853:9:20","nodeType":"YulIdentifier","src":"2853:9:20"},{"kind":"number","nativeSrc":"2864:4:20","nodeType":"YulLiteral","src":"2864:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2849:3:20","nodeType":"YulIdentifier","src":"2849:3:20"},"nativeSrc":"2849:20:20","nodeType":"YulFunctionCall","src":"2849:20:20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2836:9:20","nodeType":"YulIdentifier","src":"2836:9:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2672:1:20","nodeType":"YulIdentifier","src":"2672:1:20"},{"name":"loopEnd","nativeSrc":"2675:7:20","nodeType":"YulIdentifier","src":"2675:7:20"}],"functionName":{"name":"lt","nativeSrc":"2669:2:20","nodeType":"YulIdentifier","src":"2669:2:20"},"nativeSrc":"2669:14:20","nodeType":"YulFunctionCall","src":"2669:14:20"},"nativeSrc":"2661:222:20","nodeType":"YulForLoop","post":{"nativeSrc":"2684:21:20","nodeType":"YulBlock","src":"2684:21:20","statements":[{"nativeSrc":"2686:17:20","nodeType":"YulAssignment","src":"2686:17:20","value":{"arguments":[{"name":"i","nativeSrc":"2695:1:20","nodeType":"YulIdentifier","src":"2695:1:20"},{"kind":"number","nativeSrc":"2698:4:20","nodeType":"YulLiteral","src":"2698:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2691:3:20","nodeType":"YulIdentifier","src":"2691:3:20"},"nativeSrc":"2691:12:20","nodeType":"YulFunctionCall","src":"2691:12:20"},"variableNames":[{"name":"i","nativeSrc":"2686:1:20","nodeType":"YulIdentifier","src":"2686:1:20"}]}]},"pre":{"nativeSrc":"2665:3:20","nodeType":"YulBlock","src":"2665:3:20","statements":[]},"src":"2661:222:20"},{"body":{"nativeSrc":"2931:166:20","nodeType":"YulBlock","src":"2931:166:20","statements":[{"nativeSrc":"2949:43:20","nodeType":"YulVariableDeclaration","src":"2949:43:20","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2976:3:20","nodeType":"YulIdentifier","src":"2976:3:20"},{"name":"srcOffset","nativeSrc":"2981:9:20","nodeType":"YulIdentifier","src":"2981:9:20"}],"functionName":{"name":"add","nativeSrc":"2972:3:20","nodeType":"YulIdentifier","src":"2972:3:20"},"nativeSrc":"2972:19:20","nodeType":"YulFunctionCall","src":"2972:19:20"}],"functionName":{"name":"mload","nativeSrc":"2966:5:20","nodeType":"YulIdentifier","src":"2966:5:20"},"nativeSrc":"2966:26:20","nodeType":"YulFunctionCall","src":"2966:26:20"},"variables":[{"name":"lastValue","nativeSrc":"2953:9:20","nodeType":"YulTypedName","src":"2953:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3016:6:20","nodeType":"YulIdentifier","src":"3016:6:20"},{"arguments":[{"name":"lastValue","nativeSrc":"3028:9:20","nodeType":"YulIdentifier","src":"3028:9:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3055:1:20","nodeType":"YulLiteral","src":"3055:1:20","type":"","value":"3"},{"name":"newLen","nativeSrc":"3058:6:20","nodeType":"YulIdentifier","src":"3058:6:20"}],"functionName":{"name":"shl","nativeSrc":"3051:3:20","nodeType":"YulIdentifier","src":"3051:3:20"},"nativeSrc":"3051:14:20","nodeType":"YulFunctionCall","src":"3051:14:20"},{"kind":"number","nativeSrc":"3067:3:20","nodeType":"YulLiteral","src":"3067:3:20","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3047:3:20","nodeType":"YulIdentifier","src":"3047:3:20"},"nativeSrc":"3047:24:20","nodeType":"YulFunctionCall","src":"3047:24:20"},{"arguments":[{"kind":"number","nativeSrc":"3077:1:20","nodeType":"YulLiteral","src":"3077:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3073:3:20","nodeType":"YulIdentifier","src":"3073:3:20"},"nativeSrc":"3073:6:20","nodeType":"YulFunctionCall","src":"3073:6:20"}],"functionName":{"name":"shr","nativeSrc":"3043:3:20","nodeType":"YulIdentifier","src":"3043:3:20"},"nativeSrc":"3043:37:20","nodeType":"YulFunctionCall","src":"3043:37:20"}],"functionName":{"name":"not","nativeSrc":"3039:3:20","nodeType":"YulIdentifier","src":"3039:3:20"},"nativeSrc":"3039:42:20","nodeType":"YulFunctionCall","src":"3039:42:20"}],"functionName":{"name":"and","nativeSrc":"3024:3:20","nodeType":"YulIdentifier","src":"3024:3:20"},"nativeSrc":"3024:58:20","nodeType":"YulFunctionCall","src":"3024:58:20"}],"functionName":{"name":"sstore","nativeSrc":"3009:6:20","nodeType":"YulIdentifier","src":"3009:6:20"},"nativeSrc":"3009:74:20","nodeType":"YulFunctionCall","src":"3009:74:20"},"nativeSrc":"3009:74:20","nodeType":"YulExpressionStatement","src":"3009:74:20"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2902:7:20","nodeType":"YulIdentifier","src":"2902:7:20"},{"name":"newLen","nativeSrc":"2911:6:20","nodeType":"YulIdentifier","src":"2911:6:20"}],"functionName":{"name":"lt","nativeSrc":"2899:2:20","nodeType":"YulIdentifier","src":"2899:2:20"},"nativeSrc":"2899:19:20","nodeType":"YulFunctionCall","src":"2899:19:20"},"nativeSrc":"2896:201:20","nodeType":"YulIf","src":"2896:201:20"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3117:4:20","nodeType":"YulIdentifier","src":"3117:4:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3131:1:20","nodeType":"YulLiteral","src":"3131:1:20","type":"","value":"1"},{"name":"newLen","nativeSrc":"3134:6:20","nodeType":"YulIdentifier","src":"3134:6:20"}],"functionName":{"name":"shl","nativeSrc":"3127:3:20","nodeType":"YulIdentifier","src":"3127:3:20"},"nativeSrc":"3127:14:20","nodeType":"YulFunctionCall","src":"3127:14:20"},{"kind":"number","nativeSrc":"3143:1:20","nodeType":"YulLiteral","src":"3143:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3123:3:20","nodeType":"YulIdentifier","src":"3123:3:20"},"nativeSrc":"3123:22:20","nodeType":"YulFunctionCall","src":"3123:22:20"}],"functionName":{"name":"sstore","nativeSrc":"3110:6:20","nodeType":"YulIdentifier","src":"3110:6:20"},"nativeSrc":"3110:36:20","nodeType":"YulFunctionCall","src":"3110:36:20"},"nativeSrc":"3110:36:20","nodeType":"YulExpressionStatement","src":"3110:36:20"}]},"nativeSrc":"2507:649:20","nodeType":"YulCase","src":"2507:649:20","value":{"kind":"number","nativeSrc":"2512:1:20","nodeType":"YulLiteral","src":"2512:1:20","type":"","value":"1"}},{"body":{"nativeSrc":"3173:234:20","nodeType":"YulBlock","src":"3173:234:20","statements":[{"nativeSrc":"3187:14:20","nodeType":"YulVariableDeclaration","src":"3187:14:20","value":{"kind":"number","nativeSrc":"3200:1:20","nodeType":"YulLiteral","src":"3200:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3191:5:20","nodeType":"YulTypedName","src":"3191:5:20","type":""}]},{"body":{"nativeSrc":"3236:67:20","nodeType":"YulBlock","src":"3236:67:20","statements":[{"nativeSrc":"3254:35:20","nodeType":"YulAssignment","src":"3254:35:20","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3273:3:20","nodeType":"YulIdentifier","src":"3273:3:20"},{"name":"srcOffset","nativeSrc":"3278:9:20","nodeType":"YulIdentifier","src":"3278:9:20"}],"functionName":{"name":"add","nativeSrc":"3269:3:20","nodeType":"YulIdentifier","src":"3269:3:20"},"nativeSrc":"3269:19:20","nodeType":"YulFunctionCall","src":"3269:19:20"}],"functionName":{"name":"mload","nativeSrc":"3263:5:20","nodeType":"YulIdentifier","src":"3263:5:20"},"nativeSrc":"3263:26:20","nodeType":"YulFunctionCall","src":"3263:26:20"},"variableNames":[{"name":"value","nativeSrc":"3254:5:20","nodeType":"YulIdentifier","src":"3254:5:20"}]}]},"condition":{"name":"newLen","nativeSrc":"3217:6:20","nodeType":"YulIdentifier","src":"3217:6:20"},"nativeSrc":"3214:89:20","nodeType":"YulIf","src":"3214:89:20"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3323:4:20","nodeType":"YulIdentifier","src":"3323:4:20"},{"arguments":[{"name":"value","nativeSrc":"3382:5:20","nodeType":"YulIdentifier","src":"3382:5:20"},{"name":"newLen","nativeSrc":"3389:6:20","nodeType":"YulIdentifier","src":"3389:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3329:52:20","nodeType":"YulIdentifier","src":"3329:52:20"},"nativeSrc":"3329:67:20","nodeType":"YulFunctionCall","src":"3329:67:20"}],"functionName":{"name":"sstore","nativeSrc":"3316:6:20","nodeType":"YulIdentifier","src":"3316:6:20"},"nativeSrc":"3316:81:20","nodeType":"YulFunctionCall","src":"3316:81:20"},"nativeSrc":"3316:81:20","nodeType":"YulExpressionStatement","src":"3316:81:20"}]},"nativeSrc":"3165:242:20","nodeType":"YulCase","src":"3165:242:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2487:6:20","nodeType":"YulIdentifier","src":"2487:6:20"},{"kind":"number","nativeSrc":"2495:2:20","nodeType":"YulLiteral","src":"2495:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2484:2:20","nodeType":"YulIdentifier","src":"2484:2:20"},"nativeSrc":"2484:14:20","nodeType":"YulFunctionCall","src":"2484:14:20"},"nativeSrc":"2477:930:20","nodeType":"YulSwitch","src":"2477:930:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2114:1299:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2195:4:20","nodeType":"YulTypedName","src":"2195:4:20","type":""},{"name":"src","nativeSrc":"2201:3:20","nodeType":"YulTypedName","src":"2201:3:20","type":""}],"src":"2114:1299:20"},{"body":{"nativeSrc":"3519:102:20","nodeType":"YulBlock","src":"3519:102:20","statements":[{"nativeSrc":"3529:26:20","nodeType":"YulAssignment","src":"3529:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3541:9:20","nodeType":"YulIdentifier","src":"3541:9:20"},{"kind":"number","nativeSrc":"3552:2:20","nodeType":"YulLiteral","src":"3552:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3537:3:20","nodeType":"YulIdentifier","src":"3537:3:20"},"nativeSrc":"3537:18:20","nodeType":"YulFunctionCall","src":"3537:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3529:4:20","nodeType":"YulIdentifier","src":"3529:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3571:9:20","nodeType":"YulIdentifier","src":"3571:9:20"},{"arguments":[{"name":"value0","nativeSrc":"3586:6:20","nodeType":"YulIdentifier","src":"3586:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3602:3:20","nodeType":"YulLiteral","src":"3602:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"3607:1:20","nodeType":"YulLiteral","src":"3607:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3598:3:20","nodeType":"YulIdentifier","src":"3598:3:20"},"nativeSrc":"3598:11:20","nodeType":"YulFunctionCall","src":"3598:11:20"},{"kind":"number","nativeSrc":"3611:1:20","nodeType":"YulLiteral","src":"3611:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3594:3:20","nodeType":"YulIdentifier","src":"3594:3:20"},"nativeSrc":"3594:19:20","nodeType":"YulFunctionCall","src":"3594:19:20"}],"functionName":{"name":"and","nativeSrc":"3582:3:20","nodeType":"YulIdentifier","src":"3582:3:20"},"nativeSrc":"3582:32:20","nodeType":"YulFunctionCall","src":"3582:32:20"}],"functionName":{"name":"mstore","nativeSrc":"3564:6:20","nodeType":"YulIdentifier","src":"3564:6:20"},"nativeSrc":"3564:51:20","nodeType":"YulFunctionCall","src":"3564:51:20"},"nativeSrc":"3564:51:20","nodeType":"YulExpressionStatement","src":"3564:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3418:203:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3488:9:20","nodeType":"YulTypedName","src":"3488:9:20","type":""},{"name":"value0","nativeSrc":"3499:6:20","nodeType":"YulTypedName","src":"3499:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3510:4:20","nodeType":"YulTypedName","src":"3510:4:20","type":""}],"src":"3418:203:20"},{"body":{"nativeSrc":"3839:276:20","nodeType":"YulBlock","src":"3839:276:20","statements":[{"nativeSrc":"3849:27:20","nodeType":"YulAssignment","src":"3849:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3861:9:20","nodeType":"YulIdentifier","src":"3861:9:20"},{"kind":"number","nativeSrc":"3872:3:20","nodeType":"YulLiteral","src":"3872:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3857:3:20","nodeType":"YulIdentifier","src":"3857:3:20"},"nativeSrc":"3857:19:20","nodeType":"YulFunctionCall","src":"3857:19:20"},"variableNames":[{"name":"tail","nativeSrc":"3849:4:20","nodeType":"YulIdentifier","src":"3849:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3892:9:20","nodeType":"YulIdentifier","src":"3892:9:20"},{"name":"value0","nativeSrc":"3903:6:20","nodeType":"YulIdentifier","src":"3903:6:20"}],"functionName":{"name":"mstore","nativeSrc":"3885:6:20","nodeType":"YulIdentifier","src":"3885:6:20"},"nativeSrc":"3885:25:20","nodeType":"YulFunctionCall","src":"3885:25:20"},"nativeSrc":"3885:25:20","nodeType":"YulExpressionStatement","src":"3885:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3930:9:20","nodeType":"YulIdentifier","src":"3930:9:20"},{"kind":"number","nativeSrc":"3941:2:20","nodeType":"YulLiteral","src":"3941:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3926:3:20","nodeType":"YulIdentifier","src":"3926:3:20"},"nativeSrc":"3926:18:20","nodeType":"YulFunctionCall","src":"3926:18:20"},{"name":"value1","nativeSrc":"3946:6:20","nodeType":"YulIdentifier","src":"3946:6:20"}],"functionName":{"name":"mstore","nativeSrc":"3919:6:20","nodeType":"YulIdentifier","src":"3919:6:20"},"nativeSrc":"3919:34:20","nodeType":"YulFunctionCall","src":"3919:34:20"},"nativeSrc":"3919:34:20","nodeType":"YulExpressionStatement","src":"3919:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3973:9:20","nodeType":"YulIdentifier","src":"3973:9:20"},{"kind":"number","nativeSrc":"3984:2:20","nodeType":"YulLiteral","src":"3984:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3969:3:20","nodeType":"YulIdentifier","src":"3969:3:20"},"nativeSrc":"3969:18:20","nodeType":"YulFunctionCall","src":"3969:18:20"},{"name":"value2","nativeSrc":"3989:6:20","nodeType":"YulIdentifier","src":"3989:6:20"}],"functionName":{"name":"mstore","nativeSrc":"3962:6:20","nodeType":"YulIdentifier","src":"3962:6:20"},"nativeSrc":"3962:34:20","nodeType":"YulFunctionCall","src":"3962:34:20"},"nativeSrc":"3962:34:20","nodeType":"YulExpressionStatement","src":"3962:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4016:9:20","nodeType":"YulIdentifier","src":"4016:9:20"},{"kind":"number","nativeSrc":"4027:2:20","nodeType":"YulLiteral","src":"4027:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4012:3:20","nodeType":"YulIdentifier","src":"4012:3:20"},"nativeSrc":"4012:18:20","nodeType":"YulFunctionCall","src":"4012:18:20"},{"name":"value3","nativeSrc":"4032:6:20","nodeType":"YulIdentifier","src":"4032:6:20"}],"functionName":{"name":"mstore","nativeSrc":"4005:6:20","nodeType":"YulIdentifier","src":"4005:6:20"},"nativeSrc":"4005:34:20","nodeType":"YulFunctionCall","src":"4005:34:20"},"nativeSrc":"4005:34:20","nodeType":"YulExpressionStatement","src":"4005:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4059:9:20","nodeType":"YulIdentifier","src":"4059:9:20"},{"kind":"number","nativeSrc":"4070:3:20","nodeType":"YulLiteral","src":"4070:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4055:3:20","nodeType":"YulIdentifier","src":"4055:3:20"},"nativeSrc":"4055:19:20","nodeType":"YulFunctionCall","src":"4055:19:20"},{"arguments":[{"name":"value4","nativeSrc":"4080:6:20","nodeType":"YulIdentifier","src":"4080:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4096:3:20","nodeType":"YulLiteral","src":"4096:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"4101:1:20","nodeType":"YulLiteral","src":"4101:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4092:3:20","nodeType":"YulIdentifier","src":"4092:3:20"},"nativeSrc":"4092:11:20","nodeType":"YulFunctionCall","src":"4092:11:20"},{"kind":"number","nativeSrc":"4105:1:20","nodeType":"YulLiteral","src":"4105:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4088:3:20","nodeType":"YulIdentifier","src":"4088:3:20"},"nativeSrc":"4088:19:20","nodeType":"YulFunctionCall","src":"4088:19:20"}],"functionName":{"name":"and","nativeSrc":"4076:3:20","nodeType":"YulIdentifier","src":"4076:3:20"},"nativeSrc":"4076:32:20","nodeType":"YulFunctionCall","src":"4076:32:20"}],"functionName":{"name":"mstore","nativeSrc":"4048:6:20","nodeType":"YulIdentifier","src":"4048:6:20"},"nativeSrc":"4048:61:20","nodeType":"YulFunctionCall","src":"4048:61:20"},"nativeSrc":"4048:61:20","nodeType":"YulExpressionStatement","src":"4048:61:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"3626:489:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3776:9:20","nodeType":"YulTypedName","src":"3776:9:20","type":""},{"name":"value4","nativeSrc":"3787:6:20","nodeType":"YulTypedName","src":"3787:6:20","type":""},{"name":"value3","nativeSrc":"3795:6:20","nodeType":"YulTypedName","src":"3795:6:20","type":""},{"name":"value2","nativeSrc":"3803:6:20","nodeType":"YulTypedName","src":"3803:6:20","type":""},{"name":"value1","nativeSrc":"3811:6:20","nodeType":"YulTypedName","src":"3811:6:20","type":""},{"name":"value0","nativeSrc":"3819:6:20","nodeType":"YulTypedName","src":"3819:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3830:4:20","nodeType":"YulTypedName","src":"3830:4:20","type":""}],"src":"3626:489:20"},{"body":{"nativeSrc":"4241:297:20","nodeType":"YulBlock","src":"4241:297:20","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4258:9:20","nodeType":"YulIdentifier","src":"4258:9:20"},{"kind":"number","nativeSrc":"4269:2:20","nodeType":"YulLiteral","src":"4269:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4251:6:20","nodeType":"YulIdentifier","src":"4251:6:20"},"nativeSrc":"4251:21:20","nodeType":"YulFunctionCall","src":"4251:21:20"},"nativeSrc":"4251:21:20","nodeType":"YulExpressionStatement","src":"4251:21:20"},{"nativeSrc":"4281:27:20","nodeType":"YulVariableDeclaration","src":"4281:27:20","value":{"arguments":[{"name":"value0","nativeSrc":"4301:6:20","nodeType":"YulIdentifier","src":"4301:6:20"}],"functionName":{"name":"mload","nativeSrc":"4295:5:20","nodeType":"YulIdentifier","src":"4295:5:20"},"nativeSrc":"4295:13:20","nodeType":"YulFunctionCall","src":"4295:13:20"},"variables":[{"name":"length","nativeSrc":"4285:6:20","nodeType":"YulTypedName","src":"4285:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4328:9:20","nodeType":"YulIdentifier","src":"4328:9:20"},{"kind":"number","nativeSrc":"4339:2:20","nodeType":"YulLiteral","src":"4339:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4324:3:20","nodeType":"YulIdentifier","src":"4324:3:20"},"nativeSrc":"4324:18:20","nodeType":"YulFunctionCall","src":"4324:18:20"},{"name":"length","nativeSrc":"4344:6:20","nodeType":"YulIdentifier","src":"4344:6:20"}],"functionName":{"name":"mstore","nativeSrc":"4317:6:20","nodeType":"YulIdentifier","src":"4317:6:20"},"nativeSrc":"4317:34:20","nodeType":"YulFunctionCall","src":"4317:34:20"},"nativeSrc":"4317:34:20","nodeType":"YulExpressionStatement","src":"4317:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4370:9:20","nodeType":"YulIdentifier","src":"4370:9:20"},{"kind":"number","nativeSrc":"4381:2:20","nodeType":"YulLiteral","src":"4381:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4366:3:20","nodeType":"YulIdentifier","src":"4366:3:20"},"nativeSrc":"4366:18:20","nodeType":"YulFunctionCall","src":"4366:18:20"},{"arguments":[{"name":"value0","nativeSrc":"4390:6:20","nodeType":"YulIdentifier","src":"4390:6:20"},{"kind":"number","nativeSrc":"4398:2:20","nodeType":"YulLiteral","src":"4398:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4386:3:20","nodeType":"YulIdentifier","src":"4386:3:20"},"nativeSrc":"4386:15:20","nodeType":"YulFunctionCall","src":"4386:15:20"},{"name":"length","nativeSrc":"4403:6:20","nodeType":"YulIdentifier","src":"4403:6:20"}],"functionName":{"name":"mcopy","nativeSrc":"4360:5:20","nodeType":"YulIdentifier","src":"4360:5:20"},"nativeSrc":"4360:50:20","nodeType":"YulFunctionCall","src":"4360:50:20"},"nativeSrc":"4360:50:20","nodeType":"YulExpressionStatement","src":"4360:50:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4434:9:20","nodeType":"YulIdentifier","src":"4434:9:20"},{"name":"length","nativeSrc":"4445:6:20","nodeType":"YulIdentifier","src":"4445:6:20"}],"functionName":{"name":"add","nativeSrc":"4430:3:20","nodeType":"YulIdentifier","src":"4430:3:20"},"nativeSrc":"4430:22:20","nodeType":"YulFunctionCall","src":"4430:22:20"},{"kind":"number","nativeSrc":"4454:2:20","nodeType":"YulLiteral","src":"4454:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4426:3:20","nodeType":"YulIdentifier","src":"4426:3:20"},"nativeSrc":"4426:31:20","nodeType":"YulFunctionCall","src":"4426:31:20"},{"kind":"number","nativeSrc":"4459:1:20","nodeType":"YulLiteral","src":"4459:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4419:6:20","nodeType":"YulIdentifier","src":"4419:6:20"},"nativeSrc":"4419:42:20","nodeType":"YulFunctionCall","src":"4419:42:20"},"nativeSrc":"4419:42:20","nodeType":"YulExpressionStatement","src":"4419:42:20"},{"nativeSrc":"4470:62:20","nodeType":"YulAssignment","src":"4470:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4486:9:20","nodeType":"YulIdentifier","src":"4486:9:20"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4505:6:20","nodeType":"YulIdentifier","src":"4505:6:20"},{"kind":"number","nativeSrc":"4513:2:20","nodeType":"YulLiteral","src":"4513:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4501:3:20","nodeType":"YulIdentifier","src":"4501:3:20"},"nativeSrc":"4501:15:20","nodeType":"YulFunctionCall","src":"4501:15:20"},{"arguments":[{"kind":"number","nativeSrc":"4522:2:20","nodeType":"YulLiteral","src":"4522:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4518:3:20","nodeType":"YulIdentifier","src":"4518:3:20"},"nativeSrc":"4518:7:20","nodeType":"YulFunctionCall","src":"4518:7:20"}],"functionName":{"name":"and","nativeSrc":"4497:3:20","nodeType":"YulIdentifier","src":"4497:3:20"},"nativeSrc":"4497:29:20","nodeType":"YulFunctionCall","src":"4497:29:20"}],"functionName":{"name":"add","nativeSrc":"4482:3:20","nodeType":"YulIdentifier","src":"4482:3:20"},"nativeSrc":"4482:45:20","nodeType":"YulFunctionCall","src":"4482:45:20"},{"kind":"number","nativeSrc":"4529:2:20","nodeType":"YulLiteral","src":"4529:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4478:3:20","nodeType":"YulIdentifier","src":"4478:3:20"},"nativeSrc":"4478:54:20","nodeType":"YulFunctionCall","src":"4478:54:20"},"variableNames":[{"name":"tail","nativeSrc":"4470:4:20","nodeType":"YulIdentifier","src":"4470:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4120:418:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4210:9:20","nodeType":"YulTypedName","src":"4210:9:20","type":""},{"name":"value0","nativeSrc":"4221:6:20","nodeType":"YulTypedName","src":"4221:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4232:4:20","nodeType":"YulTypedName","src":"4232:4:20","type":""}],"src":"4120:418:20"},{"body":{"nativeSrc":"4637:203:20","nodeType":"YulBlock","src":"4637:203:20","statements":[{"nativeSrc":"4647:26:20","nodeType":"YulVariableDeclaration","src":"4647:26:20","value":{"arguments":[{"name":"array","nativeSrc":"4667:5:20","nodeType":"YulIdentifier","src":"4667:5:20"}],"functionName":{"name":"mload","nativeSrc":"4661:5:20","nodeType":"YulIdentifier","src":"4661:5:20"},"nativeSrc":"4661:12:20","nodeType":"YulFunctionCall","src":"4661:12:20"},"variables":[{"name":"length","nativeSrc":"4651:6:20","nodeType":"YulTypedName","src":"4651:6:20","type":""}]},{"nativeSrc":"4682:32:20","nodeType":"YulAssignment","src":"4682:32:20","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"4701:5:20","nodeType":"YulIdentifier","src":"4701:5:20"},{"kind":"number","nativeSrc":"4708:4:20","nodeType":"YulLiteral","src":"4708:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4697:3:20","nodeType":"YulIdentifier","src":"4697:3:20"},"nativeSrc":"4697:16:20","nodeType":"YulFunctionCall","src":"4697:16:20"}],"functionName":{"name":"mload","nativeSrc":"4691:5:20","nodeType":"YulIdentifier","src":"4691:5:20"},"nativeSrc":"4691:23:20","nodeType":"YulFunctionCall","src":"4691:23:20"},"variableNames":[{"name":"value","nativeSrc":"4682:5:20","nodeType":"YulIdentifier","src":"4682:5:20"}]},{"body":{"nativeSrc":"4751:83:20","nodeType":"YulBlock","src":"4751:83:20","statements":[{"nativeSrc":"4765:59:20","nodeType":"YulAssignment","src":"4765:59:20","value":{"arguments":[{"name":"value","nativeSrc":"4778:5:20","nodeType":"YulIdentifier","src":"4778:5:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4793:1:20","nodeType":"YulLiteral","src":"4793:1:20","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4800:4:20","nodeType":"YulLiteral","src":"4800:4:20","type":"","value":"0x20"},{"name":"length","nativeSrc":"4806:6:20","nodeType":"YulIdentifier","src":"4806:6:20"}],"functionName":{"name":"sub","nativeSrc":"4796:3:20","nodeType":"YulIdentifier","src":"4796:3:20"},"nativeSrc":"4796:17:20","nodeType":"YulFunctionCall","src":"4796:17:20"}],"functionName":{"name":"shl","nativeSrc":"4789:3:20","nodeType":"YulIdentifier","src":"4789:3:20"},"nativeSrc":"4789:25:20","nodeType":"YulFunctionCall","src":"4789:25:20"},{"arguments":[{"kind":"number","nativeSrc":"4820:1:20","nodeType":"YulLiteral","src":"4820:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4816:3:20","nodeType":"YulIdentifier","src":"4816:3:20"},"nativeSrc":"4816:6:20","nodeType":"YulFunctionCall","src":"4816:6:20"}],"functionName":{"name":"shl","nativeSrc":"4785:3:20","nodeType":"YulIdentifier","src":"4785:3:20"},"nativeSrc":"4785:38:20","nodeType":"YulFunctionCall","src":"4785:38:20"}],"functionName":{"name":"and","nativeSrc":"4774:3:20","nodeType":"YulIdentifier","src":"4774:3:20"},"nativeSrc":"4774:50:20","nodeType":"YulFunctionCall","src":"4774:50:20"},"variableNames":[{"name":"value","nativeSrc":"4765:5:20","nodeType":"YulIdentifier","src":"4765:5:20"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4729:6:20","nodeType":"YulIdentifier","src":"4729:6:20"},{"kind":"number","nativeSrc":"4737:4:20","nodeType":"YulLiteral","src":"4737:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4726:2:20","nodeType":"YulIdentifier","src":"4726:2:20"},"nativeSrc":"4726:16:20","nodeType":"YulFunctionCall","src":"4726:16:20"},"nativeSrc":"4723:111:20","nodeType":"YulIf","src":"4723:111:20"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"4543:297:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4617:5:20","nodeType":"YulTypedName","src":"4617:5:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4627:5:20","nodeType":"YulTypedName","src":"4627:5:20","type":""}],"src":"4543:297:20"},{"body":{"nativeSrc":"4893:174:20","nodeType":"YulBlock","src":"4893:174:20","statements":[{"nativeSrc":"4903:16:20","nodeType":"YulAssignment","src":"4903:16:20","value":{"arguments":[{"name":"x","nativeSrc":"4914:1:20","nodeType":"YulIdentifier","src":"4914:1:20"},{"name":"y","nativeSrc":"4917:1:20","nodeType":"YulIdentifier","src":"4917:1:20"}],"functionName":{"name":"add","nativeSrc":"4910:3:20","nodeType":"YulIdentifier","src":"4910:3:20"},"nativeSrc":"4910:9:20","nodeType":"YulFunctionCall","src":"4910:9:20"},"variableNames":[{"name":"sum","nativeSrc":"4903:3:20","nodeType":"YulIdentifier","src":"4903:3:20"}]},{"body":{"nativeSrc":"4950:111:20","nodeType":"YulBlock","src":"4950:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4971:1:20","nodeType":"YulLiteral","src":"4971:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4978:3:20","nodeType":"YulLiteral","src":"4978:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"4983:10:20","nodeType":"YulLiteral","src":"4983:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4974:3:20","nodeType":"YulIdentifier","src":"4974:3:20"},"nativeSrc":"4974:20:20","nodeType":"YulFunctionCall","src":"4974:20:20"}],"functionName":{"name":"mstore","nativeSrc":"4964:6:20","nodeType":"YulIdentifier","src":"4964:6:20"},"nativeSrc":"4964:31:20","nodeType":"YulFunctionCall","src":"4964:31:20"},"nativeSrc":"4964:31:20","nodeType":"YulExpressionStatement","src":"4964:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5015:1:20","nodeType":"YulLiteral","src":"5015:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"5018:4:20","nodeType":"YulLiteral","src":"5018:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5008:6:20","nodeType":"YulIdentifier","src":"5008:6:20"},"nativeSrc":"5008:15:20","nodeType":"YulFunctionCall","src":"5008:15:20"},"nativeSrc":"5008:15:20","nodeType":"YulExpressionStatement","src":"5008:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5043:1:20","nodeType":"YulLiteral","src":"5043:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5046:4:20","nodeType":"YulLiteral","src":"5046:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5036:6:20","nodeType":"YulIdentifier","src":"5036:6:20"},"nativeSrc":"5036:15:20","nodeType":"YulFunctionCall","src":"5036:15:20"},"nativeSrc":"5036:15:20","nodeType":"YulExpressionStatement","src":"5036:15:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"4934:1:20","nodeType":"YulIdentifier","src":"4934:1:20"},{"name":"sum","nativeSrc":"4937:3:20","nodeType":"YulIdentifier","src":"4937:3:20"}],"functionName":{"name":"gt","nativeSrc":"4931:2:20","nodeType":"YulIdentifier","src":"4931:2:20"},"nativeSrc":"4931:10:20","nodeType":"YulFunctionCall","src":"4931:10:20"},"nativeSrc":"4928:133:20","nodeType":"YulIf","src":"4928:133:20"}]},"name":"checked_add_t_uint256","nativeSrc":"4845:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4876:1:20","nodeType":"YulTypedName","src":"4876:1:20","type":""},{"name":"y","nativeSrc":"4879:1:20","nodeType":"YulTypedName","src":"4879:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"4885:3:20","nodeType":"YulTypedName","src":"4885:3:20","type":""}],"src":"4845:222:20"},{"body":{"nativeSrc":"5229:188:20","nodeType":"YulBlock","src":"5229:188:20","statements":[{"nativeSrc":"5239:26:20","nodeType":"YulAssignment","src":"5239:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5251:9:20","nodeType":"YulIdentifier","src":"5251:9:20"},{"kind":"number","nativeSrc":"5262:2:20","nodeType":"YulLiteral","src":"5262:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5247:3:20","nodeType":"YulIdentifier","src":"5247:3:20"},"nativeSrc":"5247:18:20","nodeType":"YulFunctionCall","src":"5247:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5239:4:20","nodeType":"YulIdentifier","src":"5239:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5281:9:20","nodeType":"YulIdentifier","src":"5281:9:20"},{"arguments":[{"name":"value0","nativeSrc":"5296:6:20","nodeType":"YulIdentifier","src":"5296:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5312:3:20","nodeType":"YulLiteral","src":"5312:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"5317:1:20","nodeType":"YulLiteral","src":"5317:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5308:3:20","nodeType":"YulIdentifier","src":"5308:3:20"},"nativeSrc":"5308:11:20","nodeType":"YulFunctionCall","src":"5308:11:20"},{"kind":"number","nativeSrc":"5321:1:20","nodeType":"YulLiteral","src":"5321:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5304:3:20","nodeType":"YulIdentifier","src":"5304:3:20"},"nativeSrc":"5304:19:20","nodeType":"YulFunctionCall","src":"5304:19:20"}],"functionName":{"name":"and","nativeSrc":"5292:3:20","nodeType":"YulIdentifier","src":"5292:3:20"},"nativeSrc":"5292:32:20","nodeType":"YulFunctionCall","src":"5292:32:20"}],"functionName":{"name":"mstore","nativeSrc":"5274:6:20","nodeType":"YulIdentifier","src":"5274:6:20"},"nativeSrc":"5274:51:20","nodeType":"YulFunctionCall","src":"5274:51:20"},"nativeSrc":"5274:51:20","nodeType":"YulExpressionStatement","src":"5274:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5345:9:20","nodeType":"YulIdentifier","src":"5345:9:20"},{"kind":"number","nativeSrc":"5356:2:20","nodeType":"YulLiteral","src":"5356:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5341:3:20","nodeType":"YulIdentifier","src":"5341:3:20"},"nativeSrc":"5341:18:20","nodeType":"YulFunctionCall","src":"5341:18:20"},{"name":"value1","nativeSrc":"5361:6:20","nodeType":"YulIdentifier","src":"5361:6:20"}],"functionName":{"name":"mstore","nativeSrc":"5334:6:20","nodeType":"YulIdentifier","src":"5334:6:20"},"nativeSrc":"5334:34:20","nodeType":"YulFunctionCall","src":"5334:34:20"},"nativeSrc":"5334:34:20","nodeType":"YulExpressionStatement","src":"5334:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5388:9:20","nodeType":"YulIdentifier","src":"5388:9:20"},{"kind":"number","nativeSrc":"5399:2:20","nodeType":"YulLiteral","src":"5399:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5384:3:20","nodeType":"YulIdentifier","src":"5384:3:20"},"nativeSrc":"5384:18:20","nodeType":"YulFunctionCall","src":"5384:18:20"},{"name":"value2","nativeSrc":"5404:6:20","nodeType":"YulIdentifier","src":"5404:6:20"}],"functionName":{"name":"mstore","nativeSrc":"5377:6:20","nodeType":"YulIdentifier","src":"5377:6:20"},"nativeSrc":"5377:34:20","nodeType":"YulFunctionCall","src":"5377:34:20"},"nativeSrc":"5377:34:20","nodeType":"YulExpressionStatement","src":"5377:34:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5072:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5182:9:20","nodeType":"YulTypedName","src":"5182:9:20","type":""},{"name":"value2","nativeSrc":"5193:6:20","nodeType":"YulTypedName","src":"5193:6:20","type":""},{"name":"value1","nativeSrc":"5201:6:20","nodeType":"YulTypedName","src":"5201:6:20","type":""},{"name":"value0","nativeSrc":"5209:6:20","nodeType":"YulTypedName","src":"5209:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5220:4:20","nodeType":"YulTypedName","src":"5220:4:20","type":""}],"src":"5072:345:20"},{"body":{"nativeSrc":"5523:76:20","nodeType":"YulBlock","src":"5523:76:20","statements":[{"nativeSrc":"5533:26:20","nodeType":"YulAssignment","src":"5533:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5545:9:20","nodeType":"YulIdentifier","src":"5545:9:20"},{"kind":"number","nativeSrc":"5556:2:20","nodeType":"YulLiteral","src":"5556:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5541:3:20","nodeType":"YulIdentifier","src":"5541:3:20"},"nativeSrc":"5541:18:20","nodeType":"YulFunctionCall","src":"5541:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5533:4:20","nodeType":"YulIdentifier","src":"5533:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5575:9:20","nodeType":"YulIdentifier","src":"5575:9:20"},{"name":"value0","nativeSrc":"5586:6:20","nodeType":"YulIdentifier","src":"5586:6:20"}],"functionName":{"name":"mstore","nativeSrc":"5568:6:20","nodeType":"YulIdentifier","src":"5568:6:20"},"nativeSrc":"5568:25:20","nodeType":"YulFunctionCall","src":"5568:25:20"},"nativeSrc":"5568:25:20","nodeType":"YulExpressionStatement","src":"5568:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5422:177:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5492:9:20","nodeType":"YulTypedName","src":"5492:9:20","type":""},{"name":"value0","nativeSrc":"5503:6:20","nodeType":"YulTypedName","src":"5503:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5514:4:20","nodeType":"YulTypedName","src":"5514:4:20","type":""}],"src":"5422:177:20"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let value := 0\n        value := mload(add(headStart, 32))\n        value1 := value\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        let value_1 := 0\n        value_1 := mload(add(headStart, 128))\n        value4 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101c0604052348015610010575f5ffd5b5060405161214e38038061214e83398101604081905261002f9161044e565b6040518060400160405280600e81526020016d4149204167656e7420536861726560901b815250604051806040016040528060018152602001603160f81b815250866040518060400160405280600d81526020016c020a4a0b3b2b73a29b430b9329609d1b8152506040518060400160405280600381526020016241495360e81b81525081600390816100c29190610532565b5060046100cf8282610532565b5050506001600160a01b03811661010057604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61010981610215565b50610115826006610266565b61012052610124816007610266565b61014052815160208084019190912060e052815190820120610100524660a0526101b060e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052846001600160a01b0381166101e15760405163e6c4247b60e01b815260040160405180910390fd5b60088590556001600160a01b0384166101a05261016083905261018082905261020a8686610298565b505050505050610663565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020835110156102815761027a836102d0565b9050610292565b8161028c8482610532565b5060ff90505b92915050565b6001600160a01b0382166102c15760405163ec442f0560e01b81525f60048201526024016100f7565b6102cc5f838361030d565b5050565b5f5f829050601f815111156102fa578260405163305a27a960e01b81526004016100f791906105ec565b805161030582610621565b179392505050565b6001600160a01b038316610337578060025f82825461032c9190610644565b909155506103a79050565b6001600160a01b0383165f90815260208190526040902054818110156103895760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100f7565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103c3576002805482900390556103e1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161042691815260200190565b60405180910390a3505050565b80516001600160a01b0381168114610449575f5ffd5b919050565b5f5f5f5f5f60a08688031215610462575f5ffd5b61046b86610433565b6020870151909550935061048160408701610433565b6060870151608090970151959894975095949392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104c257607f821691505b6020821081036104e057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561052d57805f5260205f20601f840160051c8101602085101561050b5750805b601f840160051c820191505b8181101561052a575f8155600101610517565b50505b505050565b81516001600160401b0381111561054b5761054b61049a565b61055f8161055984546104ae565b846104e6565b6020601f821160018114610591575f831561057a5750848201515b5f19600385901b1c1916600184901b17845561052a565b5f84815260208120601f198516915b828110156105c057878501518255602094850194600190920191016105a0565b50848210156105dd57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156104e0575f1960209190910360031b1b16919050565b8082018082111561029257634e487b7160e01b5f52601160045260245ffd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a051611a676106e75f395f81816103bb01526106ca01525f818161046701526108e001525f81816102dc015261102801525f610d2301525f610cf101525f61124601525f61121e01525f61117901525f6111a301525f6111cd0152611a675ff3fe6080604052600436106101ba575f3560e01c80637e799858116100f257806395d89b4111610092578063d96f733511610062578063d96f73351461050e578063dd62ed3e1461052a578063f2fde38b1461056e578063f4d6f4981461058d575f5ffd5b806395d89b4114610489578063a9059cbb1461049d578063b9be6303146104bc578063c17c7aee146104ef575f5ffd5b806384b0196e116100cd57806384b0196e146103f557806388d9f5ea1461041c5780638da5cb5b146104395780638f62048714610456575f5ffd5b80637e79985814610376578063833b94991461038f5780638406c079146103aa575f5ffd5b80635f0a0d6b1161015d57806370a082311161013857806370a08231146102fe578063715018a61461033257806374244bc91461034657806375405d0d1461035b575f5ffd5b80635f0a0d6b14610299578063685e089b146102b85780636a443f67146102cb575f5ffd5b806318160ddd1161019857806318160ddd1461023657806323b872dd1461024a578063313ce567146102695780634ddc43b514610284575f5ffd5b806304a79c97146101be57806306fdde03146101e6578063095ea7b314610207575b5f5ffd5b3480156101c9575f5ffd5b506101d360085481565b6040519081526020015b60405180910390f35b3480156101f1575f5ffd5b506101fa6105a1565b6040516101dd9190611519565b348015610212575f5ffd5b50610226610221366004611546565b610631565b60405190151581526020016101dd565b348015610241575f5ffd5b506002546101d3565b348015610255575f5ffd5b5061022661026436600461156e565b61064a565b348015610274575f5ffd5b50604051601281526020016101dd565b610297610292366004611658565b61066d565b005b3480156102a4575f5ffd5b506101d36102b33660046116a4565b6106a9565b6102976102c63660046116bb565b6106bf565b3480156102d6575f5ffd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b348015610309575f5ffd5b506101d3610318366004611775565b6001600160a01b03165f9081526020819052604090205490565b34801561033d575f5ffd5b506102976107b7565b348015610351575f5ffd5b506101d361012c81565b348015610366575f5ffd5b506101d3674563918244f4000081565b348015610381575f5ffd5b506009546102269060ff1681565b34801561039a575f5ffd5b506101d367016345785d8a000081565b3480156103b5575f5ffd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101dd565b348015610400575f5ffd5b506104096107ca565b6040516101dd979695949392919061178e565b348015610427575f5ffd5b506101d3690a968163f0a57b40000181565b348015610444575f5ffd5b506005546001600160a01b03166103dd565b348015610461575f5ffd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b348015610494575f5ffd5b506101fa61080c565b3480156104a8575f5ffd5b506102266104b7366004611546565b61081b565b3480156104c7575f5ffd5b506101d37ffc9bf37d032f38f48a078c07741a8112c5d73160d7beafc368f9603eee9b911881565b3480156104fa575f5ffd5b506102266105093660046116a4565b610828565b348015610519575f5ffd5b506101d368056bc75e2d630fffff81565b348015610535575f5ffd5b506101d3610544366004611824565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610579575f5ffd5b50610297610588366004611775565b610859565b348015610598575f5ffd5b5061029761089b565b6060600380546105b090611855565b80601f01602080910402602001604051908101604052809291908181526020018280546105dc90611855565b80156106275780601f106105fe57610100808354040283529160200191610627565b820191905f5260205f20905b81548152906001019060200180831161060a57829003601f168201915b5050505050905090565b5f3361063e818585610967565b60019150505b92915050565b5f33610657858285610979565b6106628585856109f5565b506001949350505050565b61067a8333848585610a52565b60405133907f233e08777131763a85257b15eafc9f96ef08f259653d9944301ff924b3917cf5905f90a2505050565b600a81600281106106b8575f80fd5b0154905081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107085760405163538fb16360e01b815260040160405180910390fd5b61073a7ffc9bf37d032f38f48a078c07741a8112c5d73160d7beafc368f9603eee9b91188b8b8b8b8b8b8a8a8a610b7d565b6107588b8b8a610752674563918244f40000826118a1565b88610a52565b61076a33674563918244f40000610c34565b886001600160a01b03168a6001600160a01b03167fa18ccddbafa2abd18f548774a92a0c9f76df5771ea5a927074cf0dce0265e6d060405160405180910390a35050505050505050505050565b6107bf610c6c565b6107c85f610c99565b565b5f6060805f5f5f60606107db610cea565b6107e3610d1c565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546105b090611855565b5f3361063e8185856109f5565b5f5f5f61083484610d49565b9150915080600a836002811061084c5761084c6118b4565b0154161515949350505050565b610861610c6c565b6001600160a01b03811661088f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61089881610c99565b50565b6108a3610c6c565b60095460ff16156108c75760405163607023bf60e01b815260040160405180910390fd5b6009805460ff19166001179055600854801561093c57427f00000000000000000000000000000000000000000000000000000000000000001061091d576040516301c4065d60e21b815260040160405180910390fd5b5f60085561093c6109366005546001600160a01b031690565b82610c34565b6040517fd6891bd2534e5c59dc10743e5a7b2469cb5dcf61cfba85f70efddecb2b4553a2905f90a150565b6109748383836001610d9b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156109ef57818110156109e157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610886565b6109ef84848484035f610d9b565b50505050565b6001600160a01b038316610a1e57604051634b637e8f60e11b81525f6004820152602401610886565b6001600160a01b038216610a475760405163ec442f0560e01b81525f6004820152602401610886565b610974838383610e6d565b610a5b85610828565b15610a7957604051630799973160e31b815260040160405180910390fd5b610a8285610f93565b610a8e85858584610fc3565b610aab57604051632ba75b2560e01b815260040160405180910390fd5b826008546001610abb91906118c8565b11610ad95760405163d08480ed60e01b815260040160405180910390fd5b68056bc75e2d630fffff83118015610afa5750690a968163f0a57b40000183105b610b175760405163162908e360e11b815260040160405180910390fd5b5f610b246012600a6119be565b610b3667016345785d8a0000866119cc565b610b4091906119f7565b9050803414610b625760405163356680b760e01b815260040160405180910390fd5b600880548590039055610b758584610c34565b505050505050565b60408051602081018c90526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905260c0810186905260e081018590525f90610be3906101000160405160208183030381529060405280519060200120611057565b90505f610bf282868686611083565b90508a6001600160a01b0316816001600160a01b031614610c2657604051638baa579f60e01b815260040160405180910390fd5b505050505050505050505050565b6001600160a01b038216610c5d5760405163ec442f0560e01b81525f6004820152602401610886565b610c685f8383610e6d565b5050565b6005546001600160a01b031633146107c85760405163118cdaa760e01b8152336004820152602401610886565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6060610d177f000000000000000000000000000000000000000000000000000000000000000060066110af565b905090565b6060610d177f000000000000000000000000000000000000000000000000000000000000000060076110af565b5f5f61012c8310610d6d57604051634d175db160e01b815260040160405180910390fd5b60ff5f610d7a82866119f7565b90505f610d8a60ff841687611a0a565b9196600190921b9550909350505050565b6001600160a01b038416610dc45760405163e602df0560e01b81525f6004820152602401610886565b6001600160a01b038316610ded57604051634a1406b160e11b81525f6004820152602401610886565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156109ef57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5f91815260200190565b60405180910390a350505050565b6001600160a01b038316610e97578060025f828254610e8c91906118c8565b90915550610f079050565b6001600160a01b0383165f9081526020819052604090205481811015610ee95760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610886565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610f2357600280548290039055610f41565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f8691815260200190565b60405180910390a3505050565b5f5f610f9e83610d49565b9150915080600a8360028110610fb657610fb66118b4565b0180549091179055505050565b60408051602081018690526001600160a01b03851691810191909152606081018390525f90819060800160408051601f198184030181528282528051602091820120908301520160405160208183030381529060405280519060200120905061104d837f000000000000000000000000000000000000000000000000000000000000000083611158565b9695505050505050565b5f61064461106361116d565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f61109388888888611296565b9250925092506110a3828261135e565b50909695505050505050565b606060ff83146110c9576110c283611416565b9050610644565b8180546110d590611855565b80601f016020809104026020016040519081016040528092919081815260200182805461110190611855565b801561114c5780601f106111235761010080835404028352916020019161114c565b820191905f5260205f20905b81548152906001019060200180831161112f57829003601f168201915b50505050509050610644565b5f826111648584611453565b14949350505050565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111c557507f000000000000000000000000000000000000000000000000000000000000000046145b156111ef57507f000000000000000000000000000000000000000000000000000000000000000090565b610d17604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156112cf57505f91506003905082611354565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611320573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b03811661134b57505f925060019150829050611354565b92505f91508190505b9450945094915050565b5f82600381111561137157611371611a1d565b0361137a575050565b600182600381111561138e5761138e611a1d565b036113ac5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156113c0576113c0611a1d565b036113e15760405163fce698f760e01b815260048101829052602401610886565b60038260038111156113f5576113f5611a1d565b03610c68576040516335e2f38360e21b815260048101829052602401610886565b60605f61142283611495565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f81815b845181101561148d5761148382868381518110611476576114766118b4565b60200260200101516114bc565b9150600101611457565b509392505050565b5f60ff8216601f81111561064457604051632cd44ac360e21b815260040160405180910390fd5b5f8183106114d6575f8281526020849052604090206114e4565b5f8381526020839052604090205b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6114e460208301846114eb565b80356001600160a01b0381168114611541575f5ffd5b919050565b5f5f60408385031215611557575f5ffd5b6115608361152b565b946020939093013593505050565b5f5f5f60608486031215611580575f5ffd5b6115898461152b565b92506115976020850161152b565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126115cb575f5ffd5b813567ffffffffffffffff8111156115e5576115e56115a8565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611612576116126115a8565b60405291825260208185018101929081018684111561162f575f5ffd5b6020860192505b8383101561164e578235815260209283019201611636565b5095945050505050565b5f5f5f6060848603121561166a575f5ffd5b8335925060208401359150604084013567ffffffffffffffff81111561168e575f5ffd5b61169a868287016115bc565b9150509250925092565b5f602082840312156116b4575f5ffd5b5035919050565b5f5f5f5f5f5f5f5f5f5f5f6101608c8e0312156116d6575f5ffd5b8b359a506116e660208d0161152b565b99506116f460408d0161152b565b985060608c0135975060808c0135965060a08c0135955060c08c0135945060e08c013567ffffffffffffffff81111561172b575f5ffd5b6117378e828f016115bc565b9450506101008c013560ff8116811461174e575f5ffd5b9a9d999c50979a969995989497509295919493610120830135935061014090920135919050565b5f60208284031215611785575f5ffd5b6114e48261152b565b60ff60f81b8816815260e060208201525f6117ac60e08301896114eb565b82810360408401526117be81896114eb565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156118135783518352602093840193909201916001016117f5565b50909b9a5050505050505050505050565b5f5f60408385031215611835575f5ffd5b61183e8361152b565b915061184c6020840161152b565b90509250929050565b600181811c9082168061186957607f821691505b60208210810361188757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106445761064461188d565b634e487b7160e01b5f52603260045260245ffd5b808201808211156106445761064461188d565b6001815b6001841115611916578085048111156118fa576118fa61188d565b600184161561190857908102905b60019390931c9280026118df565b935093915050565b5f8261192c57506001610644565b8161193857505f610644565b816001811461194e576002811461195857611974565b6001915050610644565b60ff8411156119695761196961188d565b50506001821b610644565b5060208310610133831016604e8410600b8410161715611997575081810a610644565b6119a35f1984846118db565b805f19048211156119b6576119b661188d565b029392505050565b5f6114e460ff84168361191e565b80820281158282048414176106445761064461188d565b634e487b7160e01b5f52601260045260245ffd5b5f82611a0557611a056119e3565b500490565b5f82611a1857611a186119e3565b500690565b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220911043861ceda4bc3e96d1692a9dd31284aba277a0da9e03092d846d3222bc0064736f6c634300081c0033","opcodes":"PUSH2 0x1C0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x214E CODESIZE SUB DUP1 PUSH2 0x214E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x4149204167656E74205368617265 PUSH1 0x90 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x20A4A0B3B2B73A29B430B9329 PUSH1 0x9D SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x414953 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xCF DUP3 DUP3 PUSH2 0x532 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x100 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109 DUP2 PUSH2 0x215 JUMP JUMPDEST POP PUSH2 0x115 DUP3 PUSH1 0x6 PUSH2 0x266 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x124 DUP2 PUSH1 0x7 PUSH2 0x266 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x1B0 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A0 MSTORE PUSH2 0x160 DUP4 SWAP1 MSTORE PUSH2 0x180 DUP3 SWAP1 MSTORE PUSH2 0x20A DUP7 DUP7 PUSH2 0x298 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x663 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x281 JUMPI PUSH2 0x27A DUP4 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST DUP2 PUSH2 0x28C DUP5 DUP3 PUSH2 0x532 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xF7 JUMP JUMPDEST PUSH2 0x2CC PUSH0 DUP4 DUP4 PUSH2 0x30D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x2FA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x5EC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x305 DUP3 PUSH2 0x621 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3A7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x449 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x46B DUP7 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x481 PUSH1 0x40 DUP8 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x52D JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x50B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x517 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x49A JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x559 DUP5 SLOAD PUSH2 0x4AE JUMP JUMPDEST DUP5 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x591 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x57A JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x52A JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5A0 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x5DD JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x292 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1A67 PUSH2 0x6E7 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3BB ADD MSTORE PUSH2 0x6CA ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x467 ADD MSTORE PUSH2 0x8E0 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x2DC ADD MSTORE PUSH2 0x1028 ADD MSTORE PUSH0 PUSH2 0xD23 ADD MSTORE PUSH0 PUSH2 0xCF1 ADD MSTORE PUSH0 PUSH2 0x1246 ADD MSTORE PUSH0 PUSH2 0x121E ADD MSTORE PUSH0 PUSH2 0x1179 ADD MSTORE PUSH0 PUSH2 0x11A3 ADD MSTORE PUSH0 PUSH2 0x11CD ADD MSTORE PUSH2 0x1A67 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E799858 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xD96F7335 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD96F7335 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xF4D6F498 EQ PUSH2 0x58D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xB9BE6303 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xC17C7AEE EQ PUSH2 0x4EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x88D9F5EA EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x8F620487 EQ PUSH2 0x456 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7E799858 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x833B9499 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8406C079 EQ PUSH2 0x3AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5F0A0D6B GT PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x74244BC9 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x75405D0D EQ PUSH2 0x35B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5F0A0D6B EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x685E089B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6A443F67 EQ PUSH2 0x2CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x4DDC43B5 EQ PUSH2 0x284 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x4A79C97 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x12C DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x226 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH10 0xA968163F0A57B400001 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x80C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH32 0xFC9BF37D032F38F48A078C07741A8112C5D73160D7BEAFC368F9603EEE9B9118 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH9 0x56BC75E2D630FFFFF DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x544 CALLDATASIZE PUSH1 0x4 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DC SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x627 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x627 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x63E DUP2 DUP6 DUP6 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x657 DUP6 DUP3 DUP6 PUSH2 0x979 JUMP JUMPDEST PUSH2 0x662 DUP6 DUP6 DUP6 PUSH2 0x9F5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x67A DUP4 CALLER DUP5 DUP6 DUP6 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x233E08777131763A85257B15EAFC9F96EF08F259653D9944301FF924B3917CF5 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x6B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH4 0x538FB163 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73A PUSH32 0xFC9BF37D032F38F48A078C07741A8112C5D73160D7BEAFC368F9603EEE9B9118 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP11 DUP11 DUP11 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x758 DUP12 DUP12 DUP11 PUSH2 0x752 PUSH8 0x4563918244F40000 DUP3 PUSH2 0x18A1 JUMP JUMPDEST DUP9 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x76A CALLER PUSH8 0x4563918244F40000 PUSH2 0xC34 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA18CCDDBAFA2ABD18F548774A92A0C9F76DF5771EA5A927074CF0DCE0265E6D0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x7C8 PUSH0 PUSH2 0xC99 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 PUSH0 PUSH0 PUSH1 0x60 PUSH2 0x7DB PUSH2 0xCEA JUMP JUMPDEST PUSH2 0x7E3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x1855 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x63E DUP2 DUP6 DUP6 PUSH2 0x9F5 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x834 DUP5 PUSH2 0xD49 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x18B4 JUMP JUMPDEST ADD SLOAD AND ISZERO ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x861 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x898 DUP2 PUSH2 0xC99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x607023BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x8 SLOAD DUP1 ISZERO PUSH2 0x93C JUMPI TIMESTAMP PUSH32 0x0 LT PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1C4065D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SSTORE PUSH2 0x93C PUSH2 0x936 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6891BD2534E5C59DC10743E5A7B2469CB5DCF61CFBA85F70EFDDECB2B4553A2 SWAP1 PUSH0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x974 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x9EF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x9EF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD9B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x974 DUP4 DUP4 DUP4 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xA5B DUP6 PUSH2 0x828 JUMP JUMPDEST ISZERO PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7999731 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA82 DUP6 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0xA8E DUP6 DUP6 DUP6 DUP5 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BA75B25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST GT PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD08480ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D630FFFFF DUP4 GT DUP1 ISZERO PUSH2 0xAFA JUMPI POP PUSH10 0xA968163F0A57B400001 DUP4 LT JUMPDEST PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB24 PUSH1 0x12 PUSH1 0xA PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xB36 PUSH8 0x16345785D8A0000 DUP7 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB75 DUP6 DUP5 PUSH2 0xC34 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xBE3 SWAP1 PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBF2 DUP3 DUP7 DUP7 DUP7 PUSH2 0x1083 JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0xC68 PUSH0 DUP4 DUP4 PUSH2 0xE6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD17 PUSH32 0x0 PUSH1 0x6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD17 PUSH32 0x0 PUSH1 0x7 PUSH2 0x10AF JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x12C DUP4 LT PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4D175DB1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH0 PUSH2 0xD7A DUP3 DUP7 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD8A PUSH1 0xFF DUP5 AND DUP8 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 SWAP7 PUSH1 0x1 SWAP1 SWAP3 SHL SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9EF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE5F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE97 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF07 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF23 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF86 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xF9E DUP4 PUSH2 0xD49 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 LT PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0x18B4 JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x104D DUP4 PUSH32 0x0 DUP4 PUSH2 0x1158 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x644 PUSH2 0x1063 PUSH2 0x116D JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1093 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x135E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x10C9 JUMPI PUSH2 0x10C2 DUP4 PUSH2 0x1416 JUMP JUMPDEST SWAP1 POP PUSH2 0x644 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x10D5 SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1101 SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x114C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1123 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x114C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x112F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x644 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1164 DUP6 DUP5 PUSH2 0x1453 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x11C5 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11EF JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD17 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x12CF JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1320 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x134B JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1354 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1371 PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0x137A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138E PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C0 JUMPI PUSH2 0x13C0 PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13F5 JUMPI PUSH2 0x13F5 PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1422 DUP4 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x148D JUMPI PUSH2 0x1483 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1476 JUMPI PUSH2 0x1476 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14BC JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1457 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x14D6 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x14E4 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x14E4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1541 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1557 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1560 DUP4 PUSH2 0x152B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1580 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1589 DUP5 PUSH2 0x152B JUMP JUMPDEST SWAP3 POP PUSH2 0x1597 PUSH1 0x20 DUP6 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E5 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1612 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0x162F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x164E JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1636 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x168E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x169A DUP7 DUP3 DUP8 ADD PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x16D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP12 CALLDATALOAD SWAP11 POP PUSH2 0x16E6 PUSH1 0x20 DUP14 ADD PUSH2 0x152B JUMP JUMPDEST SWAP10 POP PUSH2 0x16F4 PUSH1 0x40 DUP14 ADD PUSH2 0x152B JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD SWAP5 POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1737 DUP15 DUP3 DUP16 ADD PUSH2 0x15BC JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 DUP13 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x174E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP11 SWAP14 SWAP10 SWAP13 POP SWAP8 SWAP11 SWAP7 SWAP10 SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP2 SWAP5 SWAP4 PUSH2 0x120 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH2 0x140 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14E4 DUP3 PUSH2 0x152B JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x17AC PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x14EB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x17BE DUP2 DUP10 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1813 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17F5 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1835 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x183E DUP4 PUSH2 0x152B JUMP JUMPDEST SWAP2 POP PUSH2 0x184C PUSH1 0x20 DUP5 ADD PUSH2 0x152B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1869 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1887 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x188D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1916 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18FA PUSH2 0x188D JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1908 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x18DF JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x192C JUMPI POP PUSH1 0x1 PUSH2 0x644 JUMP JUMPDEST DUP2 PUSH2 0x1938 JUMPI POP PUSH0 PUSH2 0x644 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x194E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1958 JUMPI PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x644 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1969 PUSH2 0x188D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x644 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1997 JUMPI POP DUP2 DUP2 EXP PUSH2 0x644 JUMP JUMPDEST PUSH2 0x19A3 PUSH0 NOT DUP5 DUP5 PUSH2 0x18DB JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x19B6 JUMPI PUSH2 0x19B6 PUSH2 0x188D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E4 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x191E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x188D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1A05 JUMPI PUSH2 0x1A05 PUSH2 0x19E3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1A18 JUMPI PUSH2 0x1A18 PUSH2 0x19E3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 LT NUMBER DUP7 SHR 0xED LOG4 0xBC RETURNDATACOPY SWAP7 0xD1 PUSH10 0x2A9DD31284ABA277A0DA SWAP15 SUB MULMOD 0x2D DUP5 PUSH14 0x3222BC0064736F6C634300081C00 CALLER ","sourceMap":"496:7143:19:-:0;;;2224:552;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3428:431:12;;;;;;;;;;;;;-1:-1:-1;;;3428:431:12;;;;;;;;;;;;;;;;-1:-1:-1;;;3428:431:12;;;2496:12:19;1582:113:3;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3564:51:20;3537:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3501:45:12;:4;3532:13;3501:30;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;3885:25:20;3926:18;;;3919:34;;;;3969:18;;;3962:34;4355:13:12;4012:18:20;;;4005:34;4378:4:12;4055:19:20;;;4048:61;4268:7:12;;3857:19:20;;4304:80:12;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:12;3825:27;;2426:12:19;-1:-1:-1;;;;;2157:20:19;;2149:47;;;;-1:-1:-1;;;2149:47:19;;;;;;;;;;;;2565:13:::4;:30:::0;;;-1:-1:-1;;;;;2606:18:19;::::4;;::::0;2635:43:::4;::::0;;;2689:32:::4;::::0;;;2734:34:::4;2740:12:::0;2581:14;2734:5:::4;:34::i;:::-;2224:552:::0;;;;;;496:7143;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:8:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:8;;-1:-1:-1;3006:215:8;2887:340;;;;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;3564:51:20;3537:18;;7553:32:3;3418:203:20;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;1708:286:8:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:8;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:8:o;5989:1107:3:-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;5292:32:20;;6367:50:3;;;5274:51:20;5341:18;;;5334:34;;;5384:18;;;5377:34;;;5247:18;;6367:50:3;5072:345:20;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;5568::20;;5556:2;5541:18;;5422:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:177:20:-;93:13;;-1:-1:-1;;;;;135:31:20;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:576::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;529:2;514:18;;508:25;417:50;;-1:-1:-1;508:25:20;-1:-1:-1;576:49:20;621:2;606:18;;576:49;:::i;:::-;665:2;650:18;;644:25;735:3;720:19;;;714:26;196:576;;;;-1:-1:-1;566:59:20;644:25;714:26;196:576;-1:-1:-1;;;196:576:20:o;777:127::-;838:10;833:3;829:20;826:1;819:31;869:4;866:1;859:15;893:4;890:1;883:15;909:380;988:1;984:12;;;;1031;;;1052:61;;1106:4;1098:6;1094:17;1084:27;;1052:61;1159:2;1151:6;1148:14;1128:18;1125:38;1122:161;;1205:10;1200:3;1196:20;1193:1;1186:31;1240:4;1237:1;1230:15;1268:4;1265:1;1258:15;1122:161;;909:380;;;:::o;1420:518::-;1522:2;1517:3;1514:11;1511:421;;;1558:5;1555:1;1548:16;1602:4;1599:1;1589:18;1672:2;1660:10;1656:19;1653:1;1649:27;1643:4;1639:38;1708:4;1696:10;1693:20;1690:47;;;-1:-1:-1;1731:4:20;1690:47;1786:2;1781:3;1777:12;1774:1;1770:20;1764:4;1760:31;1750:41;;1841:81;1859:2;1852:5;1849:13;1841:81;;;1918:1;1904:16;;1885:1;1874:13;1841:81;;;1845:3;;1511:421;1420:518;;;:::o;2114:1299::-;2234:10;;-1:-1:-1;;;;;2256:30:20;;2253:56;;;2289:18;;:::i;:::-;2318:97;2408:6;2368:38;2400:4;2394:11;2368:38;:::i;:::-;2362:4;2318:97;:::i;:::-;2464:4;2495:2;2484:14;;2512:1;2507:649;;;;3200:1;3217:6;3214:89;;;-1:-1:-1;3269:19:20;;;3263:26;3214:89;-1:-1:-1;;2071:1:20;2067:11;;;2063:24;2059:29;2049:40;2095:1;2091:11;;;2046:57;3316:81;;2477:930;;2507:649;1367:1;1360:14;;;1404:4;1391:18;;-1:-1:-1;;2543:20:20;;;2661:222;2675:7;2672:1;2669:14;2661:222;;;2757:19;;;2751:26;2736:42;;2864:4;2849:20;;;;2817:1;2805:14;;;;2691:12;2661:222;;;2665:3;2911:6;2902:7;2899:19;2896:201;;;2972:19;;;2966:26;-1:-1:-1;;3055:1:20;3051:14;;;3067:3;3047:24;3043:37;3039:42;3024:58;3009:74;;2896:201;-1:-1:-1;;;;3143:1:20;3127:14;;;3123:22;3110:36;;-1:-1:-1;2114:1299:20:o;4120:418::-;4269:2;4258:9;4251:21;4232:4;4301:6;4295:13;4344:6;4339:2;4328:9;4324:18;4317:34;4403:6;4398:2;4390:6;4386:15;4381:2;4370:9;4366:18;4360:50;4459:1;4454:2;4445:6;4434:9;4430:22;4426:31;4419:42;4529:2;4522;4518:7;4513:2;4505:6;4501:15;4497:29;4486:9;4482:45;4478:54;4470:62;;;4120:418;;;;:::o;4543:297::-;4661:12;;4708:4;4697:16;;;4691:23;;4661:12;4726:16;;4723:111;;;-1:-1:-1;;4800:4:20;4796:17;;;;4793:1;4789:25;4785:38;4774:50;;4543:297;-1:-1:-1;4543:297:20:o;4845:222::-;4910:9;;;4931:10;;;4928:133;;;4983:10;4978:3;4974:20;4971:1;4964:31;5018:4;5015:1;5008:15;5046:4;5043:1;5036:15;5422:177;496:7143:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DELEGATE_PURCHASE_TYPE_HASH_8114":{"entryPoint":null,"id":8114,"parameterSlots":0,"returnSlots":0},"@MAX_BUY_AMOUNT_8132":{"entryPoint":null,"id":8132,"parameterSlots":0,"returnSlots":0},"@MIN_BUY_AMOUNT_8123":{"entryPoint":null,"id":8123,"parameterSlots":0,"returnSlots":0},"@PRICE_PER_TOKEN_8135":{"entryPoint":null,"id":8135,"parameterSlots":0,"returnSlots":0},"@RELAYER_REWARD_8142":{"entryPoint":null,"id":8142,"parameterSlots":0,"returnSlots":0},"@TOTAL_PARTICIPANTS_8145":{"entryPoint":null,"id":8145,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3315":{"entryPoint":3306,"id":3315,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3327":{"entryPoint":3356,"id":3327,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":2407,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":3483,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3245":{"entryPoint":null,"id":3245,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":3180,"id":84,"parameterSlots":0,"returnSlots":0},"@_createClaimBitMaskData_8380":{"entryPoint":3401,"id":8380,"parameterSlots":1,"returnSlots":2},"@_domainSeparatorV4_3224":{"entryPoint":4461,"id":3224,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3261":{"entryPoint":4183,"id":3261,"parameterSlots":1,"returnSlots":1},"@_mint_664":{"entryPoint":3124,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_940":{"entryPoint":null,"id":940,"parameterSlots":0,"returnSlots":1},"@_purchase_8493":{"entryPoint":2642,"id":8493,"parameterSlots":5,"returnSlots":0},"@_spendAllowance_823":{"entryPoint":2425,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_3100":{"entryPoint":4958,"id":3100,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3225,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":2549,"id":554,"parameterSlots":3,"returnSlots":0},"@_updateClaimStatus_8400":{"entryPoint":3987,"id":8400,"parameterSlots":1,"returnSlots":0},"@_update_631":{"entryPoint":3693,"id":631,"parameterSlots":3,"returnSlots":0},"@_validateParticipant_8336":{"entryPoint":4035,"id":8336,"parameterSlots":4,"returnSlots":1},"@_validateSignature_8297":{"entryPoint":2941,"id":8297,"parameterSlots":10,"returnSlots":0},"@allowance_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1585,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":null,"id":410,"parameterSlots":1,"returnSlots":1},"@byteLength_1128":{"entryPoint":5269,"id":1128,"parameterSlots":1,"returnSlots":1},"@commutativeKeccak256_3355":{"entryPoint":5308,"id":3355,"parameterSlots":2,"returnSlots":1},"@decimals_388":{"entryPoint":null,"id":388,"parameterSlots":0,"returnSlots":1},"@delegatePurchase_8611":{"entryPoint":1727,"id":8611,"parameterSlots":11,"returnSlots":0},"@efficientKeccak256_3367":{"entryPoint":null,"id":3367,"parameterSlots":2,"returnSlots":1},"@eip712Domain_3303":{"entryPoint":1994,"id":3303,"parameterSlots":0,"returnSlots":7},"@expirationDate_8149":{"entryPoint":null,"id":8149,"parameterSlots":0,"returnSlots":0},"@finalizeFundingRound_8660":{"entryPoint":2203,"id":8660,"parameterSlots":0,"returnSlots":0},"@fundingAmount_8153":{"entryPoint":null,"id":8153,"parameterSlots":0,"returnSlots":0},"@hasBeenFinalized_8155":{"entryPoint":null,"id":8155,"parameterSlots":0,"returnSlots":0},"@hasClaimedTokens_8518":{"entryPoint":2088,"id":8518,"parameterSlots":1,"returnSlots":1},"@name_370":{"entryPoint":1441,"id":370,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@processProof_3438":{"entryPoint":5203,"id":3438,"parameterSlots":2,"returnSlots":1},"@purchase_8543":{"entryPoint":1645,"id":8543,"parameterSlots":3,"returnSlots":0},"@recover_3051":{"entryPoint":4227,"id":3051,"parameterSlots":4,"returnSlots":1},"@relayer_8151":{"entryPoint":null,"id":8151,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1975,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_379":{"entryPoint":2060,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1195":{"entryPoint":4271,"id":1195,"parameterSlots":2,"returnSlots":1},"@toString_1096":{"entryPoint":5142,"id":1096,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4526":{"entryPoint":null,"id":4526,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":null,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1610,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2137,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":2075,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_3015":{"entryPoint":4758,"id":3015,"parameterSlots":4,"returnSlots":3},"@verify_3397":{"entryPoint":4440,"id":3397,"parameterSlots":3,"returnSlots":1},"@whitelistClaimTracker_8159":{"entryPoint":1705,"id":8159,"parameterSlots":0,"returnSlots":0},"@whitelisteParticipantsHash_8147":{"entryPoint":null,"id":8147,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_bytes32_dyn":{"entryPoint":5564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6180,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5486,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5446,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":5796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_memory_ptrt_uint8t_bytes32t_bytes32":{"entryPoint":5819,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":5720,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_string":{"entryPoint":5355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6030,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6344,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6647,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":6363,"id":null,"parameterSlots":3,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":6590,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":6430,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6604,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6305,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6229,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":6666,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6285,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6627,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6685,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6324,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5544,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12934:20","nodeType":"YulBlock","src":"0:12934:20","statements":[{"nativeSrc":"6:3:20","nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nativeSrc":"115:76:20","nodeType":"YulBlock","src":"115:76:20","statements":[{"nativeSrc":"125:26:20","nodeType":"YulAssignment","src":"125:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:20","nodeType":"YulIdentifier","src":"137:9:20"},{"kind":"number","nativeSrc":"148:2:20","nodeType":"YulLiteral","src":"148:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:20","nodeType":"YulIdentifier","src":"133:3:20"},"nativeSrc":"133:18:20","nodeType":"YulFunctionCall","src":"133:18:20"},"variableNames":[{"name":"tail","nativeSrc":"125:4:20","nodeType":"YulIdentifier","src":"125:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:20","nodeType":"YulIdentifier","src":"167:9:20"},{"name":"value0","nativeSrc":"178:6:20","nodeType":"YulIdentifier","src":"178:6:20"}],"functionName":{"name":"mstore","nativeSrc":"160:6:20","nodeType":"YulIdentifier","src":"160:6:20"},"nativeSrc":"160:25:20","nodeType":"YulFunctionCall","src":"160:25:20"},"nativeSrc":"160:25:20","nodeType":"YulExpressionStatement","src":"160:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14:177:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:20","nodeType":"YulTypedName","src":"84:9:20","type":""},{"name":"value0","nativeSrc":"95:6:20","nodeType":"YulTypedName","src":"95:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:20","nodeType":"YulTypedName","src":"106:4:20","type":""}],"src":"14:177:20"},{"body":{"nativeSrc":"246:239:20","nodeType":"YulBlock","src":"246:239:20","statements":[{"nativeSrc":"256:26:20","nodeType":"YulVariableDeclaration","src":"256:26:20","value":{"arguments":[{"name":"value","nativeSrc":"276:5:20","nodeType":"YulIdentifier","src":"276:5:20"}],"functionName":{"name":"mload","nativeSrc":"270:5:20","nodeType":"YulIdentifier","src":"270:5:20"},"nativeSrc":"270:12:20","nodeType":"YulFunctionCall","src":"270:12:20"},"variables":[{"name":"length","nativeSrc":"260:6:20","nodeType":"YulTypedName","src":"260:6:20","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"298:3:20","nodeType":"YulIdentifier","src":"298:3:20"},{"name":"length","nativeSrc":"303:6:20","nodeType":"YulIdentifier","src":"303:6:20"}],"functionName":{"name":"mstore","nativeSrc":"291:6:20","nodeType":"YulIdentifier","src":"291:6:20"},"nativeSrc":"291:19:20","nodeType":"YulFunctionCall","src":"291:19:20"},"nativeSrc":"291:19:20","nodeType":"YulExpressionStatement","src":"291:19:20"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"329:3:20","nodeType":"YulIdentifier","src":"329:3:20"},{"kind":"number","nativeSrc":"334:4:20","nodeType":"YulLiteral","src":"334:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"325:3:20","nodeType":"YulIdentifier","src":"325:3:20"},"nativeSrc":"325:14:20","nodeType":"YulFunctionCall","src":"325:14:20"},{"arguments":[{"name":"value","nativeSrc":"345:5:20","nodeType":"YulIdentifier","src":"345:5:20"},{"kind":"number","nativeSrc":"352:4:20","nodeType":"YulLiteral","src":"352:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"341:3:20","nodeType":"YulIdentifier","src":"341:3:20"},"nativeSrc":"341:16:20","nodeType":"YulFunctionCall","src":"341:16:20"},{"name":"length","nativeSrc":"359:6:20","nodeType":"YulIdentifier","src":"359:6:20"}],"functionName":{"name":"mcopy","nativeSrc":"319:5:20","nodeType":"YulIdentifier","src":"319:5:20"},"nativeSrc":"319:47:20","nodeType":"YulFunctionCall","src":"319:47:20"},"nativeSrc":"319:47:20","nodeType":"YulExpressionStatement","src":"319:47:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"390:3:20","nodeType":"YulIdentifier","src":"390:3:20"},{"name":"length","nativeSrc":"395:6:20","nodeType":"YulIdentifier","src":"395:6:20"}],"functionName":{"name":"add","nativeSrc":"386:3:20","nodeType":"YulIdentifier","src":"386:3:20"},"nativeSrc":"386:16:20","nodeType":"YulFunctionCall","src":"386:16:20"},{"kind":"number","nativeSrc":"404:4:20","nodeType":"YulLiteral","src":"404:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"382:3:20","nodeType":"YulIdentifier","src":"382:3:20"},"nativeSrc":"382:27:20","nodeType":"YulFunctionCall","src":"382:27:20"},{"kind":"number","nativeSrc":"411:1:20","nodeType":"YulLiteral","src":"411:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"375:6:20","nodeType":"YulIdentifier","src":"375:6:20"},"nativeSrc":"375:38:20","nodeType":"YulFunctionCall","src":"375:38:20"},"nativeSrc":"375:38:20","nodeType":"YulExpressionStatement","src":"375:38:20"},{"nativeSrc":"422:57:20","nodeType":"YulAssignment","src":"422:57:20","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"437:3:20","nodeType":"YulIdentifier","src":"437:3:20"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"450:6:20","nodeType":"YulIdentifier","src":"450:6:20"},{"kind":"number","nativeSrc":"458:2:20","nodeType":"YulLiteral","src":"458:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"446:3:20","nodeType":"YulIdentifier","src":"446:3:20"},"nativeSrc":"446:15:20","nodeType":"YulFunctionCall","src":"446:15:20"},{"arguments":[{"kind":"number","nativeSrc":"467:2:20","nodeType":"YulLiteral","src":"467:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"463:3:20","nodeType":"YulIdentifier","src":"463:3:20"},"nativeSrc":"463:7:20","nodeType":"YulFunctionCall","src":"463:7:20"}],"functionName":{"name":"and","nativeSrc":"442:3:20","nodeType":"YulIdentifier","src":"442:3:20"},"nativeSrc":"442:29:20","nodeType":"YulFunctionCall","src":"442:29:20"}],"functionName":{"name":"add","nativeSrc":"433:3:20","nodeType":"YulIdentifier","src":"433:3:20"},"nativeSrc":"433:39:20","nodeType":"YulFunctionCall","src":"433:39:20"},{"kind":"number","nativeSrc":"474:4:20","nodeType":"YulLiteral","src":"474:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"429:3:20","nodeType":"YulIdentifier","src":"429:3:20"},"nativeSrc":"429:50:20","nodeType":"YulFunctionCall","src":"429:50:20"},"variableNames":[{"name":"end","nativeSrc":"422:3:20","nodeType":"YulIdentifier","src":"422:3:20"}]}]},"name":"abi_encode_string","nativeSrc":"196:289:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"223:5:20","nodeType":"YulTypedName","src":"223:5:20","type":""},{"name":"pos","nativeSrc":"230:3:20","nodeType":"YulTypedName","src":"230:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"238:3:20","nodeType":"YulTypedName","src":"238:3:20","type":""}],"src":"196:289:20"},{"body":{"nativeSrc":"611:99:20","nodeType":"YulBlock","src":"611:99:20","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"628:9:20","nodeType":"YulIdentifier","src":"628:9:20"},{"kind":"number","nativeSrc":"639:2:20","nodeType":"YulLiteral","src":"639:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"621:6:20","nodeType":"YulIdentifier","src":"621:6:20"},"nativeSrc":"621:21:20","nodeType":"YulFunctionCall","src":"621:21:20"},"nativeSrc":"621:21:20","nodeType":"YulExpressionStatement","src":"621:21:20"},{"nativeSrc":"651:53:20","nodeType":"YulAssignment","src":"651:53:20","value":{"arguments":[{"name":"value0","nativeSrc":"677:6:20","nodeType":"YulIdentifier","src":"677:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"689:9:20","nodeType":"YulIdentifier","src":"689:9:20"},{"kind":"number","nativeSrc":"700:2:20","nodeType":"YulLiteral","src":"700:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"685:3:20","nodeType":"YulIdentifier","src":"685:3:20"},"nativeSrc":"685:18:20","nodeType":"YulFunctionCall","src":"685:18:20"}],"functionName":{"name":"abi_encode_string","nativeSrc":"659:17:20","nodeType":"YulIdentifier","src":"659:17:20"},"nativeSrc":"659:45:20","nodeType":"YulFunctionCall","src":"659:45:20"},"variableNames":[{"name":"tail","nativeSrc":"651:4:20","nodeType":"YulIdentifier","src":"651:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"490:220:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"580:9:20","nodeType":"YulTypedName","src":"580:9:20","type":""},{"name":"value0","nativeSrc":"591:6:20","nodeType":"YulTypedName","src":"591:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"602:4:20","nodeType":"YulTypedName","src":"602:4:20","type":""}],"src":"490:220:20"},{"body":{"nativeSrc":"764:124:20","nodeType":"YulBlock","src":"764:124:20","statements":[{"nativeSrc":"774:29:20","nodeType":"YulAssignment","src":"774:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"796:6:20","nodeType":"YulIdentifier","src":"796:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"783:12:20","nodeType":"YulIdentifier","src":"783:12:20"},"nativeSrc":"783:20:20","nodeType":"YulFunctionCall","src":"783:20:20"},"variableNames":[{"name":"value","nativeSrc":"774:5:20","nodeType":"YulIdentifier","src":"774:5:20"}]},{"body":{"nativeSrc":"866:16:20","nodeType":"YulBlock","src":"866:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"875:1:20","nodeType":"YulLiteral","src":"875:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"878:1:20","nodeType":"YulLiteral","src":"878:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"868:6:20","nodeType":"YulIdentifier","src":"868:6:20"},"nativeSrc":"868:12:20","nodeType":"YulFunctionCall","src":"868:12:20"},"nativeSrc":"868:12:20","nodeType":"YulExpressionStatement","src":"868:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"825:5:20","nodeType":"YulIdentifier","src":"825:5:20"},{"arguments":[{"name":"value","nativeSrc":"836:5:20","nodeType":"YulIdentifier","src":"836:5:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"851:3:20","nodeType":"YulLiteral","src":"851:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"856:1:20","nodeType":"YulLiteral","src":"856:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"847:3:20","nodeType":"YulIdentifier","src":"847:3:20"},"nativeSrc":"847:11:20","nodeType":"YulFunctionCall","src":"847:11:20"},{"kind":"number","nativeSrc":"860:1:20","nodeType":"YulLiteral","src":"860:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"843:3:20","nodeType":"YulIdentifier","src":"843:3:20"},"nativeSrc":"843:19:20","nodeType":"YulFunctionCall","src":"843:19:20"}],"functionName":{"name":"and","nativeSrc":"832:3:20","nodeType":"YulIdentifier","src":"832:3:20"},"nativeSrc":"832:31:20","nodeType":"YulFunctionCall","src":"832:31:20"}],"functionName":{"name":"eq","nativeSrc":"822:2:20","nodeType":"YulIdentifier","src":"822:2:20"},"nativeSrc":"822:42:20","nodeType":"YulFunctionCall","src":"822:42:20"}],"functionName":{"name":"iszero","nativeSrc":"815:6:20","nodeType":"YulIdentifier","src":"815:6:20"},"nativeSrc":"815:50:20","nodeType":"YulFunctionCall","src":"815:50:20"},"nativeSrc":"812:70:20","nodeType":"YulIf","src":"812:70:20"}]},"name":"abi_decode_address","nativeSrc":"715:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"743:6:20","nodeType":"YulTypedName","src":"743:6:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"754:5:20","nodeType":"YulTypedName","src":"754:5:20","type":""}],"src":"715:173:20"},{"body":{"nativeSrc":"980:213:20","nodeType":"YulBlock","src":"980:213:20","statements":[{"body":{"nativeSrc":"1026:16:20","nodeType":"YulBlock","src":"1026:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1035:1:20","nodeType":"YulLiteral","src":"1035:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1038:1:20","nodeType":"YulLiteral","src":"1038:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1028:6:20","nodeType":"YulIdentifier","src":"1028:6:20"},"nativeSrc":"1028:12:20","nodeType":"YulFunctionCall","src":"1028:12:20"},"nativeSrc":"1028:12:20","nodeType":"YulExpressionStatement","src":"1028:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1001:7:20","nodeType":"YulIdentifier","src":"1001:7:20"},{"name":"headStart","nativeSrc":"1010:9:20","nodeType":"YulIdentifier","src":"1010:9:20"}],"functionName":{"name":"sub","nativeSrc":"997:3:20","nodeType":"YulIdentifier","src":"997:3:20"},"nativeSrc":"997:23:20","nodeType":"YulFunctionCall","src":"997:23:20"},{"kind":"number","nativeSrc":"1022:2:20","nodeType":"YulLiteral","src":"1022:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"993:3:20","nodeType":"YulIdentifier","src":"993:3:20"},"nativeSrc":"993:32:20","nodeType":"YulFunctionCall","src":"993:32:20"},"nativeSrc":"990:52:20","nodeType":"YulIf","src":"990:52:20"},{"nativeSrc":"1051:39:20","nodeType":"YulAssignment","src":"1051:39:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1080:9:20","nodeType":"YulIdentifier","src":"1080:9:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1061:18:20","nodeType":"YulIdentifier","src":"1061:18:20"},"nativeSrc":"1061:29:20","nodeType":"YulFunctionCall","src":"1061:29:20"},"variableNames":[{"name":"value0","nativeSrc":"1051:6:20","nodeType":"YulIdentifier","src":"1051:6:20"}]},{"nativeSrc":"1099:14:20","nodeType":"YulVariableDeclaration","src":"1099:14:20","value":{"kind":"number","nativeSrc":"1112:1:20","nodeType":"YulLiteral","src":"1112:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1103:5:20","nodeType":"YulTypedName","src":"1103:5:20","type":""}]},{"nativeSrc":"1122:41:20","nodeType":"YulAssignment","src":"1122:41:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1148:9:20","nodeType":"YulIdentifier","src":"1148:9:20"},{"kind":"number","nativeSrc":"1159:2:20","nodeType":"YulLiteral","src":"1159:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1144:3:20","nodeType":"YulIdentifier","src":"1144:3:20"},"nativeSrc":"1144:18:20","nodeType":"YulFunctionCall","src":"1144:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"1131:12:20","nodeType":"YulIdentifier","src":"1131:12:20"},"nativeSrc":"1131:32:20","nodeType":"YulFunctionCall","src":"1131:32:20"},"variableNames":[{"name":"value","nativeSrc":"1122:5:20","nodeType":"YulIdentifier","src":"1122:5:20"}]},{"nativeSrc":"1172:15:20","nodeType":"YulAssignment","src":"1172:15:20","value":{"name":"value","nativeSrc":"1182:5:20","nodeType":"YulIdentifier","src":"1182:5:20"},"variableNames":[{"name":"value1","nativeSrc":"1172:6:20","nodeType":"YulIdentifier","src":"1172:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"893:300:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"938:9:20","nodeType":"YulTypedName","src":"938:9:20","type":""},{"name":"dataEnd","nativeSrc":"949:7:20","nodeType":"YulTypedName","src":"949:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"961:6:20","nodeType":"YulTypedName","src":"961:6:20","type":""},{"name":"value1","nativeSrc":"969:6:20","nodeType":"YulTypedName","src":"969:6:20","type":""}],"src":"893:300:20"},{"body":{"nativeSrc":"1293:92:20","nodeType":"YulBlock","src":"1293:92:20","statements":[{"nativeSrc":"1303:26:20","nodeType":"YulAssignment","src":"1303:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1315:9:20","nodeType":"YulIdentifier","src":"1315:9:20"},{"kind":"number","nativeSrc":"1326:2:20","nodeType":"YulLiteral","src":"1326:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1311:3:20","nodeType":"YulIdentifier","src":"1311:3:20"},"nativeSrc":"1311:18:20","nodeType":"YulFunctionCall","src":"1311:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1303:4:20","nodeType":"YulIdentifier","src":"1303:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1345:9:20","nodeType":"YulIdentifier","src":"1345:9:20"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1370:6:20","nodeType":"YulIdentifier","src":"1370:6:20"}],"functionName":{"name":"iszero","nativeSrc":"1363:6:20","nodeType":"YulIdentifier","src":"1363:6:20"},"nativeSrc":"1363:14:20","nodeType":"YulFunctionCall","src":"1363:14:20"}],"functionName":{"name":"iszero","nativeSrc":"1356:6:20","nodeType":"YulIdentifier","src":"1356:6:20"},"nativeSrc":"1356:22:20","nodeType":"YulFunctionCall","src":"1356:22:20"}],"functionName":{"name":"mstore","nativeSrc":"1338:6:20","nodeType":"YulIdentifier","src":"1338:6:20"},"nativeSrc":"1338:41:20","nodeType":"YulFunctionCall","src":"1338:41:20"},"nativeSrc":"1338:41:20","nodeType":"YulExpressionStatement","src":"1338:41:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1198:187:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1262:9:20","nodeType":"YulTypedName","src":"1262:9:20","type":""},{"name":"value0","nativeSrc":"1273:6:20","nodeType":"YulTypedName","src":"1273:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1284:4:20","nodeType":"YulTypedName","src":"1284:4:20","type":""}],"src":"1198:187:20"},{"body":{"nativeSrc":"1494:270:20","nodeType":"YulBlock","src":"1494:270:20","statements":[{"body":{"nativeSrc":"1540:16:20","nodeType":"YulBlock","src":"1540:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1549:1:20","nodeType":"YulLiteral","src":"1549:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1552:1:20","nodeType":"YulLiteral","src":"1552:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1542:6:20","nodeType":"YulIdentifier","src":"1542:6:20"},"nativeSrc":"1542:12:20","nodeType":"YulFunctionCall","src":"1542:12:20"},"nativeSrc":"1542:12:20","nodeType":"YulExpressionStatement","src":"1542:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1515:7:20","nodeType":"YulIdentifier","src":"1515:7:20"},{"name":"headStart","nativeSrc":"1524:9:20","nodeType":"YulIdentifier","src":"1524:9:20"}],"functionName":{"name":"sub","nativeSrc":"1511:3:20","nodeType":"YulIdentifier","src":"1511:3:20"},"nativeSrc":"1511:23:20","nodeType":"YulFunctionCall","src":"1511:23:20"},{"kind":"number","nativeSrc":"1536:2:20","nodeType":"YulLiteral","src":"1536:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1507:3:20","nodeType":"YulIdentifier","src":"1507:3:20"},"nativeSrc":"1507:32:20","nodeType":"YulFunctionCall","src":"1507:32:20"},"nativeSrc":"1504:52:20","nodeType":"YulIf","src":"1504:52:20"},{"nativeSrc":"1565:39:20","nodeType":"YulAssignment","src":"1565:39:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1594:9:20","nodeType":"YulIdentifier","src":"1594:9:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1575:18:20","nodeType":"YulIdentifier","src":"1575:18:20"},"nativeSrc":"1575:29:20","nodeType":"YulFunctionCall","src":"1575:29:20"},"variableNames":[{"name":"value0","nativeSrc":"1565:6:20","nodeType":"YulIdentifier","src":"1565:6:20"}]},{"nativeSrc":"1613:48:20","nodeType":"YulAssignment","src":"1613:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1646:9:20","nodeType":"YulIdentifier","src":"1646:9:20"},{"kind":"number","nativeSrc":"1657:2:20","nodeType":"YulLiteral","src":"1657:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1642:3:20","nodeType":"YulIdentifier","src":"1642:3:20"},"nativeSrc":"1642:18:20","nodeType":"YulFunctionCall","src":"1642:18:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1623:18:20","nodeType":"YulIdentifier","src":"1623:18:20"},"nativeSrc":"1623:38:20","nodeType":"YulFunctionCall","src":"1623:38:20"},"variableNames":[{"name":"value1","nativeSrc":"1613:6:20","nodeType":"YulIdentifier","src":"1613:6:20"}]},{"nativeSrc":"1670:14:20","nodeType":"YulVariableDeclaration","src":"1670:14:20","value":{"kind":"number","nativeSrc":"1683:1:20","nodeType":"YulLiteral","src":"1683:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1674:5:20","nodeType":"YulTypedName","src":"1674:5:20","type":""}]},{"nativeSrc":"1693:41:20","nodeType":"YulAssignment","src":"1693:41:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1719:9:20","nodeType":"YulIdentifier","src":"1719:9:20"},{"kind":"number","nativeSrc":"1730:2:20","nodeType":"YulLiteral","src":"1730:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1715:3:20","nodeType":"YulIdentifier","src":"1715:3:20"},"nativeSrc":"1715:18:20","nodeType":"YulFunctionCall","src":"1715:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"1702:12:20","nodeType":"YulIdentifier","src":"1702:12:20"},"nativeSrc":"1702:32:20","nodeType":"YulFunctionCall","src":"1702:32:20"},"variableNames":[{"name":"value","nativeSrc":"1693:5:20","nodeType":"YulIdentifier","src":"1693:5:20"}]},{"nativeSrc":"1743:15:20","nodeType":"YulAssignment","src":"1743:15:20","value":{"name":"value","nativeSrc":"1753:5:20","nodeType":"YulIdentifier","src":"1753:5:20"},"variableNames":[{"name":"value2","nativeSrc":"1743:6:20","nodeType":"YulIdentifier","src":"1743:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1390:374:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1444:9:20","nodeType":"YulTypedName","src":"1444:9:20","type":""},{"name":"dataEnd","nativeSrc":"1455:7:20","nodeType":"YulTypedName","src":"1455:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1467:6:20","nodeType":"YulTypedName","src":"1467:6:20","type":""},{"name":"value1","nativeSrc":"1475:6:20","nodeType":"YulTypedName","src":"1475:6:20","type":""},{"name":"value2","nativeSrc":"1483:6:20","nodeType":"YulTypedName","src":"1483:6:20","type":""}],"src":"1390:374:20"},{"body":{"nativeSrc":"1866:87:20","nodeType":"YulBlock","src":"1866:87:20","statements":[{"nativeSrc":"1876:26:20","nodeType":"YulAssignment","src":"1876:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1888:9:20","nodeType":"YulIdentifier","src":"1888:9:20"},{"kind":"number","nativeSrc":"1899:2:20","nodeType":"YulLiteral","src":"1899:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1884:3:20","nodeType":"YulIdentifier","src":"1884:3:20"},"nativeSrc":"1884:18:20","nodeType":"YulFunctionCall","src":"1884:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1876:4:20","nodeType":"YulIdentifier","src":"1876:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1918:9:20","nodeType":"YulIdentifier","src":"1918:9:20"},{"arguments":[{"name":"value0","nativeSrc":"1933:6:20","nodeType":"YulIdentifier","src":"1933:6:20"},{"kind":"number","nativeSrc":"1941:4:20","nodeType":"YulLiteral","src":"1941:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1929:3:20","nodeType":"YulIdentifier","src":"1929:3:20"},"nativeSrc":"1929:17:20","nodeType":"YulFunctionCall","src":"1929:17:20"}],"functionName":{"name":"mstore","nativeSrc":"1911:6:20","nodeType":"YulIdentifier","src":"1911:6:20"},"nativeSrc":"1911:36:20","nodeType":"YulFunctionCall","src":"1911:36:20"},"nativeSrc":"1911:36:20","nodeType":"YulExpressionStatement","src":"1911:36:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1769:184:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1835:9:20","nodeType":"YulTypedName","src":"1835:9:20","type":""},{"name":"value0","nativeSrc":"1846:6:20","nodeType":"YulTypedName","src":"1846:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1857:4:20","nodeType":"YulTypedName","src":"1857:4:20","type":""}],"src":"1769:184:20"},{"body":{"nativeSrc":"1990:95:20","nodeType":"YulBlock","src":"1990:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2007:1:20","nodeType":"YulLiteral","src":"2007:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2014:3:20","nodeType":"YulLiteral","src":"2014:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"2019:10:20","nodeType":"YulLiteral","src":"2019:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2010:3:20","nodeType":"YulIdentifier","src":"2010:3:20"},"nativeSrc":"2010:20:20","nodeType":"YulFunctionCall","src":"2010:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2000:6:20","nodeType":"YulIdentifier","src":"2000:6:20"},"nativeSrc":"2000:31:20","nodeType":"YulFunctionCall","src":"2000:31:20"},"nativeSrc":"2000:31:20","nodeType":"YulExpressionStatement","src":"2000:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2047:1:20","nodeType":"YulLiteral","src":"2047:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"2050:4:20","nodeType":"YulLiteral","src":"2050:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2040:6:20","nodeType":"YulIdentifier","src":"2040:6:20"},"nativeSrc":"2040:15:20","nodeType":"YulFunctionCall","src":"2040:15:20"},"nativeSrc":"2040:15:20","nodeType":"YulExpressionStatement","src":"2040:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2071:1:20","nodeType":"YulLiteral","src":"2071:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2074:4:20","nodeType":"YulLiteral","src":"2074:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2064:6:20","nodeType":"YulIdentifier","src":"2064:6:20"},"nativeSrc":"2064:15:20","nodeType":"YulFunctionCall","src":"2064:15:20"},"nativeSrc":"2064:15:20","nodeType":"YulExpressionStatement","src":"2064:15:20"}]},"name":"panic_error_0x41","nativeSrc":"1958:127:20","nodeType":"YulFunctionDefinition","src":"1958:127:20"},{"body":{"nativeSrc":"2154:890:20","nodeType":"YulBlock","src":"2154:890:20","statements":[{"body":{"nativeSrc":"2203:16:20","nodeType":"YulBlock","src":"2203:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2212:1:20","nodeType":"YulLiteral","src":"2212:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2215:1:20","nodeType":"YulLiteral","src":"2215:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2205:6:20","nodeType":"YulIdentifier","src":"2205:6:20"},"nativeSrc":"2205:12:20","nodeType":"YulFunctionCall","src":"2205:12:20"},"nativeSrc":"2205:12:20","nodeType":"YulExpressionStatement","src":"2205:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2182:6:20","nodeType":"YulIdentifier","src":"2182:6:20"},{"kind":"number","nativeSrc":"2190:4:20","nodeType":"YulLiteral","src":"2190:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2178:3:20","nodeType":"YulIdentifier","src":"2178:3:20"},"nativeSrc":"2178:17:20","nodeType":"YulFunctionCall","src":"2178:17:20"},{"name":"end","nativeSrc":"2197:3:20","nodeType":"YulIdentifier","src":"2197:3:20"}],"functionName":{"name":"slt","nativeSrc":"2174:3:20","nodeType":"YulIdentifier","src":"2174:3:20"},"nativeSrc":"2174:27:20","nodeType":"YulFunctionCall","src":"2174:27:20"}],"functionName":{"name":"iszero","nativeSrc":"2167:6:20","nodeType":"YulIdentifier","src":"2167:6:20"},"nativeSrc":"2167:35:20","nodeType":"YulFunctionCall","src":"2167:35:20"},"nativeSrc":"2164:55:20","nodeType":"YulIf","src":"2164:55:20"},{"nativeSrc":"2228:34:20","nodeType":"YulVariableDeclaration","src":"2228:34:20","value":{"arguments":[{"name":"offset","nativeSrc":"2255:6:20","nodeType":"YulIdentifier","src":"2255:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"2242:12:20","nodeType":"YulIdentifier","src":"2242:12:20"},"nativeSrc":"2242:20:20","nodeType":"YulFunctionCall","src":"2242:20:20"},"variables":[{"name":"length","nativeSrc":"2232:6:20","nodeType":"YulTypedName","src":"2232:6:20","type":""}]},{"body":{"nativeSrc":"2305:22:20","nodeType":"YulBlock","src":"2305:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2307:16:20","nodeType":"YulIdentifier","src":"2307:16:20"},"nativeSrc":"2307:18:20","nodeType":"YulFunctionCall","src":"2307:18:20"},"nativeSrc":"2307:18:20","nodeType":"YulExpressionStatement","src":"2307:18:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2277:6:20","nodeType":"YulIdentifier","src":"2277:6:20"},{"kind":"number","nativeSrc":"2285:18:20","nodeType":"YulLiteral","src":"2285:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2274:2:20","nodeType":"YulIdentifier","src":"2274:2:20"},"nativeSrc":"2274:30:20","nodeType":"YulFunctionCall","src":"2274:30:20"},"nativeSrc":"2271:56:20","nodeType":"YulIf","src":"2271:56:20"},{"nativeSrc":"2336:24:20","nodeType":"YulVariableDeclaration","src":"2336:24:20","value":{"arguments":[{"kind":"number","nativeSrc":"2350:1:20","nodeType":"YulLiteral","src":"2350:1:20","type":"","value":"5"},{"name":"length","nativeSrc":"2353:6:20","nodeType":"YulIdentifier","src":"2353:6:20"}],"functionName":{"name":"shl","nativeSrc":"2346:3:20","nodeType":"YulIdentifier","src":"2346:3:20"},"nativeSrc":"2346:14:20","nodeType":"YulFunctionCall","src":"2346:14:20"},"variables":[{"name":"_1","nativeSrc":"2340:2:20","nodeType":"YulTypedName","src":"2340:2:20","type":""}]},{"nativeSrc":"2369:23:20","nodeType":"YulVariableDeclaration","src":"2369:23:20","value":{"arguments":[{"kind":"number","nativeSrc":"2389:2:20","nodeType":"YulLiteral","src":"2389:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2383:5:20","nodeType":"YulIdentifier","src":"2383:5:20"},"nativeSrc":"2383:9:20","nodeType":"YulFunctionCall","src":"2383:9:20"},"variables":[{"name":"memPtr","nativeSrc":"2373:6:20","nodeType":"YulTypedName","src":"2373:6:20","type":""}]},{"nativeSrc":"2401:56:20","nodeType":"YulVariableDeclaration","src":"2401:56:20","value":{"arguments":[{"name":"memPtr","nativeSrc":"2423:6:20","nodeType":"YulIdentifier","src":"2423:6:20"},{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2439:2:20","nodeType":"YulIdentifier","src":"2439:2:20"},{"kind":"number","nativeSrc":"2443:2:20","nodeType":"YulLiteral","src":"2443:2:20","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"2435:3:20","nodeType":"YulIdentifier","src":"2435:3:20"},"nativeSrc":"2435:11:20","nodeType":"YulFunctionCall","src":"2435:11:20"},{"arguments":[{"kind":"number","nativeSrc":"2452:2:20","nodeType":"YulLiteral","src":"2452:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2448:3:20","nodeType":"YulIdentifier","src":"2448:3:20"},"nativeSrc":"2448:7:20","nodeType":"YulFunctionCall","src":"2448:7:20"}],"functionName":{"name":"and","nativeSrc":"2431:3:20","nodeType":"YulIdentifier","src":"2431:3:20"},"nativeSrc":"2431:25:20","nodeType":"YulFunctionCall","src":"2431:25:20"}],"functionName":{"name":"add","nativeSrc":"2419:3:20","nodeType":"YulIdentifier","src":"2419:3:20"},"nativeSrc":"2419:38:20","nodeType":"YulFunctionCall","src":"2419:38:20"},"variables":[{"name":"newFreePtr","nativeSrc":"2405:10:20","nodeType":"YulTypedName","src":"2405:10:20","type":""}]},{"body":{"nativeSrc":"2532:22:20","nodeType":"YulBlock","src":"2532:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2534:16:20","nodeType":"YulIdentifier","src":"2534:16:20"},"nativeSrc":"2534:18:20","nodeType":"YulFunctionCall","src":"2534:18:20"},"nativeSrc":"2534:18:20","nodeType":"YulExpressionStatement","src":"2534:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2475:10:20","nodeType":"YulIdentifier","src":"2475:10:20"},{"kind":"number","nativeSrc":"2487:18:20","nodeType":"YulLiteral","src":"2487:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2472:2:20","nodeType":"YulIdentifier","src":"2472:2:20"},"nativeSrc":"2472:34:20","nodeType":"YulFunctionCall","src":"2472:34:20"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2511:10:20","nodeType":"YulIdentifier","src":"2511:10:20"},{"name":"memPtr","nativeSrc":"2523:6:20","nodeType":"YulIdentifier","src":"2523:6:20"}],"functionName":{"name":"lt","nativeSrc":"2508:2:20","nodeType":"YulIdentifier","src":"2508:2:20"},"nativeSrc":"2508:22:20","nodeType":"YulFunctionCall","src":"2508:22:20"}],"functionName":{"name":"or","nativeSrc":"2469:2:20","nodeType":"YulIdentifier","src":"2469:2:20"},"nativeSrc":"2469:62:20","nodeType":"YulFunctionCall","src":"2469:62:20"},"nativeSrc":"2466:88:20","nodeType":"YulIf","src":"2466:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2570:2:20","nodeType":"YulLiteral","src":"2570:2:20","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2574:10:20","nodeType":"YulIdentifier","src":"2574:10:20"}],"functionName":{"name":"mstore","nativeSrc":"2563:6:20","nodeType":"YulIdentifier","src":"2563:6:20"},"nativeSrc":"2563:22:20","nodeType":"YulFunctionCall","src":"2563:22:20"},"nativeSrc":"2563:22:20","nodeType":"YulExpressionStatement","src":"2563:22:20"},{"nativeSrc":"2594:17:20","nodeType":"YulVariableDeclaration","src":"2594:17:20","value":{"name":"memPtr","nativeSrc":"2605:6:20","nodeType":"YulIdentifier","src":"2605:6:20"},"variables":[{"name":"dst","nativeSrc":"2598:3:20","nodeType":"YulTypedName","src":"2598:3:20","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2627:6:20","nodeType":"YulIdentifier","src":"2627:6:20"},{"name":"length","nativeSrc":"2635:6:20","nodeType":"YulIdentifier","src":"2635:6:20"}],"functionName":{"name":"mstore","nativeSrc":"2620:6:20","nodeType":"YulIdentifier","src":"2620:6:20"},"nativeSrc":"2620:22:20","nodeType":"YulFunctionCall","src":"2620:22:20"},"nativeSrc":"2620:22:20","nodeType":"YulExpressionStatement","src":"2620:22:20"},{"nativeSrc":"2651:24:20","nodeType":"YulAssignment","src":"2651:24:20","value":{"arguments":[{"name":"memPtr","nativeSrc":"2662:6:20","nodeType":"YulIdentifier","src":"2662:6:20"},{"kind":"number","nativeSrc":"2670:4:20","nodeType":"YulLiteral","src":"2670:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2658:3:20","nodeType":"YulIdentifier","src":"2658:3:20"},"nativeSrc":"2658:17:20","nodeType":"YulFunctionCall","src":"2658:17:20"},"variableNames":[{"name":"dst","nativeSrc":"2651:3:20","nodeType":"YulIdentifier","src":"2651:3:20"}]},{"nativeSrc":"2684:40:20","nodeType":"YulVariableDeclaration","src":"2684:40:20","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2706:6:20","nodeType":"YulIdentifier","src":"2706:6:20"},{"name":"_1","nativeSrc":"2714:2:20","nodeType":"YulIdentifier","src":"2714:2:20"}],"functionName":{"name":"add","nativeSrc":"2702:3:20","nodeType":"YulIdentifier","src":"2702:3:20"},"nativeSrc":"2702:15:20","nodeType":"YulFunctionCall","src":"2702:15:20"},{"kind":"number","nativeSrc":"2719:4:20","nodeType":"YulLiteral","src":"2719:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2698:3:20","nodeType":"YulIdentifier","src":"2698:3:20"},"nativeSrc":"2698:26:20","nodeType":"YulFunctionCall","src":"2698:26:20"},"variables":[{"name":"srcEnd","nativeSrc":"2688:6:20","nodeType":"YulTypedName","src":"2688:6:20","type":""}]},{"body":{"nativeSrc":"2752:16:20","nodeType":"YulBlock","src":"2752:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2761:1:20","nodeType":"YulLiteral","src":"2761:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2764:1:20","nodeType":"YulLiteral","src":"2764:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2754:6:20","nodeType":"YulIdentifier","src":"2754:6:20"},"nativeSrc":"2754:12:20","nodeType":"YulFunctionCall","src":"2754:12:20"},"nativeSrc":"2754:12:20","nodeType":"YulExpressionStatement","src":"2754:12:20"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2739:6:20","nodeType":"YulIdentifier","src":"2739:6:20"},{"name":"end","nativeSrc":"2747:3:20","nodeType":"YulIdentifier","src":"2747:3:20"}],"functionName":{"name":"gt","nativeSrc":"2736:2:20","nodeType":"YulIdentifier","src":"2736:2:20"},"nativeSrc":"2736:15:20","nodeType":"YulFunctionCall","src":"2736:15:20"},"nativeSrc":"2733:35:20","nodeType":"YulIf","src":"2733:35:20"},{"nativeSrc":"2777:28:20","nodeType":"YulVariableDeclaration","src":"2777:28:20","value":{"arguments":[{"name":"offset","nativeSrc":"2792:6:20","nodeType":"YulIdentifier","src":"2792:6:20"},{"kind":"number","nativeSrc":"2800:4:20","nodeType":"YulLiteral","src":"2800:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2788:3:20","nodeType":"YulIdentifier","src":"2788:3:20"},"nativeSrc":"2788:17:20","nodeType":"YulFunctionCall","src":"2788:17:20"},"variables":[{"name":"src","nativeSrc":"2781:3:20","nodeType":"YulTypedName","src":"2781:3:20","type":""}]},{"body":{"nativeSrc":"2872:142:20","nodeType":"YulBlock","src":"2872:142:20","statements":[{"nativeSrc":"2886:14:20","nodeType":"YulVariableDeclaration","src":"2886:14:20","value":{"kind":"number","nativeSrc":"2899:1:20","nodeType":"YulLiteral","src":"2899:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2890:5:20","nodeType":"YulTypedName","src":"2890:5:20","type":""}]},{"nativeSrc":"2913:26:20","nodeType":"YulAssignment","src":"2913:26:20","value":{"arguments":[{"name":"src","nativeSrc":"2935:3:20","nodeType":"YulIdentifier","src":"2935:3:20"}],"functionName":{"name":"calldataload","nativeSrc":"2922:12:20","nodeType":"YulIdentifier","src":"2922:12:20"},"nativeSrc":"2922:17:20","nodeType":"YulFunctionCall","src":"2922:17:20"},"variableNames":[{"name":"value","nativeSrc":"2913:5:20","nodeType":"YulIdentifier","src":"2913:5:20"}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2959:3:20","nodeType":"YulIdentifier","src":"2959:3:20"},{"name":"value","nativeSrc":"2964:5:20","nodeType":"YulIdentifier","src":"2964:5:20"}],"functionName":{"name":"mstore","nativeSrc":"2952:6:20","nodeType":"YulIdentifier","src":"2952:6:20"},"nativeSrc":"2952:18:20","nodeType":"YulFunctionCall","src":"2952:18:20"},"nativeSrc":"2952:18:20","nodeType":"YulExpressionStatement","src":"2952:18:20"},{"nativeSrc":"2983:21:20","nodeType":"YulAssignment","src":"2983:21:20","value":{"arguments":[{"name":"dst","nativeSrc":"2994:3:20","nodeType":"YulIdentifier","src":"2994:3:20"},{"kind":"number","nativeSrc":"2999:4:20","nodeType":"YulLiteral","src":"2999:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2990:3:20","nodeType":"YulIdentifier","src":"2990:3:20"},"nativeSrc":"2990:14:20","nodeType":"YulFunctionCall","src":"2990:14:20"},"variableNames":[{"name":"dst","nativeSrc":"2983:3:20","nodeType":"YulIdentifier","src":"2983:3:20"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2825:3:20","nodeType":"YulIdentifier","src":"2825:3:20"},{"name":"srcEnd","nativeSrc":"2830:6:20","nodeType":"YulIdentifier","src":"2830:6:20"}],"functionName":{"name":"lt","nativeSrc":"2822:2:20","nodeType":"YulIdentifier","src":"2822:2:20"},"nativeSrc":"2822:15:20","nodeType":"YulFunctionCall","src":"2822:15:20"},"nativeSrc":"2814:200:20","nodeType":"YulForLoop","post":{"nativeSrc":"2838:25:20","nodeType":"YulBlock","src":"2838:25:20","statements":[{"nativeSrc":"2840:21:20","nodeType":"YulAssignment","src":"2840:21:20","value":{"arguments":[{"name":"src","nativeSrc":"2851:3:20","nodeType":"YulIdentifier","src":"2851:3:20"},{"kind":"number","nativeSrc":"2856:4:20","nodeType":"YulLiteral","src":"2856:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2847:3:20","nodeType":"YulIdentifier","src":"2847:3:20"},"nativeSrc":"2847:14:20","nodeType":"YulFunctionCall","src":"2847:14:20"},"variableNames":[{"name":"src","nativeSrc":"2840:3:20","nodeType":"YulIdentifier","src":"2840:3:20"}]}]},"pre":{"nativeSrc":"2818:3:20","nodeType":"YulBlock","src":"2818:3:20","statements":[]},"src":"2814:200:20"},{"nativeSrc":"3023:15:20","nodeType":"YulAssignment","src":"3023:15:20","value":{"name":"memPtr","nativeSrc":"3032:6:20","nodeType":"YulIdentifier","src":"3032:6:20"},"variableNames":[{"name":"array","nativeSrc":"3023:5:20","nodeType":"YulIdentifier","src":"3023:5:20"}]}]},"name":"abi_decode_array_bytes32_dyn","nativeSrc":"2090:954:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2128:6:20","nodeType":"YulTypedName","src":"2128:6:20","type":""},{"name":"end","nativeSrc":"2136:3:20","nodeType":"YulTypedName","src":"2136:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2144:5:20","nodeType":"YulTypedName","src":"2144:5:20","type":""}],"src":"2090:954:20"},{"body":{"nativeSrc":"3178:453:20","nodeType":"YulBlock","src":"3178:453:20","statements":[{"body":{"nativeSrc":"3224:16:20","nodeType":"YulBlock","src":"3224:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3233:1:20","nodeType":"YulLiteral","src":"3233:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3236:1:20","nodeType":"YulLiteral","src":"3236:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3226:6:20","nodeType":"YulIdentifier","src":"3226:6:20"},"nativeSrc":"3226:12:20","nodeType":"YulFunctionCall","src":"3226:12:20"},"nativeSrc":"3226:12:20","nodeType":"YulExpressionStatement","src":"3226:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3199:7:20","nodeType":"YulIdentifier","src":"3199:7:20"},{"name":"headStart","nativeSrc":"3208:9:20","nodeType":"YulIdentifier","src":"3208:9:20"}],"functionName":{"name":"sub","nativeSrc":"3195:3:20","nodeType":"YulIdentifier","src":"3195:3:20"},"nativeSrc":"3195:23:20","nodeType":"YulFunctionCall","src":"3195:23:20"},{"kind":"number","nativeSrc":"3220:2:20","nodeType":"YulLiteral","src":"3220:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3191:3:20","nodeType":"YulIdentifier","src":"3191:3:20"},"nativeSrc":"3191:32:20","nodeType":"YulFunctionCall","src":"3191:32:20"},"nativeSrc":"3188:52:20","nodeType":"YulIf","src":"3188:52:20"},{"nativeSrc":"3249:14:20","nodeType":"YulVariableDeclaration","src":"3249:14:20","value":{"kind":"number","nativeSrc":"3262:1:20","nodeType":"YulLiteral","src":"3262:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3253:5:20","nodeType":"YulTypedName","src":"3253:5:20","type":""}]},{"nativeSrc":"3272:32:20","nodeType":"YulAssignment","src":"3272:32:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3294:9:20","nodeType":"YulIdentifier","src":"3294:9:20"}],"functionName":{"name":"calldataload","nativeSrc":"3281:12:20","nodeType":"YulIdentifier","src":"3281:12:20"},"nativeSrc":"3281:23:20","nodeType":"YulFunctionCall","src":"3281:23:20"},"variableNames":[{"name":"value","nativeSrc":"3272:5:20","nodeType":"YulIdentifier","src":"3272:5:20"}]},{"nativeSrc":"3313:15:20","nodeType":"YulAssignment","src":"3313:15:20","value":{"name":"value","nativeSrc":"3323:5:20","nodeType":"YulIdentifier","src":"3323:5:20"},"variableNames":[{"name":"value0","nativeSrc":"3313:6:20","nodeType":"YulIdentifier","src":"3313:6:20"}]},{"nativeSrc":"3337:16:20","nodeType":"YulVariableDeclaration","src":"3337:16:20","value":{"kind":"number","nativeSrc":"3352:1:20","nodeType":"YulLiteral","src":"3352:1:20","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"3341:7:20","nodeType":"YulTypedName","src":"3341:7:20","type":""}]},{"nativeSrc":"3362:43:20","nodeType":"YulAssignment","src":"3362:43:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3390:9:20","nodeType":"YulIdentifier","src":"3390:9:20"},{"kind":"number","nativeSrc":"3401:2:20","nodeType":"YulLiteral","src":"3401:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3386:3:20","nodeType":"YulIdentifier","src":"3386:3:20"},"nativeSrc":"3386:18:20","nodeType":"YulFunctionCall","src":"3386:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"3373:12:20","nodeType":"YulIdentifier","src":"3373:12:20"},"nativeSrc":"3373:32:20","nodeType":"YulFunctionCall","src":"3373:32:20"},"variableNames":[{"name":"value_1","nativeSrc":"3362:7:20","nodeType":"YulIdentifier","src":"3362:7:20"}]},{"nativeSrc":"3414:17:20","nodeType":"YulAssignment","src":"3414:17:20","value":{"name":"value_1","nativeSrc":"3424:7:20","nodeType":"YulIdentifier","src":"3424:7:20"},"variableNames":[{"name":"value1","nativeSrc":"3414:6:20","nodeType":"YulIdentifier","src":"3414:6:20"}]},{"nativeSrc":"3440:46:20","nodeType":"YulVariableDeclaration","src":"3440:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3471:9:20","nodeType":"YulIdentifier","src":"3471:9:20"},{"kind":"number","nativeSrc":"3482:2:20","nodeType":"YulLiteral","src":"3482:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3467:3:20","nodeType":"YulIdentifier","src":"3467:3:20"},"nativeSrc":"3467:18:20","nodeType":"YulFunctionCall","src":"3467:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"3454:12:20","nodeType":"YulIdentifier","src":"3454:12:20"},"nativeSrc":"3454:32:20","nodeType":"YulFunctionCall","src":"3454:32:20"},"variables":[{"name":"offset","nativeSrc":"3444:6:20","nodeType":"YulTypedName","src":"3444:6:20","type":""}]},{"body":{"nativeSrc":"3529:16:20","nodeType":"YulBlock","src":"3529:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3538:1:20","nodeType":"YulLiteral","src":"3538:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3541:1:20","nodeType":"YulLiteral","src":"3541:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3531:6:20","nodeType":"YulIdentifier","src":"3531:6:20"},"nativeSrc":"3531:12:20","nodeType":"YulFunctionCall","src":"3531:12:20"},"nativeSrc":"3531:12:20","nodeType":"YulExpressionStatement","src":"3531:12:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3501:6:20","nodeType":"YulIdentifier","src":"3501:6:20"},{"kind":"number","nativeSrc":"3509:18:20","nodeType":"YulLiteral","src":"3509:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3498:2:20","nodeType":"YulIdentifier","src":"3498:2:20"},"nativeSrc":"3498:30:20","nodeType":"YulFunctionCall","src":"3498:30:20"},"nativeSrc":"3495:50:20","nodeType":"YulIf","src":"3495:50:20"},{"nativeSrc":"3554:71:20","nodeType":"YulAssignment","src":"3554:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3597:9:20","nodeType":"YulIdentifier","src":"3597:9:20"},{"name":"offset","nativeSrc":"3608:6:20","nodeType":"YulIdentifier","src":"3608:6:20"}],"functionName":{"name":"add","nativeSrc":"3593:3:20","nodeType":"YulIdentifier","src":"3593:3:20"},"nativeSrc":"3593:22:20","nodeType":"YulFunctionCall","src":"3593:22:20"},{"name":"dataEnd","nativeSrc":"3617:7:20","nodeType":"YulIdentifier","src":"3617:7:20"}],"functionName":{"name":"abi_decode_array_bytes32_dyn","nativeSrc":"3564:28:20","nodeType":"YulIdentifier","src":"3564:28:20"},"nativeSrc":"3564:61:20","nodeType":"YulFunctionCall","src":"3564:61:20"},"variableNames":[{"name":"value2","nativeSrc":"3554:6:20","nodeType":"YulIdentifier","src":"3554:6:20"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"3049:582:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3128:9:20","nodeType":"YulTypedName","src":"3128:9:20","type":""},{"name":"dataEnd","nativeSrc":"3139:7:20","nodeType":"YulTypedName","src":"3139:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3151:6:20","nodeType":"YulTypedName","src":"3151:6:20","type":""},{"name":"value1","nativeSrc":"3159:6:20","nodeType":"YulTypedName","src":"3159:6:20","type":""},{"name":"value2","nativeSrc":"3167:6:20","nodeType":"YulTypedName","src":"3167:6:20","type":""}],"src":"3049:582:20"},{"body":{"nativeSrc":"3706:156:20","nodeType":"YulBlock","src":"3706:156:20","statements":[{"body":{"nativeSrc":"3752:16:20","nodeType":"YulBlock","src":"3752:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3761:1:20","nodeType":"YulLiteral","src":"3761:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3764:1:20","nodeType":"YulLiteral","src":"3764:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3754:6:20","nodeType":"YulIdentifier","src":"3754:6:20"},"nativeSrc":"3754:12:20","nodeType":"YulFunctionCall","src":"3754:12:20"},"nativeSrc":"3754:12:20","nodeType":"YulExpressionStatement","src":"3754:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3727:7:20","nodeType":"YulIdentifier","src":"3727:7:20"},{"name":"headStart","nativeSrc":"3736:9:20","nodeType":"YulIdentifier","src":"3736:9:20"}],"functionName":{"name":"sub","nativeSrc":"3723:3:20","nodeType":"YulIdentifier","src":"3723:3:20"},"nativeSrc":"3723:23:20","nodeType":"YulFunctionCall","src":"3723:23:20"},{"kind":"number","nativeSrc":"3748:2:20","nodeType":"YulLiteral","src":"3748:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3719:3:20","nodeType":"YulIdentifier","src":"3719:3:20"},"nativeSrc":"3719:32:20","nodeType":"YulFunctionCall","src":"3719:32:20"},"nativeSrc":"3716:52:20","nodeType":"YulIf","src":"3716:52:20"},{"nativeSrc":"3777:14:20","nodeType":"YulVariableDeclaration","src":"3777:14:20","value":{"kind":"number","nativeSrc":"3790:1:20","nodeType":"YulLiteral","src":"3790:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3781:5:20","nodeType":"YulTypedName","src":"3781:5:20","type":""}]},{"nativeSrc":"3800:32:20","nodeType":"YulAssignment","src":"3800:32:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3822:9:20","nodeType":"YulIdentifier","src":"3822:9:20"}],"functionName":{"name":"calldataload","nativeSrc":"3809:12:20","nodeType":"YulIdentifier","src":"3809:12:20"},"nativeSrc":"3809:23:20","nodeType":"YulFunctionCall","src":"3809:23:20"},"variableNames":[{"name":"value","nativeSrc":"3800:5:20","nodeType":"YulIdentifier","src":"3800:5:20"}]},{"nativeSrc":"3841:15:20","nodeType":"YulAssignment","src":"3841:15:20","value":{"name":"value","nativeSrc":"3851:5:20","nodeType":"YulIdentifier","src":"3851:5:20"},"variableNames":[{"name":"value0","nativeSrc":"3841:6:20","nodeType":"YulIdentifier","src":"3841:6:20"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3636:226:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3672:9:20","nodeType":"YulTypedName","src":"3672:9:20","type":""},{"name":"dataEnd","nativeSrc":"3683:7:20","nodeType":"YulTypedName","src":"3683:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3695:6:20","nodeType":"YulTypedName","src":"3695:6:20","type":""}],"src":"3636:226:20"},{"body":{"nativeSrc":"4131:1241:20","nodeType":"YulBlock","src":"4131:1241:20","statements":[{"body":{"nativeSrc":"4178:16:20","nodeType":"YulBlock","src":"4178:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4187:1:20","nodeType":"YulLiteral","src":"4187:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"4190:1:20","nodeType":"YulLiteral","src":"4190:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4180:6:20","nodeType":"YulIdentifier","src":"4180:6:20"},"nativeSrc":"4180:12:20","nodeType":"YulFunctionCall","src":"4180:12:20"},"nativeSrc":"4180:12:20","nodeType":"YulExpressionStatement","src":"4180:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4152:7:20","nodeType":"YulIdentifier","src":"4152:7:20"},{"name":"headStart","nativeSrc":"4161:9:20","nodeType":"YulIdentifier","src":"4161:9:20"}],"functionName":{"name":"sub","nativeSrc":"4148:3:20","nodeType":"YulIdentifier","src":"4148:3:20"},"nativeSrc":"4148:23:20","nodeType":"YulFunctionCall","src":"4148:23:20"},{"kind":"number","nativeSrc":"4173:3:20","nodeType":"YulLiteral","src":"4173:3:20","type":"","value":"352"}],"functionName":{"name":"slt","nativeSrc":"4144:3:20","nodeType":"YulIdentifier","src":"4144:3:20"},"nativeSrc":"4144:33:20","nodeType":"YulFunctionCall","src":"4144:33:20"},"nativeSrc":"4141:53:20","nodeType":"YulIf","src":"4141:53:20"},{"nativeSrc":"4203:14:20","nodeType":"YulVariableDeclaration","src":"4203:14:20","value":{"kind":"number","nativeSrc":"4216:1:20","nodeType":"YulLiteral","src":"4216:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4207:5:20","nodeType":"YulTypedName","src":"4207:5:20","type":""}]},{"nativeSrc":"4226:32:20","nodeType":"YulAssignment","src":"4226:32:20","value":{"arguments":[{"name":"headStart","nativeSrc":"4248:9:20","nodeType":"YulIdentifier","src":"4248:9:20"}],"functionName":{"name":"calldataload","nativeSrc":"4235:12:20","nodeType":"YulIdentifier","src":"4235:12:20"},"nativeSrc":"4235:23:20","nodeType":"YulFunctionCall","src":"4235:23:20"},"variableNames":[{"name":"value","nativeSrc":"4226:5:20","nodeType":"YulIdentifier","src":"4226:5:20"}]},{"nativeSrc":"4267:15:20","nodeType":"YulAssignment","src":"4267:15:20","value":{"name":"value","nativeSrc":"4277:5:20","nodeType":"YulIdentifier","src":"4277:5:20"},"variableNames":[{"name":"value0","nativeSrc":"4267:6:20","nodeType":"YulIdentifier","src":"4267:6:20"}]},{"nativeSrc":"4291:48:20","nodeType":"YulAssignment","src":"4291:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4324:9:20","nodeType":"YulIdentifier","src":"4324:9:20"},{"kind":"number","nativeSrc":"4335:2:20","nodeType":"YulLiteral","src":"4335:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4320:3:20","nodeType":"YulIdentifier","src":"4320:3:20"},"nativeSrc":"4320:18:20","nodeType":"YulFunctionCall","src":"4320:18:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4301:18:20","nodeType":"YulIdentifier","src":"4301:18:20"},"nativeSrc":"4301:38:20","nodeType":"YulFunctionCall","src":"4301:38:20"},"variableNames":[{"name":"value1","nativeSrc":"4291:6:20","nodeType":"YulIdentifier","src":"4291:6:20"}]},{"nativeSrc":"4348:48:20","nodeType":"YulAssignment","src":"4348:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4381:9:20","nodeType":"YulIdentifier","src":"4381:9:20"},{"kind":"number","nativeSrc":"4392:2:20","nodeType":"YulLiteral","src":"4392:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4377:3:20","nodeType":"YulIdentifier","src":"4377:3:20"},"nativeSrc":"4377:18:20","nodeType":"YulFunctionCall","src":"4377:18:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4358:18:20","nodeType":"YulIdentifier","src":"4358:18:20"},"nativeSrc":"4358:38:20","nodeType":"YulFunctionCall","src":"4358:38:20"},"variableNames":[{"name":"value2","nativeSrc":"4348:6:20","nodeType":"YulIdentifier","src":"4348:6:20"}]},{"nativeSrc":"4405:16:20","nodeType":"YulVariableDeclaration","src":"4405:16:20","value":{"kind":"number","nativeSrc":"4420:1:20","nodeType":"YulLiteral","src":"4420:1:20","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"4409:7:20","nodeType":"YulTypedName","src":"4409:7:20","type":""}]},{"nativeSrc":"4430:43:20","nodeType":"YulAssignment","src":"4430:43:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4458:9:20","nodeType":"YulIdentifier","src":"4458:9:20"},{"kind":"number","nativeSrc":"4469:2:20","nodeType":"YulLiteral","src":"4469:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4454:3:20","nodeType":"YulIdentifier","src":"4454:3:20"},"nativeSrc":"4454:18:20","nodeType":"YulFunctionCall","src":"4454:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"4441:12:20","nodeType":"YulIdentifier","src":"4441:12:20"},"nativeSrc":"4441:32:20","nodeType":"YulFunctionCall","src":"4441:32:20"},"variableNames":[{"name":"value_1","nativeSrc":"4430:7:20","nodeType":"YulIdentifier","src":"4430:7:20"}]},{"nativeSrc":"4482:17:20","nodeType":"YulAssignment","src":"4482:17:20","value":{"name":"value_1","nativeSrc":"4492:7:20","nodeType":"YulIdentifier","src":"4492:7:20"},"variableNames":[{"name":"value3","nativeSrc":"4482:6:20","nodeType":"YulIdentifier","src":"4482:6:20"}]},{"nativeSrc":"4508:16:20","nodeType":"YulVariableDeclaration","src":"4508:16:20","value":{"kind":"number","nativeSrc":"4523:1:20","nodeType":"YulLiteral","src":"4523:1:20","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"4512:7:20","nodeType":"YulTypedName","src":"4512:7:20","type":""}]},{"nativeSrc":"4533:44:20","nodeType":"YulAssignment","src":"4533:44:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4561:9:20","nodeType":"YulIdentifier","src":"4561:9:20"},{"kind":"number","nativeSrc":"4572:3:20","nodeType":"YulLiteral","src":"4572:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4557:3:20","nodeType":"YulIdentifier","src":"4557:3:20"},"nativeSrc":"4557:19:20","nodeType":"YulFunctionCall","src":"4557:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"4544:12:20","nodeType":"YulIdentifier","src":"4544:12:20"},"nativeSrc":"4544:33:20","nodeType":"YulFunctionCall","src":"4544:33:20"},"variableNames":[{"name":"value_2","nativeSrc":"4533:7:20","nodeType":"YulIdentifier","src":"4533:7:20"}]},{"nativeSrc":"4586:17:20","nodeType":"YulAssignment","src":"4586:17:20","value":{"name":"value_2","nativeSrc":"4596:7:20","nodeType":"YulIdentifier","src":"4596:7:20"},"variableNames":[{"name":"value4","nativeSrc":"4586:6:20","nodeType":"YulIdentifier","src":"4586:6:20"}]},{"nativeSrc":"4612:16:20","nodeType":"YulVariableDeclaration","src":"4612:16:20","value":{"kind":"number","nativeSrc":"4627:1:20","nodeType":"YulLiteral","src":"4627:1:20","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"4616:7:20","nodeType":"YulTypedName","src":"4616:7:20","type":""}]},{"nativeSrc":"4637:44:20","nodeType":"YulAssignment","src":"4637:44:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4665:9:20","nodeType":"YulIdentifier","src":"4665:9:20"},{"kind":"number","nativeSrc":"4676:3:20","nodeType":"YulLiteral","src":"4676:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4661:3:20","nodeType":"YulIdentifier","src":"4661:3:20"},"nativeSrc":"4661:19:20","nodeType":"YulFunctionCall","src":"4661:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"4648:12:20","nodeType":"YulIdentifier","src":"4648:12:20"},"nativeSrc":"4648:33:20","nodeType":"YulFunctionCall","src":"4648:33:20"},"variableNames":[{"name":"value_3","nativeSrc":"4637:7:20","nodeType":"YulIdentifier","src":"4637:7:20"}]},{"nativeSrc":"4690:17:20","nodeType":"YulAssignment","src":"4690:17:20","value":{"name":"value_3","nativeSrc":"4700:7:20","nodeType":"YulIdentifier","src":"4700:7:20"},"variableNames":[{"name":"value5","nativeSrc":"4690:6:20","nodeType":"YulIdentifier","src":"4690:6:20"}]},{"nativeSrc":"4716:16:20","nodeType":"YulVariableDeclaration","src":"4716:16:20","value":{"kind":"number","nativeSrc":"4731:1:20","nodeType":"YulLiteral","src":"4731:1:20","type":"","value":"0"},"variables":[{"name":"value_4","nativeSrc":"4720:7:20","nodeType":"YulTypedName","src":"4720:7:20","type":""}]},{"nativeSrc":"4741:44:20","nodeType":"YulAssignment","src":"4741:44:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4769:9:20","nodeType":"YulIdentifier","src":"4769:9:20"},{"kind":"number","nativeSrc":"4780:3:20","nodeType":"YulLiteral","src":"4780:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"4765:3:20","nodeType":"YulIdentifier","src":"4765:3:20"},"nativeSrc":"4765:19:20","nodeType":"YulFunctionCall","src":"4765:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"4752:12:20","nodeType":"YulIdentifier","src":"4752:12:20"},"nativeSrc":"4752:33:20","nodeType":"YulFunctionCall","src":"4752:33:20"},"variableNames":[{"name":"value_4","nativeSrc":"4741:7:20","nodeType":"YulIdentifier","src":"4741:7:20"}]},{"nativeSrc":"4794:17:20","nodeType":"YulAssignment","src":"4794:17:20","value":{"name":"value_4","nativeSrc":"4804:7:20","nodeType":"YulIdentifier","src":"4804:7:20"},"variableNames":[{"name":"value6","nativeSrc":"4794:6:20","nodeType":"YulIdentifier","src":"4794:6:20"}]},{"nativeSrc":"4820:47:20","nodeType":"YulVariableDeclaration","src":"4820:47:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4851:9:20","nodeType":"YulIdentifier","src":"4851:9:20"},{"kind":"number","nativeSrc":"4862:3:20","nodeType":"YulLiteral","src":"4862:3:20","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"4847:3:20","nodeType":"YulIdentifier","src":"4847:3:20"},"nativeSrc":"4847:19:20","nodeType":"YulFunctionCall","src":"4847:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"4834:12:20","nodeType":"YulIdentifier","src":"4834:12:20"},"nativeSrc":"4834:33:20","nodeType":"YulFunctionCall","src":"4834:33:20"},"variables":[{"name":"offset","nativeSrc":"4824:6:20","nodeType":"YulTypedName","src":"4824:6:20","type":""}]},{"body":{"nativeSrc":"4910:16:20","nodeType":"YulBlock","src":"4910:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4919:1:20","nodeType":"YulLiteral","src":"4919:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"4922:1:20","nodeType":"YulLiteral","src":"4922:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4912:6:20","nodeType":"YulIdentifier","src":"4912:6:20"},"nativeSrc":"4912:12:20","nodeType":"YulFunctionCall","src":"4912:12:20"},"nativeSrc":"4912:12:20","nodeType":"YulExpressionStatement","src":"4912:12:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4882:6:20","nodeType":"YulIdentifier","src":"4882:6:20"},{"kind":"number","nativeSrc":"4890:18:20","nodeType":"YulLiteral","src":"4890:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4879:2:20","nodeType":"YulIdentifier","src":"4879:2:20"},"nativeSrc":"4879:30:20","nodeType":"YulFunctionCall","src":"4879:30:20"},"nativeSrc":"4876:50:20","nodeType":"YulIf","src":"4876:50:20"},{"nativeSrc":"4935:71:20","nodeType":"YulAssignment","src":"4935:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4978:9:20","nodeType":"YulIdentifier","src":"4978:9:20"},{"name":"offset","nativeSrc":"4989:6:20","nodeType":"YulIdentifier","src":"4989:6:20"}],"functionName":{"name":"add","nativeSrc":"4974:3:20","nodeType":"YulIdentifier","src":"4974:3:20"},"nativeSrc":"4974:22:20","nodeType":"YulFunctionCall","src":"4974:22:20"},{"name":"dataEnd","nativeSrc":"4998:7:20","nodeType":"YulIdentifier","src":"4998:7:20"}],"functionName":{"name":"abi_decode_array_bytes32_dyn","nativeSrc":"4945:28:20","nodeType":"YulIdentifier","src":"4945:28:20"},"nativeSrc":"4945:61:20","nodeType":"YulFunctionCall","src":"4945:61:20"},"variableNames":[{"name":"value7","nativeSrc":"4935:6:20","nodeType":"YulIdentifier","src":"4935:6:20"}]},{"nativeSrc":"5015:48:20","nodeType":"YulVariableDeclaration","src":"5015:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5047:9:20","nodeType":"YulIdentifier","src":"5047:9:20"},{"kind":"number","nativeSrc":"5058:3:20","nodeType":"YulLiteral","src":"5058:3:20","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"5043:3:20","nodeType":"YulIdentifier","src":"5043:3:20"},"nativeSrc":"5043:19:20","nodeType":"YulFunctionCall","src":"5043:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"5030:12:20","nodeType":"YulIdentifier","src":"5030:12:20"},"nativeSrc":"5030:33:20","nodeType":"YulFunctionCall","src":"5030:33:20"},"variables":[{"name":"value_5","nativeSrc":"5019:7:20","nodeType":"YulTypedName","src":"5019:7:20","type":""}]},{"body":{"nativeSrc":"5115:16:20","nodeType":"YulBlock","src":"5115:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5124:1:20","nodeType":"YulLiteral","src":"5124:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5127:1:20","nodeType":"YulLiteral","src":"5127:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5117:6:20","nodeType":"YulIdentifier","src":"5117:6:20"},"nativeSrc":"5117:12:20","nodeType":"YulFunctionCall","src":"5117:12:20"},"nativeSrc":"5117:12:20","nodeType":"YulExpressionStatement","src":"5117:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value_5","nativeSrc":"5085:7:20","nodeType":"YulIdentifier","src":"5085:7:20"},{"arguments":[{"name":"value_5","nativeSrc":"5098:7:20","nodeType":"YulIdentifier","src":"5098:7:20"},{"kind":"number","nativeSrc":"5107:4:20","nodeType":"YulLiteral","src":"5107:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5094:3:20","nodeType":"YulIdentifier","src":"5094:3:20"},"nativeSrc":"5094:18:20","nodeType":"YulFunctionCall","src":"5094:18:20"}],"functionName":{"name":"eq","nativeSrc":"5082:2:20","nodeType":"YulIdentifier","src":"5082:2:20"},"nativeSrc":"5082:31:20","nodeType":"YulFunctionCall","src":"5082:31:20"}],"functionName":{"name":"iszero","nativeSrc":"5075:6:20","nodeType":"YulIdentifier","src":"5075:6:20"},"nativeSrc":"5075:39:20","nodeType":"YulFunctionCall","src":"5075:39:20"},"nativeSrc":"5072:59:20","nodeType":"YulIf","src":"5072:59:20"},{"nativeSrc":"5140:17:20","nodeType":"YulAssignment","src":"5140:17:20","value":{"name":"value_5","nativeSrc":"5150:7:20","nodeType":"YulIdentifier","src":"5150:7:20"},"variableNames":[{"name":"value8","nativeSrc":"5140:6:20","nodeType":"YulIdentifier","src":"5140:6:20"}]},{"nativeSrc":"5166:16:20","nodeType":"YulVariableDeclaration","src":"5166:16:20","value":{"kind":"number","nativeSrc":"5181:1:20","nodeType":"YulLiteral","src":"5181:1:20","type":"","value":"0"},"variables":[{"name":"value_6","nativeSrc":"5170:7:20","nodeType":"YulTypedName","src":"5170:7:20","type":""}]},{"nativeSrc":"5191:44:20","nodeType":"YulAssignment","src":"5191:44:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5219:9:20","nodeType":"YulIdentifier","src":"5219:9:20"},{"kind":"number","nativeSrc":"5230:3:20","nodeType":"YulLiteral","src":"5230:3:20","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"5215:3:20","nodeType":"YulIdentifier","src":"5215:3:20"},"nativeSrc":"5215:19:20","nodeType":"YulFunctionCall","src":"5215:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"5202:12:20","nodeType":"YulIdentifier","src":"5202:12:20"},"nativeSrc":"5202:33:20","nodeType":"YulFunctionCall","src":"5202:33:20"},"variableNames":[{"name":"value_6","nativeSrc":"5191:7:20","nodeType":"YulIdentifier","src":"5191:7:20"}]},{"nativeSrc":"5244:17:20","nodeType":"YulAssignment","src":"5244:17:20","value":{"name":"value_6","nativeSrc":"5254:7:20","nodeType":"YulIdentifier","src":"5254:7:20"},"variableNames":[{"name":"value9","nativeSrc":"5244:6:20","nodeType":"YulIdentifier","src":"5244:6:20"}]},{"nativeSrc":"5270:16:20","nodeType":"YulVariableDeclaration","src":"5270:16:20","value":{"kind":"number","nativeSrc":"5285:1:20","nodeType":"YulLiteral","src":"5285:1:20","type":"","value":"0"},"variables":[{"name":"value_7","nativeSrc":"5274:7:20","nodeType":"YulTypedName","src":"5274:7:20","type":""}]},{"nativeSrc":"5295:44:20","nodeType":"YulAssignment","src":"5295:44:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5323:9:20","nodeType":"YulIdentifier","src":"5323:9:20"},{"kind":"number","nativeSrc":"5334:3:20","nodeType":"YulLiteral","src":"5334:3:20","type":"","value":"320"}],"functionName":{"name":"add","nativeSrc":"5319:3:20","nodeType":"YulIdentifier","src":"5319:3:20"},"nativeSrc":"5319:19:20","nodeType":"YulFunctionCall","src":"5319:19:20"}],"functionName":{"name":"calldataload","nativeSrc":"5306:12:20","nodeType":"YulIdentifier","src":"5306:12:20"},"nativeSrc":"5306:33:20","nodeType":"YulFunctionCall","src":"5306:33:20"},"variableNames":[{"name":"value_7","nativeSrc":"5295:7:20","nodeType":"YulIdentifier","src":"5295:7:20"}]},{"nativeSrc":"5348:18:20","nodeType":"YulAssignment","src":"5348:18:20","value":{"name":"value_7","nativeSrc":"5359:7:20","nodeType":"YulIdentifier","src":"5359:7:20"},"variableNames":[{"name":"value10","nativeSrc":"5348:7:20","nodeType":"YulIdentifier","src":"5348:7:20"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_memory_ptrt_uint8t_bytes32t_bytes32","nativeSrc":"3867:1505:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4016:9:20","nodeType":"YulTypedName","src":"4016:9:20","type":""},{"name":"dataEnd","nativeSrc":"4027:7:20","nodeType":"YulTypedName","src":"4027:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4039:6:20","nodeType":"YulTypedName","src":"4039:6:20","type":""},{"name":"value1","nativeSrc":"4047:6:20","nodeType":"YulTypedName","src":"4047:6:20","type":""},{"name":"value2","nativeSrc":"4055:6:20","nodeType":"YulTypedName","src":"4055:6:20","type":""},{"name":"value3","nativeSrc":"4063:6:20","nodeType":"YulTypedName","src":"4063:6:20","type":""},{"name":"value4","nativeSrc":"4071:6:20","nodeType":"YulTypedName","src":"4071:6:20","type":""},{"name":"value5","nativeSrc":"4079:6:20","nodeType":"YulTypedName","src":"4079:6:20","type":""},{"name":"value6","nativeSrc":"4087:6:20","nodeType":"YulTypedName","src":"4087:6:20","type":""},{"name":"value7","nativeSrc":"4095:6:20","nodeType":"YulTypedName","src":"4095:6:20","type":""},{"name":"value8","nativeSrc":"4103:6:20","nodeType":"YulTypedName","src":"4103:6:20","type":""},{"name":"value9","nativeSrc":"4111:6:20","nodeType":"YulTypedName","src":"4111:6:20","type":""},{"name":"value10","nativeSrc":"4119:7:20","nodeType":"YulTypedName","src":"4119:7:20","type":""}],"src":"3867:1505:20"},{"body":{"nativeSrc":"5478:76:20","nodeType":"YulBlock","src":"5478:76:20","statements":[{"nativeSrc":"5488:26:20","nodeType":"YulAssignment","src":"5488:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5500:9:20","nodeType":"YulIdentifier","src":"5500:9:20"},{"kind":"number","nativeSrc":"5511:2:20","nodeType":"YulLiteral","src":"5511:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5496:3:20","nodeType":"YulIdentifier","src":"5496:3:20"},"nativeSrc":"5496:18:20","nodeType":"YulFunctionCall","src":"5496:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5488:4:20","nodeType":"YulIdentifier","src":"5488:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5530:9:20","nodeType":"YulIdentifier","src":"5530:9:20"},{"name":"value0","nativeSrc":"5541:6:20","nodeType":"YulIdentifier","src":"5541:6:20"}],"functionName":{"name":"mstore","nativeSrc":"5523:6:20","nodeType":"YulIdentifier","src":"5523:6:20"},"nativeSrc":"5523:25:20","nodeType":"YulFunctionCall","src":"5523:25:20"},"nativeSrc":"5523:25:20","nodeType":"YulExpressionStatement","src":"5523:25:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5377:177:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5447:9:20","nodeType":"YulTypedName","src":"5447:9:20","type":""},{"name":"value0","nativeSrc":"5458:6:20","nodeType":"YulTypedName","src":"5458:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5469:4:20","nodeType":"YulTypedName","src":"5469:4:20","type":""}],"src":"5377:177:20"},{"body":{"nativeSrc":"5629:116:20","nodeType":"YulBlock","src":"5629:116:20","statements":[{"body":{"nativeSrc":"5675:16:20","nodeType":"YulBlock","src":"5675:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5684:1:20","nodeType":"YulLiteral","src":"5684:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5687:1:20","nodeType":"YulLiteral","src":"5687:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5677:6:20","nodeType":"YulIdentifier","src":"5677:6:20"},"nativeSrc":"5677:12:20","nodeType":"YulFunctionCall","src":"5677:12:20"},"nativeSrc":"5677:12:20","nodeType":"YulExpressionStatement","src":"5677:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5650:7:20","nodeType":"YulIdentifier","src":"5650:7:20"},{"name":"headStart","nativeSrc":"5659:9:20","nodeType":"YulIdentifier","src":"5659:9:20"}],"functionName":{"name":"sub","nativeSrc":"5646:3:20","nodeType":"YulIdentifier","src":"5646:3:20"},"nativeSrc":"5646:23:20","nodeType":"YulFunctionCall","src":"5646:23:20"},{"kind":"number","nativeSrc":"5671:2:20","nodeType":"YulLiteral","src":"5671:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5642:3:20","nodeType":"YulIdentifier","src":"5642:3:20"},"nativeSrc":"5642:32:20","nodeType":"YulFunctionCall","src":"5642:32:20"},"nativeSrc":"5639:52:20","nodeType":"YulIf","src":"5639:52:20"},{"nativeSrc":"5700:39:20","nodeType":"YulAssignment","src":"5700:39:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5729:9:20","nodeType":"YulIdentifier","src":"5729:9:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5710:18:20","nodeType":"YulIdentifier","src":"5710:18:20"},"nativeSrc":"5710:29:20","nodeType":"YulFunctionCall","src":"5710:29:20"},"variableNames":[{"name":"value0","nativeSrc":"5700:6:20","nodeType":"YulIdentifier","src":"5700:6:20"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5559:186:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5595:9:20","nodeType":"YulTypedName","src":"5595:9:20","type":""},{"name":"dataEnd","nativeSrc":"5606:7:20","nodeType":"YulTypedName","src":"5606:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5618:6:20","nodeType":"YulTypedName","src":"5618:6:20","type":""}],"src":"5559:186:20"},{"body":{"nativeSrc":"5851:102:20","nodeType":"YulBlock","src":"5851:102:20","statements":[{"nativeSrc":"5861:26:20","nodeType":"YulAssignment","src":"5861:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5873:9:20","nodeType":"YulIdentifier","src":"5873:9:20"},{"kind":"number","nativeSrc":"5884:2:20","nodeType":"YulLiteral","src":"5884:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5869:3:20","nodeType":"YulIdentifier","src":"5869:3:20"},"nativeSrc":"5869:18:20","nodeType":"YulFunctionCall","src":"5869:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5861:4:20","nodeType":"YulIdentifier","src":"5861:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5903:9:20","nodeType":"YulIdentifier","src":"5903:9:20"},{"arguments":[{"name":"value0","nativeSrc":"5918:6:20","nodeType":"YulIdentifier","src":"5918:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5934:3:20","nodeType":"YulLiteral","src":"5934:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"5939:1:20","nodeType":"YulLiteral","src":"5939:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5930:3:20","nodeType":"YulIdentifier","src":"5930:3:20"},"nativeSrc":"5930:11:20","nodeType":"YulFunctionCall","src":"5930:11:20"},{"kind":"number","nativeSrc":"5943:1:20","nodeType":"YulLiteral","src":"5943:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5926:3:20","nodeType":"YulIdentifier","src":"5926:3:20"},"nativeSrc":"5926:19:20","nodeType":"YulFunctionCall","src":"5926:19:20"}],"functionName":{"name":"and","nativeSrc":"5914:3:20","nodeType":"YulIdentifier","src":"5914:3:20"},"nativeSrc":"5914:32:20","nodeType":"YulFunctionCall","src":"5914:32:20"}],"functionName":{"name":"mstore","nativeSrc":"5896:6:20","nodeType":"YulIdentifier","src":"5896:6:20"},"nativeSrc":"5896:51:20","nodeType":"YulFunctionCall","src":"5896:51:20"},"nativeSrc":"5896:51:20","nodeType":"YulExpressionStatement","src":"5896:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5750:203:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5820:9:20","nodeType":"YulTypedName","src":"5820:9:20","type":""},{"name":"value0","nativeSrc":"5831:6:20","nodeType":"YulTypedName","src":"5831:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5842:4:20","nodeType":"YulTypedName","src":"5842:4:20","type":""}],"src":"5750:203:20"},{"body":{"nativeSrc":"6315:881:20","nodeType":"YulBlock","src":"6315:881:20","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6332:9:20","nodeType":"YulIdentifier","src":"6332:9:20"},{"arguments":[{"name":"value0","nativeSrc":"6347:6:20","nodeType":"YulIdentifier","src":"6347:6:20"},{"arguments":[{"kind":"number","nativeSrc":"6359:3:20","nodeType":"YulLiteral","src":"6359:3:20","type":"","value":"248"},{"kind":"number","nativeSrc":"6364:3:20","nodeType":"YulLiteral","src":"6364:3:20","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"6355:3:20","nodeType":"YulIdentifier","src":"6355:3:20"},"nativeSrc":"6355:13:20","nodeType":"YulFunctionCall","src":"6355:13:20"}],"functionName":{"name":"and","nativeSrc":"6343:3:20","nodeType":"YulIdentifier","src":"6343:3:20"},"nativeSrc":"6343:26:20","nodeType":"YulFunctionCall","src":"6343:26:20"}],"functionName":{"name":"mstore","nativeSrc":"6325:6:20","nodeType":"YulIdentifier","src":"6325:6:20"},"nativeSrc":"6325:45:20","nodeType":"YulFunctionCall","src":"6325:45:20"},"nativeSrc":"6325:45:20","nodeType":"YulExpressionStatement","src":"6325:45:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6390:9:20","nodeType":"YulIdentifier","src":"6390:9:20"},{"kind":"number","nativeSrc":"6401:2:20","nodeType":"YulLiteral","src":"6401:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6386:3:20","nodeType":"YulIdentifier","src":"6386:3:20"},"nativeSrc":"6386:18:20","nodeType":"YulFunctionCall","src":"6386:18:20"},{"kind":"number","nativeSrc":"6406:3:20","nodeType":"YulLiteral","src":"6406:3:20","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"6379:6:20","nodeType":"YulIdentifier","src":"6379:6:20"},"nativeSrc":"6379:31:20","nodeType":"YulFunctionCall","src":"6379:31:20"},"nativeSrc":"6379:31:20","nodeType":"YulExpressionStatement","src":"6379:31:20"},{"nativeSrc":"6419:60:20","nodeType":"YulVariableDeclaration","src":"6419:60:20","value":{"arguments":[{"name":"value1","nativeSrc":"6451:6:20","nodeType":"YulIdentifier","src":"6451:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"6463:9:20","nodeType":"YulIdentifier","src":"6463:9:20"},{"kind":"number","nativeSrc":"6474:3:20","nodeType":"YulLiteral","src":"6474:3:20","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"6459:3:20","nodeType":"YulIdentifier","src":"6459:3:20"},"nativeSrc":"6459:19:20","nodeType":"YulFunctionCall","src":"6459:19:20"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6433:17:20","nodeType":"YulIdentifier","src":"6433:17:20"},"nativeSrc":"6433:46:20","nodeType":"YulFunctionCall","src":"6433:46:20"},"variables":[{"name":"tail_1","nativeSrc":"6423:6:20","nodeType":"YulTypedName","src":"6423:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6499:9:20","nodeType":"YulIdentifier","src":"6499:9:20"},{"kind":"number","nativeSrc":"6510:2:20","nodeType":"YulLiteral","src":"6510:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6495:3:20","nodeType":"YulIdentifier","src":"6495:3:20"},"nativeSrc":"6495:18:20","nodeType":"YulFunctionCall","src":"6495:18:20"},{"arguments":[{"name":"tail_1","nativeSrc":"6519:6:20","nodeType":"YulIdentifier","src":"6519:6:20"},{"name":"headStart","nativeSrc":"6527:9:20","nodeType":"YulIdentifier","src":"6527:9:20"}],"functionName":{"name":"sub","nativeSrc":"6515:3:20","nodeType":"YulIdentifier","src":"6515:3:20"},"nativeSrc":"6515:22:20","nodeType":"YulFunctionCall","src":"6515:22:20"}],"functionName":{"name":"mstore","nativeSrc":"6488:6:20","nodeType":"YulIdentifier","src":"6488:6:20"},"nativeSrc":"6488:50:20","nodeType":"YulFunctionCall","src":"6488:50:20"},"nativeSrc":"6488:50:20","nodeType":"YulExpressionStatement","src":"6488:50:20"},{"nativeSrc":"6547:47:20","nodeType":"YulVariableDeclaration","src":"6547:47:20","value":{"arguments":[{"name":"value2","nativeSrc":"6579:6:20","nodeType":"YulIdentifier","src":"6579:6:20"},{"name":"tail_1","nativeSrc":"6587:6:20","nodeType":"YulIdentifier","src":"6587:6:20"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6561:17:20","nodeType":"YulIdentifier","src":"6561:17:20"},"nativeSrc":"6561:33:20","nodeType":"YulFunctionCall","src":"6561:33:20"},"variables":[{"name":"tail_2","nativeSrc":"6551:6:20","nodeType":"YulTypedName","src":"6551:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6614:9:20","nodeType":"YulIdentifier","src":"6614:9:20"},{"kind":"number","nativeSrc":"6625:2:20","nodeType":"YulLiteral","src":"6625:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6610:3:20","nodeType":"YulIdentifier","src":"6610:3:20"},"nativeSrc":"6610:18:20","nodeType":"YulFunctionCall","src":"6610:18:20"},{"name":"value3","nativeSrc":"6630:6:20","nodeType":"YulIdentifier","src":"6630:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6603:6:20","nodeType":"YulIdentifier","src":"6603:6:20"},"nativeSrc":"6603:34:20","nodeType":"YulFunctionCall","src":"6603:34:20"},"nativeSrc":"6603:34:20","nodeType":"YulExpressionStatement","src":"6603:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6657:9:20","nodeType":"YulIdentifier","src":"6657:9:20"},{"kind":"number","nativeSrc":"6668:3:20","nodeType":"YulLiteral","src":"6668:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6653:3:20","nodeType":"YulIdentifier","src":"6653:3:20"},"nativeSrc":"6653:19:20","nodeType":"YulFunctionCall","src":"6653:19:20"},{"arguments":[{"name":"value4","nativeSrc":"6678:6:20","nodeType":"YulIdentifier","src":"6678:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6694:3:20","nodeType":"YulLiteral","src":"6694:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"6699:1:20","nodeType":"YulLiteral","src":"6699:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6690:3:20","nodeType":"YulIdentifier","src":"6690:3:20"},"nativeSrc":"6690:11:20","nodeType":"YulFunctionCall","src":"6690:11:20"},{"kind":"number","nativeSrc":"6703:1:20","nodeType":"YulLiteral","src":"6703:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6686:3:20","nodeType":"YulIdentifier","src":"6686:3:20"},"nativeSrc":"6686:19:20","nodeType":"YulFunctionCall","src":"6686:19:20"}],"functionName":{"name":"and","nativeSrc":"6674:3:20","nodeType":"YulIdentifier","src":"6674:3:20"},"nativeSrc":"6674:32:20","nodeType":"YulFunctionCall","src":"6674:32:20"}],"functionName":{"name":"mstore","nativeSrc":"6646:6:20","nodeType":"YulIdentifier","src":"6646:6:20"},"nativeSrc":"6646:61:20","nodeType":"YulFunctionCall","src":"6646:61:20"},"nativeSrc":"6646:61:20","nodeType":"YulExpressionStatement","src":"6646:61:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6727:9:20","nodeType":"YulIdentifier","src":"6727:9:20"},{"kind":"number","nativeSrc":"6738:3:20","nodeType":"YulLiteral","src":"6738:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6723:3:20","nodeType":"YulIdentifier","src":"6723:3:20"},"nativeSrc":"6723:19:20","nodeType":"YulFunctionCall","src":"6723:19:20"},{"name":"value5","nativeSrc":"6744:6:20","nodeType":"YulIdentifier","src":"6744:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6716:6:20","nodeType":"YulIdentifier","src":"6716:6:20"},"nativeSrc":"6716:35:20","nodeType":"YulFunctionCall","src":"6716:35:20"},"nativeSrc":"6716:35:20","nodeType":"YulExpressionStatement","src":"6716:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6771:9:20","nodeType":"YulIdentifier","src":"6771:9:20"},{"kind":"number","nativeSrc":"6782:3:20","nodeType":"YulLiteral","src":"6782:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6767:3:20","nodeType":"YulIdentifier","src":"6767:3:20"},"nativeSrc":"6767:19:20","nodeType":"YulFunctionCall","src":"6767:19:20"},{"arguments":[{"name":"tail_2","nativeSrc":"6792:6:20","nodeType":"YulIdentifier","src":"6792:6:20"},{"name":"headStart","nativeSrc":"6800:9:20","nodeType":"YulIdentifier","src":"6800:9:20"}],"functionName":{"name":"sub","nativeSrc":"6788:3:20","nodeType":"YulIdentifier","src":"6788:3:20"},"nativeSrc":"6788:22:20","nodeType":"YulFunctionCall","src":"6788:22:20"}],"functionName":{"name":"mstore","nativeSrc":"6760:6:20","nodeType":"YulIdentifier","src":"6760:6:20"},"nativeSrc":"6760:51:20","nodeType":"YulFunctionCall","src":"6760:51:20"},"nativeSrc":"6760:51:20","nodeType":"YulExpressionStatement","src":"6760:51:20"},{"nativeSrc":"6820:17:20","nodeType":"YulVariableDeclaration","src":"6820:17:20","value":{"name":"tail_2","nativeSrc":"6831:6:20","nodeType":"YulIdentifier","src":"6831:6:20"},"variables":[{"name":"pos","nativeSrc":"6824:3:20","nodeType":"YulTypedName","src":"6824:3:20","type":""}]},{"nativeSrc":"6846:27:20","nodeType":"YulVariableDeclaration","src":"6846:27:20","value":{"arguments":[{"name":"value6","nativeSrc":"6866:6:20","nodeType":"YulIdentifier","src":"6866:6:20"}],"functionName":{"name":"mload","nativeSrc":"6860:5:20","nodeType":"YulIdentifier","src":"6860:5:20"},"nativeSrc":"6860:13:20","nodeType":"YulFunctionCall","src":"6860:13:20"},"variables":[{"name":"length","nativeSrc":"6850:6:20","nodeType":"YulTypedName","src":"6850:6:20","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"6889:6:20","nodeType":"YulIdentifier","src":"6889:6:20"},{"name":"length","nativeSrc":"6897:6:20","nodeType":"YulIdentifier","src":"6897:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6882:6:20","nodeType":"YulIdentifier","src":"6882:6:20"},"nativeSrc":"6882:22:20","nodeType":"YulFunctionCall","src":"6882:22:20"},"nativeSrc":"6882:22:20","nodeType":"YulExpressionStatement","src":"6882:22:20"},{"nativeSrc":"6913:22:20","nodeType":"YulAssignment","src":"6913:22:20","value":{"arguments":[{"name":"tail_2","nativeSrc":"6924:6:20","nodeType":"YulIdentifier","src":"6924:6:20"},{"kind":"number","nativeSrc":"6932:2:20","nodeType":"YulLiteral","src":"6932:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6920:3:20","nodeType":"YulIdentifier","src":"6920:3:20"},"nativeSrc":"6920:15:20","nodeType":"YulFunctionCall","src":"6920:15:20"},"variableNames":[{"name":"pos","nativeSrc":"6913:3:20","nodeType":"YulIdentifier","src":"6913:3:20"}]},{"nativeSrc":"6944:29:20","nodeType":"YulVariableDeclaration","src":"6944:29:20","value":{"arguments":[{"name":"value6","nativeSrc":"6962:6:20","nodeType":"YulIdentifier","src":"6962:6:20"},{"kind":"number","nativeSrc":"6970:2:20","nodeType":"YulLiteral","src":"6970:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6958:3:20","nodeType":"YulIdentifier","src":"6958:3:20"},"nativeSrc":"6958:15:20","nodeType":"YulFunctionCall","src":"6958:15:20"},"variables":[{"name":"srcPtr","nativeSrc":"6948:6:20","nodeType":"YulTypedName","src":"6948:6:20","type":""}]},{"nativeSrc":"6982:10:20","nodeType":"YulVariableDeclaration","src":"6982:10:20","value":{"kind":"number","nativeSrc":"6991:1:20","nodeType":"YulLiteral","src":"6991:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6986:1:20","nodeType":"YulTypedName","src":"6986:1:20","type":""}]},{"body":{"nativeSrc":"7050:120:20","nodeType":"YulBlock","src":"7050:120:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7071:3:20","nodeType":"YulIdentifier","src":"7071:3:20"},{"arguments":[{"name":"srcPtr","nativeSrc":"7082:6:20","nodeType":"YulIdentifier","src":"7082:6:20"}],"functionName":{"name":"mload","nativeSrc":"7076:5:20","nodeType":"YulIdentifier","src":"7076:5:20"},"nativeSrc":"7076:13:20","nodeType":"YulFunctionCall","src":"7076:13:20"}],"functionName":{"name":"mstore","nativeSrc":"7064:6:20","nodeType":"YulIdentifier","src":"7064:6:20"},"nativeSrc":"7064:26:20","nodeType":"YulFunctionCall","src":"7064:26:20"},"nativeSrc":"7064:26:20","nodeType":"YulExpressionStatement","src":"7064:26:20"},{"nativeSrc":"7103:19:20","nodeType":"YulAssignment","src":"7103:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"7114:3:20","nodeType":"YulIdentifier","src":"7114:3:20"},{"kind":"number","nativeSrc":"7119:2:20","nodeType":"YulLiteral","src":"7119:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7110:3:20","nodeType":"YulIdentifier","src":"7110:3:20"},"nativeSrc":"7110:12:20","nodeType":"YulFunctionCall","src":"7110:12:20"},"variableNames":[{"name":"pos","nativeSrc":"7103:3:20","nodeType":"YulIdentifier","src":"7103:3:20"}]},{"nativeSrc":"7135:25:20","nodeType":"YulAssignment","src":"7135:25:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7149:6:20","nodeType":"YulIdentifier","src":"7149:6:20"},{"kind":"number","nativeSrc":"7157:2:20","nodeType":"YulLiteral","src":"7157:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7145:3:20","nodeType":"YulIdentifier","src":"7145:3:20"},"nativeSrc":"7145:15:20","nodeType":"YulFunctionCall","src":"7145:15:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"7135:6:20","nodeType":"YulIdentifier","src":"7135:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7012:1:20","nodeType":"YulIdentifier","src":"7012:1:20"},{"name":"length","nativeSrc":"7015:6:20","nodeType":"YulIdentifier","src":"7015:6:20"}],"functionName":{"name":"lt","nativeSrc":"7009:2:20","nodeType":"YulIdentifier","src":"7009:2:20"},"nativeSrc":"7009:13:20","nodeType":"YulFunctionCall","src":"7009:13:20"},"nativeSrc":"7001:169:20","nodeType":"YulForLoop","post":{"nativeSrc":"7023:18:20","nodeType":"YulBlock","src":"7023:18:20","statements":[{"nativeSrc":"7025:14:20","nodeType":"YulAssignment","src":"7025:14:20","value":{"arguments":[{"name":"i","nativeSrc":"7034:1:20","nodeType":"YulIdentifier","src":"7034:1:20"},{"kind":"number","nativeSrc":"7037:1:20","nodeType":"YulLiteral","src":"7037:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7030:3:20","nodeType":"YulIdentifier","src":"7030:3:20"},"nativeSrc":"7030:9:20","nodeType":"YulFunctionCall","src":"7030:9:20"},"variableNames":[{"name":"i","nativeSrc":"7025:1:20","nodeType":"YulIdentifier","src":"7025:1:20"}]}]},"pre":{"nativeSrc":"7005:3:20","nodeType":"YulBlock","src":"7005:3:20","statements":[]},"src":"7001:169:20"},{"nativeSrc":"7179:11:20","nodeType":"YulAssignment","src":"7179:11:20","value":{"name":"pos","nativeSrc":"7187:3:20","nodeType":"YulIdentifier","src":"7187:3:20"},"variableNames":[{"name":"tail","nativeSrc":"7179:4:20","nodeType":"YulIdentifier","src":"7179:4:20"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"5958:1238:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6236:9:20","nodeType":"YulTypedName","src":"6236:9:20","type":""},{"name":"value6","nativeSrc":"6247:6:20","nodeType":"YulTypedName","src":"6247:6:20","type":""},{"name":"value5","nativeSrc":"6255:6:20","nodeType":"YulTypedName","src":"6255:6:20","type":""},{"name":"value4","nativeSrc":"6263:6:20","nodeType":"YulTypedName","src":"6263:6:20","type":""},{"name":"value3","nativeSrc":"6271:6:20","nodeType":"YulTypedName","src":"6271:6:20","type":""},{"name":"value2","nativeSrc":"6279:6:20","nodeType":"YulTypedName","src":"6279:6:20","type":""},{"name":"value1","nativeSrc":"6287:6:20","nodeType":"YulTypedName","src":"6287:6:20","type":""},{"name":"value0","nativeSrc":"6295:6:20","nodeType":"YulTypedName","src":"6295:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6306:4:20","nodeType":"YulTypedName","src":"6306:4:20","type":""}],"src":"5958:1238:20"},{"body":{"nativeSrc":"7288:173:20","nodeType":"YulBlock","src":"7288:173:20","statements":[{"body":{"nativeSrc":"7334:16:20","nodeType":"YulBlock","src":"7334:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7343:1:20","nodeType":"YulLiteral","src":"7343:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7346:1:20","nodeType":"YulLiteral","src":"7346:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7336:6:20","nodeType":"YulIdentifier","src":"7336:6:20"},"nativeSrc":"7336:12:20","nodeType":"YulFunctionCall","src":"7336:12:20"},"nativeSrc":"7336:12:20","nodeType":"YulExpressionStatement","src":"7336:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7309:7:20","nodeType":"YulIdentifier","src":"7309:7:20"},{"name":"headStart","nativeSrc":"7318:9:20","nodeType":"YulIdentifier","src":"7318:9:20"}],"functionName":{"name":"sub","nativeSrc":"7305:3:20","nodeType":"YulIdentifier","src":"7305:3:20"},"nativeSrc":"7305:23:20","nodeType":"YulFunctionCall","src":"7305:23:20"},{"kind":"number","nativeSrc":"7330:2:20","nodeType":"YulLiteral","src":"7330:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7301:3:20","nodeType":"YulIdentifier","src":"7301:3:20"},"nativeSrc":"7301:32:20","nodeType":"YulFunctionCall","src":"7301:32:20"},"nativeSrc":"7298:52:20","nodeType":"YulIf","src":"7298:52:20"},{"nativeSrc":"7359:39:20","nodeType":"YulAssignment","src":"7359:39:20","value":{"arguments":[{"name":"headStart","nativeSrc":"7388:9:20","nodeType":"YulIdentifier","src":"7388:9:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7369:18:20","nodeType":"YulIdentifier","src":"7369:18:20"},"nativeSrc":"7369:29:20","nodeType":"YulFunctionCall","src":"7369:29:20"},"variableNames":[{"name":"value0","nativeSrc":"7359:6:20","nodeType":"YulIdentifier","src":"7359:6:20"}]},{"nativeSrc":"7407:48:20","nodeType":"YulAssignment","src":"7407:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7440:9:20","nodeType":"YulIdentifier","src":"7440:9:20"},{"kind":"number","nativeSrc":"7451:2:20","nodeType":"YulLiteral","src":"7451:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7436:3:20","nodeType":"YulIdentifier","src":"7436:3:20"},"nativeSrc":"7436:18:20","nodeType":"YulFunctionCall","src":"7436:18:20"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7417:18:20","nodeType":"YulIdentifier","src":"7417:18:20"},"nativeSrc":"7417:38:20","nodeType":"YulFunctionCall","src":"7417:38:20"},"variableNames":[{"name":"value1","nativeSrc":"7407:6:20","nodeType":"YulIdentifier","src":"7407:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"7201:260:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7246:9:20","nodeType":"YulTypedName","src":"7246:9:20","type":""},{"name":"dataEnd","nativeSrc":"7257:7:20","nodeType":"YulTypedName","src":"7257:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7269:6:20","nodeType":"YulTypedName","src":"7269:6:20","type":""},{"name":"value1","nativeSrc":"7277:6:20","nodeType":"YulTypedName","src":"7277:6:20","type":""}],"src":"7201:260:20"},{"body":{"nativeSrc":"7521:325:20","nodeType":"YulBlock","src":"7521:325:20","statements":[{"nativeSrc":"7531:22:20","nodeType":"YulAssignment","src":"7531:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"7545:1:20","nodeType":"YulLiteral","src":"7545:1:20","type":"","value":"1"},{"name":"data","nativeSrc":"7548:4:20","nodeType":"YulIdentifier","src":"7548:4:20"}],"functionName":{"name":"shr","nativeSrc":"7541:3:20","nodeType":"YulIdentifier","src":"7541:3:20"},"nativeSrc":"7541:12:20","nodeType":"YulFunctionCall","src":"7541:12:20"},"variableNames":[{"name":"length","nativeSrc":"7531:6:20","nodeType":"YulIdentifier","src":"7531:6:20"}]},{"nativeSrc":"7562:38:20","nodeType":"YulVariableDeclaration","src":"7562:38:20","value":{"arguments":[{"name":"data","nativeSrc":"7592:4:20","nodeType":"YulIdentifier","src":"7592:4:20"},{"kind":"number","nativeSrc":"7598:1:20","nodeType":"YulLiteral","src":"7598:1:20","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7588:3:20","nodeType":"YulIdentifier","src":"7588:3:20"},"nativeSrc":"7588:12:20","nodeType":"YulFunctionCall","src":"7588:12:20"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"7566:18:20","nodeType":"YulTypedName","src":"7566:18:20","type":""}]},{"body":{"nativeSrc":"7639:31:20","nodeType":"YulBlock","src":"7639:31:20","statements":[{"nativeSrc":"7641:27:20","nodeType":"YulAssignment","src":"7641:27:20","value":{"arguments":[{"name":"length","nativeSrc":"7655:6:20","nodeType":"YulIdentifier","src":"7655:6:20"},{"kind":"number","nativeSrc":"7663:4:20","nodeType":"YulLiteral","src":"7663:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7651:3:20","nodeType":"YulIdentifier","src":"7651:3:20"},"nativeSrc":"7651:17:20","nodeType":"YulFunctionCall","src":"7651:17:20"},"variableNames":[{"name":"length","nativeSrc":"7641:6:20","nodeType":"YulIdentifier","src":"7641:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7619:18:20","nodeType":"YulIdentifier","src":"7619:18:20"}],"functionName":{"name":"iszero","nativeSrc":"7612:6:20","nodeType":"YulIdentifier","src":"7612:6:20"},"nativeSrc":"7612:26:20","nodeType":"YulFunctionCall","src":"7612:26:20"},"nativeSrc":"7609:61:20","nodeType":"YulIf","src":"7609:61:20"},{"body":{"nativeSrc":"7729:111:20","nodeType":"YulBlock","src":"7729:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7750:1:20","nodeType":"YulLiteral","src":"7750:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7757:3:20","nodeType":"YulLiteral","src":"7757:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"7762:10:20","nodeType":"YulLiteral","src":"7762:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7753:3:20","nodeType":"YulIdentifier","src":"7753:3:20"},"nativeSrc":"7753:20:20","nodeType":"YulFunctionCall","src":"7753:20:20"}],"functionName":{"name":"mstore","nativeSrc":"7743:6:20","nodeType":"YulIdentifier","src":"7743:6:20"},"nativeSrc":"7743:31:20","nodeType":"YulFunctionCall","src":"7743:31:20"},"nativeSrc":"7743:31:20","nodeType":"YulExpressionStatement","src":"7743:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7794:1:20","nodeType":"YulLiteral","src":"7794:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"7797:4:20","nodeType":"YulLiteral","src":"7797:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"7787:6:20","nodeType":"YulIdentifier","src":"7787:6:20"},"nativeSrc":"7787:15:20","nodeType":"YulFunctionCall","src":"7787:15:20"},"nativeSrc":"7787:15:20","nodeType":"YulExpressionStatement","src":"7787:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7822:1:20","nodeType":"YulLiteral","src":"7822:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7825:4:20","nodeType":"YulLiteral","src":"7825:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7815:6:20","nodeType":"YulIdentifier","src":"7815:6:20"},"nativeSrc":"7815:15:20","nodeType":"YulFunctionCall","src":"7815:15:20"},"nativeSrc":"7815:15:20","nodeType":"YulExpressionStatement","src":"7815:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7685:18:20","nodeType":"YulIdentifier","src":"7685:18:20"},{"arguments":[{"name":"length","nativeSrc":"7708:6:20","nodeType":"YulIdentifier","src":"7708:6:20"},{"kind":"number","nativeSrc":"7716:2:20","nodeType":"YulLiteral","src":"7716:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7705:2:20","nodeType":"YulIdentifier","src":"7705:2:20"},"nativeSrc":"7705:14:20","nodeType":"YulFunctionCall","src":"7705:14:20"}],"functionName":{"name":"eq","nativeSrc":"7682:2:20","nodeType":"YulIdentifier","src":"7682:2:20"},"nativeSrc":"7682:38:20","nodeType":"YulFunctionCall","src":"7682:38:20"},"nativeSrc":"7679:161:20","nodeType":"YulIf","src":"7679:161:20"}]},"name":"extract_byte_array_length","nativeSrc":"7466:380:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7501:4:20","nodeType":"YulTypedName","src":"7501:4:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7510:6:20","nodeType":"YulTypedName","src":"7510:6:20","type":""}],"src":"7466:380:20"},{"body":{"nativeSrc":"7883:95:20","nodeType":"YulBlock","src":"7883:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7900:1:20","nodeType":"YulLiteral","src":"7900:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7907:3:20","nodeType":"YulLiteral","src":"7907:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"7912:10:20","nodeType":"YulLiteral","src":"7912:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7903:3:20","nodeType":"YulIdentifier","src":"7903:3:20"},"nativeSrc":"7903:20:20","nodeType":"YulFunctionCall","src":"7903:20:20"}],"functionName":{"name":"mstore","nativeSrc":"7893:6:20","nodeType":"YulIdentifier","src":"7893:6:20"},"nativeSrc":"7893:31:20","nodeType":"YulFunctionCall","src":"7893:31:20"},"nativeSrc":"7893:31:20","nodeType":"YulExpressionStatement","src":"7893:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7940:1:20","nodeType":"YulLiteral","src":"7940:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"7943:4:20","nodeType":"YulLiteral","src":"7943:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7933:6:20","nodeType":"YulIdentifier","src":"7933:6:20"},"nativeSrc":"7933:15:20","nodeType":"YulFunctionCall","src":"7933:15:20"},"nativeSrc":"7933:15:20","nodeType":"YulExpressionStatement","src":"7933:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7964:1:20","nodeType":"YulLiteral","src":"7964:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7967:4:20","nodeType":"YulLiteral","src":"7967:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7957:6:20","nodeType":"YulIdentifier","src":"7957:6:20"},"nativeSrc":"7957:15:20","nodeType":"YulFunctionCall","src":"7957:15:20"},"nativeSrc":"7957:15:20","nodeType":"YulExpressionStatement","src":"7957:15:20"}]},"name":"panic_error_0x11","nativeSrc":"7851:127:20","nodeType":"YulFunctionDefinition","src":"7851:127:20"},{"body":{"nativeSrc":"8032:79:20","nodeType":"YulBlock","src":"8032:79:20","statements":[{"nativeSrc":"8042:17:20","nodeType":"YulAssignment","src":"8042:17:20","value":{"arguments":[{"name":"x","nativeSrc":"8054:1:20","nodeType":"YulIdentifier","src":"8054:1:20"},{"name":"y","nativeSrc":"8057:1:20","nodeType":"YulIdentifier","src":"8057:1:20"}],"functionName":{"name":"sub","nativeSrc":"8050:3:20","nodeType":"YulIdentifier","src":"8050:3:20"},"nativeSrc":"8050:9:20","nodeType":"YulFunctionCall","src":"8050:9:20"},"variableNames":[{"name":"diff","nativeSrc":"8042:4:20","nodeType":"YulIdentifier","src":"8042:4:20"}]},{"body":{"nativeSrc":"8083:22:20","nodeType":"YulBlock","src":"8083:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8085:16:20","nodeType":"YulIdentifier","src":"8085:16:20"},"nativeSrc":"8085:18:20","nodeType":"YulFunctionCall","src":"8085:18:20"},"nativeSrc":"8085:18:20","nodeType":"YulExpressionStatement","src":"8085:18:20"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"8074:4:20","nodeType":"YulIdentifier","src":"8074:4:20"},{"name":"x","nativeSrc":"8080:1:20","nodeType":"YulIdentifier","src":"8080:1:20"}],"functionName":{"name":"gt","nativeSrc":"8071:2:20","nodeType":"YulIdentifier","src":"8071:2:20"},"nativeSrc":"8071:11:20","nodeType":"YulFunctionCall","src":"8071:11:20"},"nativeSrc":"8068:37:20","nodeType":"YulIf","src":"8068:37:20"}]},"name":"checked_sub_t_uint256","nativeSrc":"7983:128:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8014:1:20","nodeType":"YulTypedName","src":"8014:1:20","type":""},{"name":"y","nativeSrc":"8017:1:20","nodeType":"YulTypedName","src":"8017:1:20","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"8023:4:20","nodeType":"YulTypedName","src":"8023:4:20","type":""}],"src":"7983:128:20"},{"body":{"nativeSrc":"8148:95:20","nodeType":"YulBlock","src":"8148:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8165:1:20","nodeType":"YulLiteral","src":"8165:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8172:3:20","nodeType":"YulLiteral","src":"8172:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"8177:10:20","nodeType":"YulLiteral","src":"8177:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8168:3:20","nodeType":"YulIdentifier","src":"8168:3:20"},"nativeSrc":"8168:20:20","nodeType":"YulFunctionCall","src":"8168:20:20"}],"functionName":{"name":"mstore","nativeSrc":"8158:6:20","nodeType":"YulIdentifier","src":"8158:6:20"},"nativeSrc":"8158:31:20","nodeType":"YulFunctionCall","src":"8158:31:20"},"nativeSrc":"8158:31:20","nodeType":"YulExpressionStatement","src":"8158:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8205:1:20","nodeType":"YulLiteral","src":"8205:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"8208:4:20","nodeType":"YulLiteral","src":"8208:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"8198:6:20","nodeType":"YulIdentifier","src":"8198:6:20"},"nativeSrc":"8198:15:20","nodeType":"YulFunctionCall","src":"8198:15:20"},"nativeSrc":"8198:15:20","nodeType":"YulExpressionStatement","src":"8198:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8229:1:20","nodeType":"YulLiteral","src":"8229:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"8232:4:20","nodeType":"YulLiteral","src":"8232:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8222:6:20","nodeType":"YulIdentifier","src":"8222:6:20"},"nativeSrc":"8222:15:20","nodeType":"YulFunctionCall","src":"8222:15:20"},"nativeSrc":"8222:15:20","nodeType":"YulExpressionStatement","src":"8222:15:20"}]},"name":"panic_error_0x32","nativeSrc":"8116:127:20","nodeType":"YulFunctionDefinition","src":"8116:127:20"},{"body":{"nativeSrc":"8405:188:20","nodeType":"YulBlock","src":"8405:188:20","statements":[{"nativeSrc":"8415:26:20","nodeType":"YulAssignment","src":"8415:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"8427:9:20","nodeType":"YulIdentifier","src":"8427:9:20"},{"kind":"number","nativeSrc":"8438:2:20","nodeType":"YulLiteral","src":"8438:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8423:3:20","nodeType":"YulIdentifier","src":"8423:3:20"},"nativeSrc":"8423:18:20","nodeType":"YulFunctionCall","src":"8423:18:20"},"variableNames":[{"name":"tail","nativeSrc":"8415:4:20","nodeType":"YulIdentifier","src":"8415:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8457:9:20","nodeType":"YulIdentifier","src":"8457:9:20"},{"arguments":[{"name":"value0","nativeSrc":"8472:6:20","nodeType":"YulIdentifier","src":"8472:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8488:3:20","nodeType":"YulLiteral","src":"8488:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"8493:1:20","nodeType":"YulLiteral","src":"8493:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8484:3:20","nodeType":"YulIdentifier","src":"8484:3:20"},"nativeSrc":"8484:11:20","nodeType":"YulFunctionCall","src":"8484:11:20"},{"kind":"number","nativeSrc":"8497:1:20","nodeType":"YulLiteral","src":"8497:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8480:3:20","nodeType":"YulIdentifier","src":"8480:3:20"},"nativeSrc":"8480:19:20","nodeType":"YulFunctionCall","src":"8480:19:20"}],"functionName":{"name":"and","nativeSrc":"8468:3:20","nodeType":"YulIdentifier","src":"8468:3:20"},"nativeSrc":"8468:32:20","nodeType":"YulFunctionCall","src":"8468:32:20"}],"functionName":{"name":"mstore","nativeSrc":"8450:6:20","nodeType":"YulIdentifier","src":"8450:6:20"},"nativeSrc":"8450:51:20","nodeType":"YulFunctionCall","src":"8450:51:20"},"nativeSrc":"8450:51:20","nodeType":"YulExpressionStatement","src":"8450:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8521:9:20","nodeType":"YulIdentifier","src":"8521:9:20"},{"kind":"number","nativeSrc":"8532:2:20","nodeType":"YulLiteral","src":"8532:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8517:3:20","nodeType":"YulIdentifier","src":"8517:3:20"},"nativeSrc":"8517:18:20","nodeType":"YulFunctionCall","src":"8517:18:20"},{"name":"value1","nativeSrc":"8537:6:20","nodeType":"YulIdentifier","src":"8537:6:20"}],"functionName":{"name":"mstore","nativeSrc":"8510:6:20","nodeType":"YulIdentifier","src":"8510:6:20"},"nativeSrc":"8510:34:20","nodeType":"YulFunctionCall","src":"8510:34:20"},"nativeSrc":"8510:34:20","nodeType":"YulExpressionStatement","src":"8510:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8564:9:20","nodeType":"YulIdentifier","src":"8564:9:20"},{"kind":"number","nativeSrc":"8575:2:20","nodeType":"YulLiteral","src":"8575:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8560:3:20","nodeType":"YulIdentifier","src":"8560:3:20"},"nativeSrc":"8560:18:20","nodeType":"YulFunctionCall","src":"8560:18:20"},{"name":"value2","nativeSrc":"8580:6:20","nodeType":"YulIdentifier","src":"8580:6:20"}],"functionName":{"name":"mstore","nativeSrc":"8553:6:20","nodeType":"YulIdentifier","src":"8553:6:20"},"nativeSrc":"8553:34:20","nodeType":"YulFunctionCall","src":"8553:34:20"},"nativeSrc":"8553:34:20","nodeType":"YulExpressionStatement","src":"8553:34:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8248:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8358:9:20","nodeType":"YulTypedName","src":"8358:9:20","type":""},{"name":"value2","nativeSrc":"8369:6:20","nodeType":"YulTypedName","src":"8369:6:20","type":""},{"name":"value1","nativeSrc":"8377:6:20","nodeType":"YulTypedName","src":"8377:6:20","type":""},{"name":"value0","nativeSrc":"8385:6:20","nodeType":"YulTypedName","src":"8385:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8396:4:20","nodeType":"YulTypedName","src":"8396:4:20","type":""}],"src":"8248:345:20"},{"body":{"nativeSrc":"8646:77:20","nodeType":"YulBlock","src":"8646:77:20","statements":[{"nativeSrc":"8656:16:20","nodeType":"YulAssignment","src":"8656:16:20","value":{"arguments":[{"name":"x","nativeSrc":"8667:1:20","nodeType":"YulIdentifier","src":"8667:1:20"},{"name":"y","nativeSrc":"8670:1:20","nodeType":"YulIdentifier","src":"8670:1:20"}],"functionName":{"name":"add","nativeSrc":"8663:3:20","nodeType":"YulIdentifier","src":"8663:3:20"},"nativeSrc":"8663:9:20","nodeType":"YulFunctionCall","src":"8663:9:20"},"variableNames":[{"name":"sum","nativeSrc":"8656:3:20","nodeType":"YulIdentifier","src":"8656:3:20"}]},{"body":{"nativeSrc":"8695:22:20","nodeType":"YulBlock","src":"8695:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8697:16:20","nodeType":"YulIdentifier","src":"8697:16:20"},"nativeSrc":"8697:18:20","nodeType":"YulFunctionCall","src":"8697:18:20"},"nativeSrc":"8697:18:20","nodeType":"YulExpressionStatement","src":"8697:18:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8687:1:20","nodeType":"YulIdentifier","src":"8687:1:20"},{"name":"sum","nativeSrc":"8690:3:20","nodeType":"YulIdentifier","src":"8690:3:20"}],"functionName":{"name":"gt","nativeSrc":"8684:2:20","nodeType":"YulIdentifier","src":"8684:2:20"},"nativeSrc":"8684:10:20","nodeType":"YulFunctionCall","src":"8684:10:20"},"nativeSrc":"8681:36:20","nodeType":"YulIf","src":"8681:36:20"}]},"name":"checked_add_t_uint256","nativeSrc":"8598:125:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8629:1:20","nodeType":"YulTypedName","src":"8629:1:20","type":""},{"name":"y","nativeSrc":"8632:1:20","nodeType":"YulTypedName","src":"8632:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"8638:3:20","nodeType":"YulTypedName","src":"8638:3:20","type":""}],"src":"8598:125:20"},{"body":{"nativeSrc":"8797:306:20","nodeType":"YulBlock","src":"8797:306:20","statements":[{"nativeSrc":"8807:10:20","nodeType":"YulAssignment","src":"8807:10:20","value":{"kind":"number","nativeSrc":"8816:1:20","nodeType":"YulLiteral","src":"8816:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8807:5:20","nodeType":"YulIdentifier","src":"8807:5:20"}]},{"nativeSrc":"8826:13:20","nodeType":"YulAssignment","src":"8826:13:20","value":{"name":"_base","nativeSrc":"8834:5:20","nodeType":"YulIdentifier","src":"8834:5:20"},"variableNames":[{"name":"base","nativeSrc":"8826:4:20","nodeType":"YulIdentifier","src":"8826:4:20"}]},{"body":{"nativeSrc":"8884:213:20","nodeType":"YulBlock","src":"8884:213:20","statements":[{"body":{"nativeSrc":"8926:22:20","nodeType":"YulBlock","src":"8926:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8928:16:20","nodeType":"YulIdentifier","src":"8928:16:20"},"nativeSrc":"8928:18:20","nodeType":"YulFunctionCall","src":"8928:18:20"},"nativeSrc":"8928:18:20","nodeType":"YulExpressionStatement","src":"8928:18:20"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"8904:4:20","nodeType":"YulIdentifier","src":"8904:4:20"},{"arguments":[{"name":"max","nativeSrc":"8914:3:20","nodeType":"YulIdentifier","src":"8914:3:20"},{"name":"base","nativeSrc":"8919:4:20","nodeType":"YulIdentifier","src":"8919:4:20"}],"functionName":{"name":"div","nativeSrc":"8910:3:20","nodeType":"YulIdentifier","src":"8910:3:20"},"nativeSrc":"8910:14:20","nodeType":"YulFunctionCall","src":"8910:14:20"}],"functionName":{"name":"gt","nativeSrc":"8901:2:20","nodeType":"YulIdentifier","src":"8901:2:20"},"nativeSrc":"8901:24:20","nodeType":"YulFunctionCall","src":"8901:24:20"},"nativeSrc":"8898:50:20","nodeType":"YulIf","src":"8898:50:20"},{"body":{"nativeSrc":"8981:29:20","nodeType":"YulBlock","src":"8981:29:20","statements":[{"nativeSrc":"8983:25:20","nodeType":"YulAssignment","src":"8983:25:20","value":{"arguments":[{"name":"power","nativeSrc":"8996:5:20","nodeType":"YulIdentifier","src":"8996:5:20"},{"name":"base","nativeSrc":"9003:4:20","nodeType":"YulIdentifier","src":"9003:4:20"}],"functionName":{"name":"mul","nativeSrc":"8992:3:20","nodeType":"YulIdentifier","src":"8992:3:20"},"nativeSrc":"8992:16:20","nodeType":"YulFunctionCall","src":"8992:16:20"},"variableNames":[{"name":"power","nativeSrc":"8983:5:20","nodeType":"YulIdentifier","src":"8983:5:20"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8968:8:20","nodeType":"YulIdentifier","src":"8968:8:20"},{"kind":"number","nativeSrc":"8978:1:20","nodeType":"YulLiteral","src":"8978:1:20","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"8964:3:20","nodeType":"YulIdentifier","src":"8964:3:20"},"nativeSrc":"8964:16:20","nodeType":"YulFunctionCall","src":"8964:16:20"},"nativeSrc":"8961:49:20","nodeType":"YulIf","src":"8961:49:20"},{"nativeSrc":"9023:23:20","nodeType":"YulAssignment","src":"9023:23:20","value":{"arguments":[{"name":"base","nativeSrc":"9035:4:20","nodeType":"YulIdentifier","src":"9035:4:20"},{"name":"base","nativeSrc":"9041:4:20","nodeType":"YulIdentifier","src":"9041:4:20"}],"functionName":{"name":"mul","nativeSrc":"9031:3:20","nodeType":"YulIdentifier","src":"9031:3:20"},"nativeSrc":"9031:15:20","nodeType":"YulFunctionCall","src":"9031:15:20"},"variableNames":[{"name":"base","nativeSrc":"9023:4:20","nodeType":"YulIdentifier","src":"9023:4:20"}]},{"nativeSrc":"9059:28:20","nodeType":"YulAssignment","src":"9059:28:20","value":{"arguments":[{"kind":"number","nativeSrc":"9075:1:20","nodeType":"YulLiteral","src":"9075:1:20","type":"","value":"1"},{"name":"exponent","nativeSrc":"9078:8:20","nodeType":"YulIdentifier","src":"9078:8:20"}],"functionName":{"name":"shr","nativeSrc":"9071:3:20","nodeType":"YulIdentifier","src":"9071:3:20"},"nativeSrc":"9071:16:20","nodeType":"YulFunctionCall","src":"9071:16:20"},"variableNames":[{"name":"exponent","nativeSrc":"9059:8:20","nodeType":"YulIdentifier","src":"9059:8:20"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8859:8:20","nodeType":"YulIdentifier","src":"8859:8:20"},{"kind":"number","nativeSrc":"8869:1:20","nodeType":"YulLiteral","src":"8869:1:20","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"8856:2:20","nodeType":"YulIdentifier","src":"8856:2:20"},"nativeSrc":"8856:15:20","nodeType":"YulFunctionCall","src":"8856:15:20"},"nativeSrc":"8848:249:20","nodeType":"YulForLoop","post":{"nativeSrc":"8872:3:20","nodeType":"YulBlock","src":"8872:3:20","statements":[]},"pre":{"nativeSrc":"8852:3:20","nodeType":"YulBlock","src":"8852:3:20","statements":[]},"src":"8848:249:20"}]},"name":"checked_exp_helper","nativeSrc":"8728:375:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"8756:5:20","nodeType":"YulTypedName","src":"8756:5:20","type":""},{"name":"exponent","nativeSrc":"8763:8:20","nodeType":"YulTypedName","src":"8763:8:20","type":""},{"name":"max","nativeSrc":"8773:3:20","nodeType":"YulTypedName","src":"8773:3:20","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8781:5:20","nodeType":"YulTypedName","src":"8781:5:20","type":""},{"name":"base","nativeSrc":"8788:4:20","nodeType":"YulTypedName","src":"8788:4:20","type":""}],"src":"8728:375:20"},{"body":{"nativeSrc":"9167:843:20","nodeType":"YulBlock","src":"9167:843:20","statements":[{"body":{"nativeSrc":"9205:52:20","nodeType":"YulBlock","src":"9205:52:20","statements":[{"nativeSrc":"9219:10:20","nodeType":"YulAssignment","src":"9219:10:20","value":{"kind":"number","nativeSrc":"9228:1:20","nodeType":"YulLiteral","src":"9228:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"9219:5:20","nodeType":"YulIdentifier","src":"9219:5:20"}]},{"nativeSrc":"9242:5:20","nodeType":"YulLeave","src":"9242:5:20"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9187:8:20","nodeType":"YulIdentifier","src":"9187:8:20"}],"functionName":{"name":"iszero","nativeSrc":"9180:6:20","nodeType":"YulIdentifier","src":"9180:6:20"},"nativeSrc":"9180:16:20","nodeType":"YulFunctionCall","src":"9180:16:20"},"nativeSrc":"9177:80:20","nodeType":"YulIf","src":"9177:80:20"},{"body":{"nativeSrc":"9290:52:20","nodeType":"YulBlock","src":"9290:52:20","statements":[{"nativeSrc":"9304:10:20","nodeType":"YulAssignment","src":"9304:10:20","value":{"kind":"number","nativeSrc":"9313:1:20","nodeType":"YulLiteral","src":"9313:1:20","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"9304:5:20","nodeType":"YulIdentifier","src":"9304:5:20"}]},{"nativeSrc":"9327:5:20","nodeType":"YulLeave","src":"9327:5:20"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"9276:4:20","nodeType":"YulIdentifier","src":"9276:4:20"}],"functionName":{"name":"iszero","nativeSrc":"9269:6:20","nodeType":"YulIdentifier","src":"9269:6:20"},"nativeSrc":"9269:12:20","nodeType":"YulFunctionCall","src":"9269:12:20"},"nativeSrc":"9266:76:20","nodeType":"YulIf","src":"9266:76:20"},{"cases":[{"body":{"nativeSrc":"9378:52:20","nodeType":"YulBlock","src":"9378:52:20","statements":[{"nativeSrc":"9392:10:20","nodeType":"YulAssignment","src":"9392:10:20","value":{"kind":"number","nativeSrc":"9401:1:20","nodeType":"YulLiteral","src":"9401:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"9392:5:20","nodeType":"YulIdentifier","src":"9392:5:20"}]},{"nativeSrc":"9415:5:20","nodeType":"YulLeave","src":"9415:5:20"}]},"nativeSrc":"9371:59:20","nodeType":"YulCase","src":"9371:59:20","value":{"kind":"number","nativeSrc":"9376:1:20","nodeType":"YulLiteral","src":"9376:1:20","type":"","value":"1"}},{"body":{"nativeSrc":"9446:167:20","nodeType":"YulBlock","src":"9446:167:20","statements":[{"body":{"nativeSrc":"9481:22:20","nodeType":"YulBlock","src":"9481:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9483:16:20","nodeType":"YulIdentifier","src":"9483:16:20"},"nativeSrc":"9483:18:20","nodeType":"YulFunctionCall","src":"9483:18:20"},"nativeSrc":"9483:18:20","nodeType":"YulExpressionStatement","src":"9483:18:20"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9466:8:20","nodeType":"YulIdentifier","src":"9466:8:20"},{"kind":"number","nativeSrc":"9476:3:20","nodeType":"YulLiteral","src":"9476:3:20","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"9463:2:20","nodeType":"YulIdentifier","src":"9463:2:20"},"nativeSrc":"9463:17:20","nodeType":"YulFunctionCall","src":"9463:17:20"},"nativeSrc":"9460:43:20","nodeType":"YulIf","src":"9460:43:20"},{"nativeSrc":"9516:25:20","nodeType":"YulAssignment","src":"9516:25:20","value":{"arguments":[{"name":"exponent","nativeSrc":"9529:8:20","nodeType":"YulIdentifier","src":"9529:8:20"},{"kind":"number","nativeSrc":"9539:1:20","nodeType":"YulLiteral","src":"9539:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9525:3:20","nodeType":"YulIdentifier","src":"9525:3:20"},"nativeSrc":"9525:16:20","nodeType":"YulFunctionCall","src":"9525:16:20"},"variableNames":[{"name":"power","nativeSrc":"9516:5:20","nodeType":"YulIdentifier","src":"9516:5:20"}]},{"nativeSrc":"9554:11:20","nodeType":"YulVariableDeclaration","src":"9554:11:20","value":{"kind":"number","nativeSrc":"9564:1:20","nodeType":"YulLiteral","src":"9564:1:20","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"9558:2:20","nodeType":"YulTypedName","src":"9558:2:20","type":""}]},{"nativeSrc":"9578:7:20","nodeType":"YulAssignment","src":"9578:7:20","value":{"kind":"number","nativeSrc":"9584:1:20","nodeType":"YulLiteral","src":"9584:1:20","type":"","value":"0"},"variableNames":[{"name":"_1","nativeSrc":"9578:2:20","nodeType":"YulIdentifier","src":"9578:2:20"}]},{"nativeSrc":"9598:5:20","nodeType":"YulLeave","src":"9598:5:20"}]},"nativeSrc":"9439:174:20","nodeType":"YulCase","src":"9439:174:20","value":{"kind":"number","nativeSrc":"9444:1:20","nodeType":"YulLiteral","src":"9444:1:20","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"9358:4:20","nodeType":"YulIdentifier","src":"9358:4:20"},"nativeSrc":"9351:262:20","nodeType":"YulSwitch","src":"9351:262:20"},{"body":{"nativeSrc":"9711:114:20","nodeType":"YulBlock","src":"9711:114:20","statements":[{"nativeSrc":"9725:28:20","nodeType":"YulAssignment","src":"9725:28:20","value":{"arguments":[{"name":"base","nativeSrc":"9738:4:20","nodeType":"YulIdentifier","src":"9738:4:20"},{"name":"exponent","nativeSrc":"9744:8:20","nodeType":"YulIdentifier","src":"9744:8:20"}],"functionName":{"name":"exp","nativeSrc":"9734:3:20","nodeType":"YulIdentifier","src":"9734:3:20"},"nativeSrc":"9734:19:20","nodeType":"YulFunctionCall","src":"9734:19:20"},"variableNames":[{"name":"power","nativeSrc":"9725:5:20","nodeType":"YulIdentifier","src":"9725:5:20"}]},{"nativeSrc":"9766:11:20","nodeType":"YulVariableDeclaration","src":"9766:11:20","value":{"kind":"number","nativeSrc":"9776:1:20","nodeType":"YulLiteral","src":"9776:1:20","type":"","value":"0"},"variables":[{"name":"_2","nativeSrc":"9770:2:20","nodeType":"YulTypedName","src":"9770:2:20","type":""}]},{"nativeSrc":"9790:7:20","nodeType":"YulAssignment","src":"9790:7:20","value":{"kind":"number","nativeSrc":"9796:1:20","nodeType":"YulLiteral","src":"9796:1:20","type":"","value":"0"},"variableNames":[{"name":"_2","nativeSrc":"9790:2:20","nodeType":"YulIdentifier","src":"9790:2:20"}]},{"nativeSrc":"9810:5:20","nodeType":"YulLeave","src":"9810:5:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"9635:4:20","nodeType":"YulIdentifier","src":"9635:4:20"},{"kind":"number","nativeSrc":"9641:2:20","nodeType":"YulLiteral","src":"9641:2:20","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"9632:2:20","nodeType":"YulIdentifier","src":"9632:2:20"},"nativeSrc":"9632:12:20","nodeType":"YulFunctionCall","src":"9632:12:20"},{"arguments":[{"name":"exponent","nativeSrc":"9649:8:20","nodeType":"YulIdentifier","src":"9649:8:20"},{"kind":"number","nativeSrc":"9659:2:20","nodeType":"YulLiteral","src":"9659:2:20","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"9646:2:20","nodeType":"YulIdentifier","src":"9646:2:20"},"nativeSrc":"9646:16:20","nodeType":"YulFunctionCall","src":"9646:16:20"}],"functionName":{"name":"and","nativeSrc":"9628:3:20","nodeType":"YulIdentifier","src":"9628:3:20"},"nativeSrc":"9628:35:20","nodeType":"YulFunctionCall","src":"9628:35:20"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"9672:4:20","nodeType":"YulIdentifier","src":"9672:4:20"},{"kind":"number","nativeSrc":"9678:3:20","nodeType":"YulLiteral","src":"9678:3:20","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"9669:2:20","nodeType":"YulIdentifier","src":"9669:2:20"},"nativeSrc":"9669:13:20","nodeType":"YulFunctionCall","src":"9669:13:20"},{"arguments":[{"name":"exponent","nativeSrc":"9687:8:20","nodeType":"YulIdentifier","src":"9687:8:20"},{"kind":"number","nativeSrc":"9697:2:20","nodeType":"YulLiteral","src":"9697:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9684:2:20","nodeType":"YulIdentifier","src":"9684:2:20"},"nativeSrc":"9684:16:20","nodeType":"YulFunctionCall","src":"9684:16:20"}],"functionName":{"name":"and","nativeSrc":"9665:3:20","nodeType":"YulIdentifier","src":"9665:3:20"},"nativeSrc":"9665:36:20","nodeType":"YulFunctionCall","src":"9665:36:20"}],"functionName":{"name":"or","nativeSrc":"9625:2:20","nodeType":"YulIdentifier","src":"9625:2:20"},"nativeSrc":"9625:77:20","nodeType":"YulFunctionCall","src":"9625:77:20"},"nativeSrc":"9622:203:20","nodeType":"YulIf","src":"9622:203:20"},{"nativeSrc":"9834:65:20","nodeType":"YulVariableDeclaration","src":"9834:65:20","value":{"arguments":[{"name":"base","nativeSrc":"9876:4:20","nodeType":"YulIdentifier","src":"9876:4:20"},{"name":"exponent","nativeSrc":"9882:8:20","nodeType":"YulIdentifier","src":"9882:8:20"},{"arguments":[{"kind":"number","nativeSrc":"9896:1:20","nodeType":"YulLiteral","src":"9896:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9892:3:20","nodeType":"YulIdentifier","src":"9892:3:20"},"nativeSrc":"9892:6:20","nodeType":"YulFunctionCall","src":"9892:6:20"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"9857:18:20","nodeType":"YulIdentifier","src":"9857:18:20"},"nativeSrc":"9857:42:20","nodeType":"YulFunctionCall","src":"9857:42:20"},"variables":[{"name":"power_1","nativeSrc":"9838:7:20","nodeType":"YulTypedName","src":"9838:7:20","type":""},{"name":"base_1","nativeSrc":"9847:6:20","nodeType":"YulTypedName","src":"9847:6:20","type":""}]},{"body":{"nativeSrc":"9944:22:20","nodeType":"YulBlock","src":"9944:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9946:16:20","nodeType":"YulIdentifier","src":"9946:16:20"},"nativeSrc":"9946:18:20","nodeType":"YulFunctionCall","src":"9946:18:20"},"nativeSrc":"9946:18:20","nodeType":"YulExpressionStatement","src":"9946:18:20"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"9914:7:20","nodeType":"YulIdentifier","src":"9914:7:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9931:1:20","nodeType":"YulLiteral","src":"9931:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9927:3:20","nodeType":"YulIdentifier","src":"9927:3:20"},"nativeSrc":"9927:6:20","nodeType":"YulFunctionCall","src":"9927:6:20"},{"name":"base_1","nativeSrc":"9935:6:20","nodeType":"YulIdentifier","src":"9935:6:20"}],"functionName":{"name":"div","nativeSrc":"9923:3:20","nodeType":"YulIdentifier","src":"9923:3:20"},"nativeSrc":"9923:19:20","nodeType":"YulFunctionCall","src":"9923:19:20"}],"functionName":{"name":"gt","nativeSrc":"9911:2:20","nodeType":"YulIdentifier","src":"9911:2:20"},"nativeSrc":"9911:32:20","nodeType":"YulFunctionCall","src":"9911:32:20"},"nativeSrc":"9908:58:20","nodeType":"YulIf","src":"9908:58:20"},{"nativeSrc":"9975:29:20","nodeType":"YulAssignment","src":"9975:29:20","value":{"arguments":[{"name":"power_1","nativeSrc":"9988:7:20","nodeType":"YulIdentifier","src":"9988:7:20"},{"name":"base_1","nativeSrc":"9997:6:20","nodeType":"YulIdentifier","src":"9997:6:20"}],"functionName":{"name":"mul","nativeSrc":"9984:3:20","nodeType":"YulIdentifier","src":"9984:3:20"},"nativeSrc":"9984:20:20","nodeType":"YulFunctionCall","src":"9984:20:20"},"variableNames":[{"name":"power","nativeSrc":"9975:5:20","nodeType":"YulIdentifier","src":"9975:5:20"}]}]},"name":"checked_exp_unsigned","nativeSrc":"9108:902:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9138:4:20","nodeType":"YulTypedName","src":"9138:4:20","type":""},{"name":"exponent","nativeSrc":"9144:8:20","nodeType":"YulTypedName","src":"9144:8:20","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9157:5:20","nodeType":"YulTypedName","src":"9157:5:20","type":""}],"src":"9108:902:20"},{"body":{"nativeSrc":"10083:72:20","nodeType":"YulBlock","src":"10083:72:20","statements":[{"nativeSrc":"10093:56:20","nodeType":"YulAssignment","src":"10093:56:20","value":{"arguments":[{"name":"base","nativeSrc":"10123:4:20","nodeType":"YulIdentifier","src":"10123:4:20"},{"arguments":[{"name":"exponent","nativeSrc":"10133:8:20","nodeType":"YulIdentifier","src":"10133:8:20"},{"kind":"number","nativeSrc":"10143:4:20","nodeType":"YulLiteral","src":"10143:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"10129:3:20","nodeType":"YulIdentifier","src":"10129:3:20"},"nativeSrc":"10129:19:20","nodeType":"YulFunctionCall","src":"10129:19:20"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"10102:20:20","nodeType":"YulIdentifier","src":"10102:20:20"},"nativeSrc":"10102:47:20","nodeType":"YulFunctionCall","src":"10102:47:20"},"variableNames":[{"name":"power","nativeSrc":"10093:5:20","nodeType":"YulIdentifier","src":"10093:5:20"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"10015:140:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"10054:4:20","nodeType":"YulTypedName","src":"10054:4:20","type":""},{"name":"exponent","nativeSrc":"10060:8:20","nodeType":"YulTypedName","src":"10060:8:20","type":""}],"returnVariables":[{"name":"power","nativeSrc":"10073:5:20","nodeType":"YulTypedName","src":"10073:5:20","type":""}],"src":"10015:140:20"},{"body":{"nativeSrc":"10212:116:20","nodeType":"YulBlock","src":"10212:116:20","statements":[{"nativeSrc":"10222:20:20","nodeType":"YulAssignment","src":"10222:20:20","value":{"arguments":[{"name":"x","nativeSrc":"10237:1:20","nodeType":"YulIdentifier","src":"10237:1:20"},{"name":"y","nativeSrc":"10240:1:20","nodeType":"YulIdentifier","src":"10240:1:20"}],"functionName":{"name":"mul","nativeSrc":"10233:3:20","nodeType":"YulIdentifier","src":"10233:3:20"},"nativeSrc":"10233:9:20","nodeType":"YulFunctionCall","src":"10233:9:20"},"variableNames":[{"name":"product","nativeSrc":"10222:7:20","nodeType":"YulIdentifier","src":"10222:7:20"}]},{"body":{"nativeSrc":"10300:22:20","nodeType":"YulBlock","src":"10300:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10302:16:20","nodeType":"YulIdentifier","src":"10302:16:20"},"nativeSrc":"10302:18:20","nodeType":"YulFunctionCall","src":"10302:18:20"},"nativeSrc":"10302:18:20","nodeType":"YulExpressionStatement","src":"10302:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10271:1:20","nodeType":"YulIdentifier","src":"10271:1:20"}],"functionName":{"name":"iszero","nativeSrc":"10264:6:20","nodeType":"YulIdentifier","src":"10264:6:20"},"nativeSrc":"10264:9:20","nodeType":"YulFunctionCall","src":"10264:9:20"},{"arguments":[{"name":"y","nativeSrc":"10278:1:20","nodeType":"YulIdentifier","src":"10278:1:20"},{"arguments":[{"name":"product","nativeSrc":"10285:7:20","nodeType":"YulIdentifier","src":"10285:7:20"},{"name":"x","nativeSrc":"10294:1:20","nodeType":"YulIdentifier","src":"10294:1:20"}],"functionName":{"name":"div","nativeSrc":"10281:3:20","nodeType":"YulIdentifier","src":"10281:3:20"},"nativeSrc":"10281:15:20","nodeType":"YulFunctionCall","src":"10281:15:20"}],"functionName":{"name":"eq","nativeSrc":"10275:2:20","nodeType":"YulIdentifier","src":"10275:2:20"},"nativeSrc":"10275:22:20","nodeType":"YulFunctionCall","src":"10275:22:20"}],"functionName":{"name":"or","nativeSrc":"10261:2:20","nodeType":"YulIdentifier","src":"10261:2:20"},"nativeSrc":"10261:37:20","nodeType":"YulFunctionCall","src":"10261:37:20"}],"functionName":{"name":"iszero","nativeSrc":"10254:6:20","nodeType":"YulIdentifier","src":"10254:6:20"},"nativeSrc":"10254:45:20","nodeType":"YulFunctionCall","src":"10254:45:20"},"nativeSrc":"10251:71:20","nodeType":"YulIf","src":"10251:71:20"}]},"name":"checked_mul_t_uint256","nativeSrc":"10160:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10191:1:20","nodeType":"YulTypedName","src":"10191:1:20","type":""},{"name":"y","nativeSrc":"10194:1:20","nodeType":"YulTypedName","src":"10194:1:20","type":""}],"returnVariables":[{"name":"product","nativeSrc":"10200:7:20","nodeType":"YulTypedName","src":"10200:7:20","type":""}],"src":"10160:168:20"},{"body":{"nativeSrc":"10365:95:20","nodeType":"YulBlock","src":"10365:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10382:1:20","nodeType":"YulLiteral","src":"10382:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10389:3:20","nodeType":"YulLiteral","src":"10389:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"10394:10:20","nodeType":"YulLiteral","src":"10394:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10385:3:20","nodeType":"YulIdentifier","src":"10385:3:20"},"nativeSrc":"10385:20:20","nodeType":"YulFunctionCall","src":"10385:20:20"}],"functionName":{"name":"mstore","nativeSrc":"10375:6:20","nodeType":"YulIdentifier","src":"10375:6:20"},"nativeSrc":"10375:31:20","nodeType":"YulFunctionCall","src":"10375:31:20"},"nativeSrc":"10375:31:20","nodeType":"YulExpressionStatement","src":"10375:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10422:1:20","nodeType":"YulLiteral","src":"10422:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"10425:4:20","nodeType":"YulLiteral","src":"10425:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"10415:6:20","nodeType":"YulIdentifier","src":"10415:6:20"},"nativeSrc":"10415:15:20","nodeType":"YulFunctionCall","src":"10415:15:20"},"nativeSrc":"10415:15:20","nodeType":"YulExpressionStatement","src":"10415:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10446:1:20","nodeType":"YulLiteral","src":"10446:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10449:4:20","nodeType":"YulLiteral","src":"10449:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10439:6:20","nodeType":"YulIdentifier","src":"10439:6:20"},"nativeSrc":"10439:15:20","nodeType":"YulFunctionCall","src":"10439:15:20"},"nativeSrc":"10439:15:20","nodeType":"YulExpressionStatement","src":"10439:15:20"}]},"name":"panic_error_0x12","nativeSrc":"10333:127:20","nodeType":"YulFunctionDefinition","src":"10333:127:20"},{"body":{"nativeSrc":"10511:74:20","nodeType":"YulBlock","src":"10511:74:20","statements":[{"body":{"nativeSrc":"10534:22:20","nodeType":"YulBlock","src":"10534:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"10536:16:20","nodeType":"YulIdentifier","src":"10536:16:20"},"nativeSrc":"10536:18:20","nodeType":"YulFunctionCall","src":"10536:18:20"},"nativeSrc":"10536:18:20","nodeType":"YulExpressionStatement","src":"10536:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"10531:1:20","nodeType":"YulIdentifier","src":"10531:1:20"}],"functionName":{"name":"iszero","nativeSrc":"10524:6:20","nodeType":"YulIdentifier","src":"10524:6:20"},"nativeSrc":"10524:9:20","nodeType":"YulFunctionCall","src":"10524:9:20"},"nativeSrc":"10521:35:20","nodeType":"YulIf","src":"10521:35:20"},{"nativeSrc":"10565:14:20","nodeType":"YulAssignment","src":"10565:14:20","value":{"arguments":[{"name":"x","nativeSrc":"10574:1:20","nodeType":"YulIdentifier","src":"10574:1:20"},{"name":"y","nativeSrc":"10577:1:20","nodeType":"YulIdentifier","src":"10577:1:20"}],"functionName":{"name":"div","nativeSrc":"10570:3:20","nodeType":"YulIdentifier","src":"10570:3:20"},"nativeSrc":"10570:9:20","nodeType":"YulFunctionCall","src":"10570:9:20"},"variableNames":[{"name":"r","nativeSrc":"10565:1:20","nodeType":"YulIdentifier","src":"10565:1:20"}]}]},"name":"checked_div_t_uint256","nativeSrc":"10465:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10496:1:20","nodeType":"YulTypedName","src":"10496:1:20","type":""},{"name":"y","nativeSrc":"10499:1:20","nodeType":"YulTypedName","src":"10499:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"10505:1:20","nodeType":"YulTypedName","src":"10505:1:20","type":""}],"src":"10465:120:20"},{"body":{"nativeSrc":"10859:390:20","nodeType":"YulBlock","src":"10859:390:20","statements":[{"nativeSrc":"10869:27:20","nodeType":"YulAssignment","src":"10869:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10881:9:20","nodeType":"YulIdentifier","src":"10881:9:20"},{"kind":"number","nativeSrc":"10892:3:20","nodeType":"YulLiteral","src":"10892:3:20","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"10877:3:20","nodeType":"YulIdentifier","src":"10877:3:20"},"nativeSrc":"10877:19:20","nodeType":"YulFunctionCall","src":"10877:19:20"},"variableNames":[{"name":"tail","nativeSrc":"10869:4:20","nodeType":"YulIdentifier","src":"10869:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10912:9:20","nodeType":"YulIdentifier","src":"10912:9:20"},{"name":"value0","nativeSrc":"10923:6:20","nodeType":"YulIdentifier","src":"10923:6:20"}],"functionName":{"name":"mstore","nativeSrc":"10905:6:20","nodeType":"YulIdentifier","src":"10905:6:20"},"nativeSrc":"10905:25:20","nodeType":"YulFunctionCall","src":"10905:25:20"},"nativeSrc":"10905:25:20","nodeType":"YulExpressionStatement","src":"10905:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10950:9:20","nodeType":"YulIdentifier","src":"10950:9:20"},{"kind":"number","nativeSrc":"10961:2:20","nodeType":"YulLiteral","src":"10961:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10946:3:20","nodeType":"YulIdentifier","src":"10946:3:20"},"nativeSrc":"10946:18:20","nodeType":"YulFunctionCall","src":"10946:18:20"},{"arguments":[{"name":"value1","nativeSrc":"10970:6:20","nodeType":"YulIdentifier","src":"10970:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10986:3:20","nodeType":"YulLiteral","src":"10986:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"10991:1:20","nodeType":"YulLiteral","src":"10991:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10982:3:20","nodeType":"YulIdentifier","src":"10982:3:20"},"nativeSrc":"10982:11:20","nodeType":"YulFunctionCall","src":"10982:11:20"},{"kind":"number","nativeSrc":"10995:1:20","nodeType":"YulLiteral","src":"10995:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10978:3:20","nodeType":"YulIdentifier","src":"10978:3:20"},"nativeSrc":"10978:19:20","nodeType":"YulFunctionCall","src":"10978:19:20"}],"functionName":{"name":"and","nativeSrc":"10966:3:20","nodeType":"YulIdentifier","src":"10966:3:20"},"nativeSrc":"10966:32:20","nodeType":"YulFunctionCall","src":"10966:32:20"}],"functionName":{"name":"mstore","nativeSrc":"10939:6:20","nodeType":"YulIdentifier","src":"10939:6:20"},"nativeSrc":"10939:60:20","nodeType":"YulFunctionCall","src":"10939:60:20"},"nativeSrc":"10939:60:20","nodeType":"YulExpressionStatement","src":"10939:60:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11019:9:20","nodeType":"YulIdentifier","src":"11019:9:20"},{"kind":"number","nativeSrc":"11030:2:20","nodeType":"YulLiteral","src":"11030:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11015:3:20","nodeType":"YulIdentifier","src":"11015:3:20"},"nativeSrc":"11015:18:20","nodeType":"YulFunctionCall","src":"11015:18:20"},{"arguments":[{"name":"value2","nativeSrc":"11039:6:20","nodeType":"YulIdentifier","src":"11039:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11055:3:20","nodeType":"YulLiteral","src":"11055:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"11060:1:20","nodeType":"YulLiteral","src":"11060:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11051:3:20","nodeType":"YulIdentifier","src":"11051:3:20"},"nativeSrc":"11051:11:20","nodeType":"YulFunctionCall","src":"11051:11:20"},{"kind":"number","nativeSrc":"11064:1:20","nodeType":"YulLiteral","src":"11064:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11047:3:20","nodeType":"YulIdentifier","src":"11047:3:20"},"nativeSrc":"11047:19:20","nodeType":"YulFunctionCall","src":"11047:19:20"}],"functionName":{"name":"and","nativeSrc":"11035:3:20","nodeType":"YulIdentifier","src":"11035:3:20"},"nativeSrc":"11035:32:20","nodeType":"YulFunctionCall","src":"11035:32:20"}],"functionName":{"name":"mstore","nativeSrc":"11008:6:20","nodeType":"YulIdentifier","src":"11008:6:20"},"nativeSrc":"11008:60:20","nodeType":"YulFunctionCall","src":"11008:60:20"},"nativeSrc":"11008:60:20","nodeType":"YulExpressionStatement","src":"11008:60:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11088:9:20","nodeType":"YulIdentifier","src":"11088:9:20"},{"kind":"number","nativeSrc":"11099:2:20","nodeType":"YulLiteral","src":"11099:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11084:3:20","nodeType":"YulIdentifier","src":"11084:3:20"},"nativeSrc":"11084:18:20","nodeType":"YulFunctionCall","src":"11084:18:20"},{"name":"value3","nativeSrc":"11104:6:20","nodeType":"YulIdentifier","src":"11104:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11077:6:20","nodeType":"YulIdentifier","src":"11077:6:20"},"nativeSrc":"11077:34:20","nodeType":"YulFunctionCall","src":"11077:34:20"},"nativeSrc":"11077:34:20","nodeType":"YulExpressionStatement","src":"11077:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11131:9:20","nodeType":"YulIdentifier","src":"11131:9:20"},{"kind":"number","nativeSrc":"11142:3:20","nodeType":"YulLiteral","src":"11142:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11127:3:20","nodeType":"YulIdentifier","src":"11127:3:20"},"nativeSrc":"11127:19:20","nodeType":"YulFunctionCall","src":"11127:19:20"},{"name":"value4","nativeSrc":"11148:6:20","nodeType":"YulIdentifier","src":"11148:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11120:6:20","nodeType":"YulIdentifier","src":"11120:6:20"},"nativeSrc":"11120:35:20","nodeType":"YulFunctionCall","src":"11120:35:20"},"nativeSrc":"11120:35:20","nodeType":"YulExpressionStatement","src":"11120:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11175:9:20","nodeType":"YulIdentifier","src":"11175:9:20"},{"kind":"number","nativeSrc":"11186:3:20","nodeType":"YulLiteral","src":"11186:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11171:3:20","nodeType":"YulIdentifier","src":"11171:3:20"},"nativeSrc":"11171:19:20","nodeType":"YulFunctionCall","src":"11171:19:20"},{"name":"value5","nativeSrc":"11192:6:20","nodeType":"YulIdentifier","src":"11192:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11164:6:20","nodeType":"YulIdentifier","src":"11164:6:20"},"nativeSrc":"11164:35:20","nodeType":"YulFunctionCall","src":"11164:35:20"},"nativeSrc":"11164:35:20","nodeType":"YulExpressionStatement","src":"11164:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11219:9:20","nodeType":"YulIdentifier","src":"11219:9:20"},{"kind":"number","nativeSrc":"11230:3:20","nodeType":"YulLiteral","src":"11230:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11215:3:20","nodeType":"YulIdentifier","src":"11215:3:20"},"nativeSrc":"11215:19:20","nodeType":"YulFunctionCall","src":"11215:19:20"},{"name":"value6","nativeSrc":"11236:6:20","nodeType":"YulIdentifier","src":"11236:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11208:6:20","nodeType":"YulIdentifier","src":"11208:6:20"},"nativeSrc":"11208:35:20","nodeType":"YulFunctionCall","src":"11208:35:20"},"nativeSrc":"11208:35:20","nodeType":"YulExpressionStatement","src":"11208:35:20"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"10590:659:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10780:9:20","nodeType":"YulTypedName","src":"10780:9:20","type":""},{"name":"value6","nativeSrc":"10791:6:20","nodeType":"YulTypedName","src":"10791:6:20","type":""},{"name":"value5","nativeSrc":"10799:6:20","nodeType":"YulTypedName","src":"10799:6:20","type":""},{"name":"value4","nativeSrc":"10807:6:20","nodeType":"YulTypedName","src":"10807:6:20","type":""},{"name":"value3","nativeSrc":"10815:6:20","nodeType":"YulTypedName","src":"10815:6:20","type":""},{"name":"value2","nativeSrc":"10823:6:20","nodeType":"YulTypedName","src":"10823:6:20","type":""},{"name":"value1","nativeSrc":"10831:6:20","nodeType":"YulTypedName","src":"10831:6:20","type":""},{"name":"value0","nativeSrc":"10839:6:20","nodeType":"YulTypedName","src":"10839:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10850:4:20","nodeType":"YulTypedName","src":"10850:4:20","type":""}],"src":"10590:659:20"},{"body":{"nativeSrc":"11292:74:20","nodeType":"YulBlock","src":"11292:74:20","statements":[{"body":{"nativeSrc":"11315:22:20","nodeType":"YulBlock","src":"11315:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"11317:16:20","nodeType":"YulIdentifier","src":"11317:16:20"},"nativeSrc":"11317:18:20","nodeType":"YulFunctionCall","src":"11317:18:20"},"nativeSrc":"11317:18:20","nodeType":"YulExpressionStatement","src":"11317:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"11312:1:20","nodeType":"YulIdentifier","src":"11312:1:20"}],"functionName":{"name":"iszero","nativeSrc":"11305:6:20","nodeType":"YulIdentifier","src":"11305:6:20"},"nativeSrc":"11305:9:20","nodeType":"YulFunctionCall","src":"11305:9:20"},"nativeSrc":"11302:35:20","nodeType":"YulIf","src":"11302:35:20"},{"nativeSrc":"11346:14:20","nodeType":"YulAssignment","src":"11346:14:20","value":{"arguments":[{"name":"x","nativeSrc":"11355:1:20","nodeType":"YulIdentifier","src":"11355:1:20"},{"name":"y","nativeSrc":"11358:1:20","nodeType":"YulIdentifier","src":"11358:1:20"}],"functionName":{"name":"mod","nativeSrc":"11351:3:20","nodeType":"YulIdentifier","src":"11351:3:20"},"nativeSrc":"11351:9:20","nodeType":"YulFunctionCall","src":"11351:9:20"},"variableNames":[{"name":"r","nativeSrc":"11346:1:20","nodeType":"YulIdentifier","src":"11346:1:20"}]}]},"name":"mod_t_uint256","nativeSrc":"11254:112:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11277:1:20","nodeType":"YulTypedName","src":"11277:1:20","type":""},{"name":"y","nativeSrc":"11280:1:20","nodeType":"YulTypedName","src":"11280:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"11286:1:20","nodeType":"YulTypedName","src":"11286:1:20","type":""}],"src":"11254:112:20"},{"body":{"nativeSrc":"11528:188:20","nodeType":"YulBlock","src":"11528:188:20","statements":[{"nativeSrc":"11538:26:20","nodeType":"YulAssignment","src":"11538:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11550:9:20","nodeType":"YulIdentifier","src":"11550:9:20"},{"kind":"number","nativeSrc":"11561:2:20","nodeType":"YulLiteral","src":"11561:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11546:3:20","nodeType":"YulIdentifier","src":"11546:3:20"},"nativeSrc":"11546:18:20","nodeType":"YulFunctionCall","src":"11546:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11538:4:20","nodeType":"YulIdentifier","src":"11538:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11580:9:20","nodeType":"YulIdentifier","src":"11580:9:20"},{"name":"value0","nativeSrc":"11591:6:20","nodeType":"YulIdentifier","src":"11591:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11573:6:20","nodeType":"YulIdentifier","src":"11573:6:20"},"nativeSrc":"11573:25:20","nodeType":"YulFunctionCall","src":"11573:25:20"},"nativeSrc":"11573:25:20","nodeType":"YulExpressionStatement","src":"11573:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11618:9:20","nodeType":"YulIdentifier","src":"11618:9:20"},{"kind":"number","nativeSrc":"11629:2:20","nodeType":"YulLiteral","src":"11629:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11614:3:20","nodeType":"YulIdentifier","src":"11614:3:20"},"nativeSrc":"11614:18:20","nodeType":"YulFunctionCall","src":"11614:18:20"},{"arguments":[{"name":"value1","nativeSrc":"11638:6:20","nodeType":"YulIdentifier","src":"11638:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11654:3:20","nodeType":"YulLiteral","src":"11654:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"11659:1:20","nodeType":"YulLiteral","src":"11659:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11650:3:20","nodeType":"YulIdentifier","src":"11650:3:20"},"nativeSrc":"11650:11:20","nodeType":"YulFunctionCall","src":"11650:11:20"},{"kind":"number","nativeSrc":"11663:1:20","nodeType":"YulLiteral","src":"11663:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11646:3:20","nodeType":"YulIdentifier","src":"11646:3:20"},"nativeSrc":"11646:19:20","nodeType":"YulFunctionCall","src":"11646:19:20"}],"functionName":{"name":"and","nativeSrc":"11634:3:20","nodeType":"YulIdentifier","src":"11634:3:20"},"nativeSrc":"11634:32:20","nodeType":"YulFunctionCall","src":"11634:32:20"}],"functionName":{"name":"mstore","nativeSrc":"11607:6:20","nodeType":"YulIdentifier","src":"11607:6:20"},"nativeSrc":"11607:60:20","nodeType":"YulFunctionCall","src":"11607:60:20"},"nativeSrc":"11607:60:20","nodeType":"YulExpressionStatement","src":"11607:60:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11687:9:20","nodeType":"YulIdentifier","src":"11687:9:20"},{"kind":"number","nativeSrc":"11698:2:20","nodeType":"YulLiteral","src":"11698:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11683:3:20","nodeType":"YulIdentifier","src":"11683:3:20"},"nativeSrc":"11683:18:20","nodeType":"YulFunctionCall","src":"11683:18:20"},{"name":"value2","nativeSrc":"11703:6:20","nodeType":"YulIdentifier","src":"11703:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11676:6:20","nodeType":"YulIdentifier","src":"11676:6:20"},"nativeSrc":"11676:34:20","nodeType":"YulFunctionCall","src":"11676:34:20"},"nativeSrc":"11676:34:20","nodeType":"YulExpressionStatement","src":"11676:34:20"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"11371:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11481:9:20","nodeType":"YulTypedName","src":"11481:9:20","type":""},{"name":"value2","nativeSrc":"11492:6:20","nodeType":"YulTypedName","src":"11492:6:20","type":""},{"name":"value1","nativeSrc":"11500:6:20","nodeType":"YulTypedName","src":"11500:6:20","type":""},{"name":"value0","nativeSrc":"11508:6:20","nodeType":"YulTypedName","src":"11508:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11519:4:20","nodeType":"YulTypedName","src":"11519:4:20","type":""}],"src":"11371:345:20"},{"body":{"nativeSrc":"11840:63:20","nodeType":"YulBlock","src":"11840:63:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11857:3:20","nodeType":"YulIdentifier","src":"11857:3:20"},{"name":"value0","nativeSrc":"11862:6:20","nodeType":"YulIdentifier","src":"11862:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11850:6:20","nodeType":"YulIdentifier","src":"11850:6:20"},"nativeSrc":"11850:19:20","nodeType":"YulFunctionCall","src":"11850:19:20"},"nativeSrc":"11850:19:20","nodeType":"YulExpressionStatement","src":"11850:19:20"},{"nativeSrc":"11878:19:20","nodeType":"YulAssignment","src":"11878:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"11889:3:20","nodeType":"YulIdentifier","src":"11889:3:20"},{"kind":"number","nativeSrc":"11894:2:20","nodeType":"YulLiteral","src":"11894:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11885:3:20","nodeType":"YulIdentifier","src":"11885:3:20"},"nativeSrc":"11885:12:20","nodeType":"YulFunctionCall","src":"11885:12:20"},"variableNames":[{"name":"end","nativeSrc":"11878:3:20","nodeType":"YulIdentifier","src":"11878:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"11721:182:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11816:3:20","nodeType":"YulTypedName","src":"11816:3:20","type":""},{"name":"value0","nativeSrc":"11821:6:20","nodeType":"YulTypedName","src":"11821:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11832:3:20","nodeType":"YulTypedName","src":"11832:3:20","type":""}],"src":"11721:182:20"},{"body":{"nativeSrc":"12089:217:20","nodeType":"YulBlock","src":"12089:217:20","statements":[{"nativeSrc":"12099:27:20","nodeType":"YulAssignment","src":"12099:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12111:9:20","nodeType":"YulIdentifier","src":"12111:9:20"},{"kind":"number","nativeSrc":"12122:3:20","nodeType":"YulLiteral","src":"12122:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12107:3:20","nodeType":"YulIdentifier","src":"12107:3:20"},"nativeSrc":"12107:19:20","nodeType":"YulFunctionCall","src":"12107:19:20"},"variableNames":[{"name":"tail","nativeSrc":"12099:4:20","nodeType":"YulIdentifier","src":"12099:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12142:9:20","nodeType":"YulIdentifier","src":"12142:9:20"},{"name":"value0","nativeSrc":"12153:6:20","nodeType":"YulIdentifier","src":"12153:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12135:6:20","nodeType":"YulIdentifier","src":"12135:6:20"},"nativeSrc":"12135:25:20","nodeType":"YulFunctionCall","src":"12135:25:20"},"nativeSrc":"12135:25:20","nodeType":"YulExpressionStatement","src":"12135:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12180:9:20","nodeType":"YulIdentifier","src":"12180:9:20"},{"kind":"number","nativeSrc":"12191:2:20","nodeType":"YulLiteral","src":"12191:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12176:3:20","nodeType":"YulIdentifier","src":"12176:3:20"},"nativeSrc":"12176:18:20","nodeType":"YulFunctionCall","src":"12176:18:20"},{"arguments":[{"name":"value1","nativeSrc":"12200:6:20","nodeType":"YulIdentifier","src":"12200:6:20"},{"kind":"number","nativeSrc":"12208:4:20","nodeType":"YulLiteral","src":"12208:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12196:3:20","nodeType":"YulIdentifier","src":"12196:3:20"},"nativeSrc":"12196:17:20","nodeType":"YulFunctionCall","src":"12196:17:20"}],"functionName":{"name":"mstore","nativeSrc":"12169:6:20","nodeType":"YulIdentifier","src":"12169:6:20"},"nativeSrc":"12169:45:20","nodeType":"YulFunctionCall","src":"12169:45:20"},"nativeSrc":"12169:45:20","nodeType":"YulExpressionStatement","src":"12169:45:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12234:9:20","nodeType":"YulIdentifier","src":"12234:9:20"},{"kind":"number","nativeSrc":"12245:2:20","nodeType":"YulLiteral","src":"12245:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12230:3:20","nodeType":"YulIdentifier","src":"12230:3:20"},"nativeSrc":"12230:18:20","nodeType":"YulFunctionCall","src":"12230:18:20"},{"name":"value2","nativeSrc":"12250:6:20","nodeType":"YulIdentifier","src":"12250:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12223:6:20","nodeType":"YulIdentifier","src":"12223:6:20"},"nativeSrc":"12223:34:20","nodeType":"YulFunctionCall","src":"12223:34:20"},"nativeSrc":"12223:34:20","nodeType":"YulExpressionStatement","src":"12223:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12277:9:20","nodeType":"YulIdentifier","src":"12277:9:20"},{"kind":"number","nativeSrc":"12288:2:20","nodeType":"YulLiteral","src":"12288:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12273:3:20","nodeType":"YulIdentifier","src":"12273:3:20"},"nativeSrc":"12273:18:20","nodeType":"YulFunctionCall","src":"12273:18:20"},{"name":"value3","nativeSrc":"12293:6:20","nodeType":"YulIdentifier","src":"12293:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12266:6:20","nodeType":"YulIdentifier","src":"12266:6:20"},"nativeSrc":"12266:34:20","nodeType":"YulFunctionCall","src":"12266:34:20"},"nativeSrc":"12266:34:20","nodeType":"YulExpressionStatement","src":"12266:34:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"11908:398:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12034:9:20","nodeType":"YulTypedName","src":"12034:9:20","type":""},{"name":"value3","nativeSrc":"12045:6:20","nodeType":"YulTypedName","src":"12045:6:20","type":""},{"name":"value2","nativeSrc":"12053:6:20","nodeType":"YulTypedName","src":"12053:6:20","type":""},{"name":"value1","nativeSrc":"12061:6:20","nodeType":"YulTypedName","src":"12061:6:20","type":""},{"name":"value0","nativeSrc":"12069:6:20","nodeType":"YulTypedName","src":"12069:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12080:4:20","nodeType":"YulTypedName","src":"12080:4:20","type":""}],"src":"11908:398:20"},{"body":{"nativeSrc":"12343:95:20","nodeType":"YulBlock","src":"12343:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12360:1:20","nodeType":"YulLiteral","src":"12360:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12367:3:20","nodeType":"YulLiteral","src":"12367:3:20","type":"","value":"224"},{"kind":"number","nativeSrc":"12372:10:20","nodeType":"YulLiteral","src":"12372:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12363:3:20","nodeType":"YulIdentifier","src":"12363:3:20"},"nativeSrc":"12363:20:20","nodeType":"YulFunctionCall","src":"12363:20:20"}],"functionName":{"name":"mstore","nativeSrc":"12353:6:20","nodeType":"YulIdentifier","src":"12353:6:20"},"nativeSrc":"12353:31:20","nodeType":"YulFunctionCall","src":"12353:31:20"},"nativeSrc":"12353:31:20","nodeType":"YulExpressionStatement","src":"12353:31:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12400:1:20","nodeType":"YulLiteral","src":"12400:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"12403:4:20","nodeType":"YulLiteral","src":"12403:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"12393:6:20","nodeType":"YulIdentifier","src":"12393:6:20"},"nativeSrc":"12393:15:20","nodeType":"YulFunctionCall","src":"12393:15:20"},"nativeSrc":"12393:15:20","nodeType":"YulExpressionStatement","src":"12393:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12424:1:20","nodeType":"YulLiteral","src":"12424:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"12427:4:20","nodeType":"YulLiteral","src":"12427:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12417:6:20","nodeType":"YulIdentifier","src":"12417:6:20"},"nativeSrc":"12417:15:20","nodeType":"YulFunctionCall","src":"12417:15:20"},"nativeSrc":"12417:15:20","nodeType":"YulExpressionStatement","src":"12417:15:20"}]},"name":"panic_error_0x21","nativeSrc":"12311:127:20","nodeType":"YulFunctionDefinition","src":"12311:127:20"},{"body":{"nativeSrc":"12656:276:20","nodeType":"YulBlock","src":"12656:276:20","statements":[{"nativeSrc":"12666:27:20","nodeType":"YulAssignment","src":"12666:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12678:9:20","nodeType":"YulIdentifier","src":"12678:9:20"},{"kind":"number","nativeSrc":"12689:3:20","nodeType":"YulLiteral","src":"12689:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12674:3:20","nodeType":"YulIdentifier","src":"12674:3:20"},"nativeSrc":"12674:19:20","nodeType":"YulFunctionCall","src":"12674:19:20"},"variableNames":[{"name":"tail","nativeSrc":"12666:4:20","nodeType":"YulIdentifier","src":"12666:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12709:9:20","nodeType":"YulIdentifier","src":"12709:9:20"},{"name":"value0","nativeSrc":"12720:6:20","nodeType":"YulIdentifier","src":"12720:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12702:6:20","nodeType":"YulIdentifier","src":"12702:6:20"},"nativeSrc":"12702:25:20","nodeType":"YulFunctionCall","src":"12702:25:20"},"nativeSrc":"12702:25:20","nodeType":"YulExpressionStatement","src":"12702:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12747:9:20","nodeType":"YulIdentifier","src":"12747:9:20"},{"kind":"number","nativeSrc":"12758:2:20","nodeType":"YulLiteral","src":"12758:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12743:3:20","nodeType":"YulIdentifier","src":"12743:3:20"},"nativeSrc":"12743:18:20","nodeType":"YulFunctionCall","src":"12743:18:20"},{"name":"value1","nativeSrc":"12763:6:20","nodeType":"YulIdentifier","src":"12763:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12736:6:20","nodeType":"YulIdentifier","src":"12736:6:20"},"nativeSrc":"12736:34:20","nodeType":"YulFunctionCall","src":"12736:34:20"},"nativeSrc":"12736:34:20","nodeType":"YulExpressionStatement","src":"12736:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12790:9:20","nodeType":"YulIdentifier","src":"12790:9:20"},{"kind":"number","nativeSrc":"12801:2:20","nodeType":"YulLiteral","src":"12801:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12786:3:20","nodeType":"YulIdentifier","src":"12786:3:20"},"nativeSrc":"12786:18:20","nodeType":"YulFunctionCall","src":"12786:18:20"},{"name":"value2","nativeSrc":"12806:6:20","nodeType":"YulIdentifier","src":"12806:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12779:6:20","nodeType":"YulIdentifier","src":"12779:6:20"},"nativeSrc":"12779:34:20","nodeType":"YulFunctionCall","src":"12779:34:20"},"nativeSrc":"12779:34:20","nodeType":"YulExpressionStatement","src":"12779:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12833:9:20","nodeType":"YulIdentifier","src":"12833:9:20"},{"kind":"number","nativeSrc":"12844:2:20","nodeType":"YulLiteral","src":"12844:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12829:3:20","nodeType":"YulIdentifier","src":"12829:3:20"},"nativeSrc":"12829:18:20","nodeType":"YulFunctionCall","src":"12829:18:20"},{"name":"value3","nativeSrc":"12849:6:20","nodeType":"YulIdentifier","src":"12849:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12822:6:20","nodeType":"YulIdentifier","src":"12822:6:20"},"nativeSrc":"12822:34:20","nodeType":"YulFunctionCall","src":"12822:34:20"},"nativeSrc":"12822:34:20","nodeType":"YulExpressionStatement","src":"12822:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12876:9:20","nodeType":"YulIdentifier","src":"12876:9:20"},{"kind":"number","nativeSrc":"12887:3:20","nodeType":"YulLiteral","src":"12887:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12872:3:20","nodeType":"YulIdentifier","src":"12872:3:20"},"nativeSrc":"12872:19:20","nodeType":"YulFunctionCall","src":"12872:19:20"},{"arguments":[{"name":"value4","nativeSrc":"12897:6:20","nodeType":"YulIdentifier","src":"12897:6:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12913:3:20","nodeType":"YulLiteral","src":"12913:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"12918:1:20","nodeType":"YulLiteral","src":"12918:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12909:3:20","nodeType":"YulIdentifier","src":"12909:3:20"},"nativeSrc":"12909:11:20","nodeType":"YulFunctionCall","src":"12909:11:20"},{"kind":"number","nativeSrc":"12922:1:20","nodeType":"YulLiteral","src":"12922:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12905:3:20","nodeType":"YulIdentifier","src":"12905:3:20"},"nativeSrc":"12905:19:20","nodeType":"YulFunctionCall","src":"12905:19:20"}],"functionName":{"name":"and","nativeSrc":"12893:3:20","nodeType":"YulIdentifier","src":"12893:3:20"},"nativeSrc":"12893:32:20","nodeType":"YulFunctionCall","src":"12893:32:20"}],"functionName":{"name":"mstore","nativeSrc":"12865:6:20","nodeType":"YulIdentifier","src":"12865:6:20"},"nativeSrc":"12865:61:20","nodeType":"YulFunctionCall","src":"12865:61:20"},"nativeSrc":"12865:61:20","nodeType":"YulExpressionStatement","src":"12865:61:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"12443:489:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12593:9:20","nodeType":"YulTypedName","src":"12593:9:20","type":""},{"name":"value4","nativeSrc":"12604:6:20","nodeType":"YulTypedName","src":"12604:6:20","type":""},{"name":"value3","nativeSrc":"12612:6:20","nodeType":"YulTypedName","src":"12612:6:20","type":""},{"name":"value2","nativeSrc":"12620:6:20","nodeType":"YulTypedName","src":"12620:6:20","type":""},{"name":"value1","nativeSrc":"12628:6:20","nodeType":"YulTypedName","src":"12628:6:20","type":""},{"name":"value0","nativeSrc":"12636:6:20","nodeType":"YulTypedName","src":"12636:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12647:4:20","nodeType":"YulTypedName","src":"12647:4:20","type":""}],"src":"12443:489:20"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _1 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_1, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 0x20)\n        let srcEnd := add(add(offset, _1), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_memory_ptrt_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 128))\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value7 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n        let value_5 := calldataload(add(headStart, 256))\n        if iszero(eq(value_5, and(value_5, 0xff))) { revert(0, 0) }\n        value8 := value_5\n        let value_6 := 0\n        value_6 := calldataload(add(headStart, 288))\n        value9 := value_6\n        let value_7 := 0\n        value_7 := calldataload(add(headStart, 320))\n        value10 := value_7\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3122":[{"length":32,"start":4557}],"3124":[{"length":32,"start":4515}],"3126":[{"length":32,"start":4473}],"3128":[{"length":32,"start":4638}],"3130":[{"length":32,"start":4678}],"3133":[{"length":32,"start":3313}],"3136":[{"length":32,"start":3363}],"8147":[{"length":32,"start":732},{"length":32,"start":4136}],"8149":[{"length":32,"start":1127},{"length":32,"start":2272}],"8151":[{"length":32,"start":955},{"length":32,"start":1738}]},"linkReferences":{},"object":"6080604052600436106101ba575f3560e01c80637e799858116100f257806395d89b4111610092578063d96f733511610062578063d96f73351461050e578063dd62ed3e1461052a578063f2fde38b1461056e578063f4d6f4981461058d575f5ffd5b806395d89b4114610489578063a9059cbb1461049d578063b9be6303146104bc578063c17c7aee146104ef575f5ffd5b806384b0196e116100cd57806384b0196e146103f557806388d9f5ea1461041c5780638da5cb5b146104395780638f62048714610456575f5ffd5b80637e79985814610376578063833b94991461038f5780638406c079146103aa575f5ffd5b80635f0a0d6b1161015d57806370a082311161013857806370a08231146102fe578063715018a61461033257806374244bc91461034657806375405d0d1461035b575f5ffd5b80635f0a0d6b14610299578063685e089b146102b85780636a443f67146102cb575f5ffd5b806318160ddd1161019857806318160ddd1461023657806323b872dd1461024a578063313ce567146102695780634ddc43b514610284575f5ffd5b806304a79c97146101be57806306fdde03146101e6578063095ea7b314610207575b5f5ffd5b3480156101c9575f5ffd5b506101d360085481565b6040519081526020015b60405180910390f35b3480156101f1575f5ffd5b506101fa6105a1565b6040516101dd9190611519565b348015610212575f5ffd5b50610226610221366004611546565b610631565b60405190151581526020016101dd565b348015610241575f5ffd5b506002546101d3565b348015610255575f5ffd5b5061022661026436600461156e565b61064a565b348015610274575f5ffd5b50604051601281526020016101dd565b610297610292366004611658565b61066d565b005b3480156102a4575f5ffd5b506101d36102b33660046116a4565b6106a9565b6102976102c63660046116bb565b6106bf565b3480156102d6575f5ffd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b348015610309575f5ffd5b506101d3610318366004611775565b6001600160a01b03165f9081526020819052604090205490565b34801561033d575f5ffd5b506102976107b7565b348015610351575f5ffd5b506101d361012c81565b348015610366575f5ffd5b506101d3674563918244f4000081565b348015610381575f5ffd5b506009546102269060ff1681565b34801561039a575f5ffd5b506101d367016345785d8a000081565b3480156103b5575f5ffd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101dd565b348015610400575f5ffd5b506104096107ca565b6040516101dd979695949392919061178e565b348015610427575f5ffd5b506101d3690a968163f0a57b40000181565b348015610444575f5ffd5b506005546001600160a01b03166103dd565b348015610461575f5ffd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b348015610494575f5ffd5b506101fa61080c565b3480156104a8575f5ffd5b506102266104b7366004611546565b61081b565b3480156104c7575f5ffd5b506101d37ffc9bf37d032f38f48a078c07741a8112c5d73160d7beafc368f9603eee9b911881565b3480156104fa575f5ffd5b506102266105093660046116a4565b610828565b348015610519575f5ffd5b506101d368056bc75e2d630fffff81565b348015610535575f5ffd5b506101d3610544366004611824565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610579575f5ffd5b50610297610588366004611775565b610859565b348015610598575f5ffd5b5061029761089b565b6060600380546105b090611855565b80601f01602080910402602001604051908101604052809291908181526020018280546105dc90611855565b80156106275780601f106105fe57610100808354040283529160200191610627565b820191905f5260205f20905b81548152906001019060200180831161060a57829003601f168201915b5050505050905090565b5f3361063e818585610967565b60019150505b92915050565b5f33610657858285610979565b6106628585856109f5565b506001949350505050565b61067a8333848585610a52565b60405133907f233e08777131763a85257b15eafc9f96ef08f259653d9944301ff924b3917cf5905f90a2505050565b600a81600281106106b8575f80fd5b0154905081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107085760405163538fb16360e01b815260040160405180910390fd5b61073a7ffc9bf37d032f38f48a078c07741a8112c5d73160d7beafc368f9603eee9b91188b8b8b8b8b8b8a8a8a610b7d565b6107588b8b8a610752674563918244f40000826118a1565b88610a52565b61076a33674563918244f40000610c34565b886001600160a01b03168a6001600160a01b03167fa18ccddbafa2abd18f548774a92a0c9f76df5771ea5a927074cf0dce0265e6d060405160405180910390a35050505050505050505050565b6107bf610c6c565b6107c85f610c99565b565b5f6060805f5f5f60606107db610cea565b6107e3610d1c565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546105b090611855565b5f3361063e8185856109f5565b5f5f5f61083484610d49565b9150915080600a836002811061084c5761084c6118b4565b0154161515949350505050565b610861610c6c565b6001600160a01b03811661088f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61089881610c99565b50565b6108a3610c6c565b60095460ff16156108c75760405163607023bf60e01b815260040160405180910390fd5b6009805460ff19166001179055600854801561093c57427f00000000000000000000000000000000000000000000000000000000000000001061091d576040516301c4065d60e21b815260040160405180910390fd5b5f60085561093c6109366005546001600160a01b031690565b82610c34565b6040517fd6891bd2534e5c59dc10743e5a7b2469cb5dcf61cfba85f70efddecb2b4553a2905f90a150565b6109748383836001610d9b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156109ef57818110156109e157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610886565b6109ef84848484035f610d9b565b50505050565b6001600160a01b038316610a1e57604051634b637e8f60e11b81525f6004820152602401610886565b6001600160a01b038216610a475760405163ec442f0560e01b81525f6004820152602401610886565b610974838383610e6d565b610a5b85610828565b15610a7957604051630799973160e31b815260040160405180910390fd5b610a8285610f93565b610a8e85858584610fc3565b610aab57604051632ba75b2560e01b815260040160405180910390fd5b826008546001610abb91906118c8565b11610ad95760405163d08480ed60e01b815260040160405180910390fd5b68056bc75e2d630fffff83118015610afa5750690a968163f0a57b40000183105b610b175760405163162908e360e11b815260040160405180910390fd5b5f610b246012600a6119be565b610b3667016345785d8a0000866119cc565b610b4091906119f7565b9050803414610b625760405163356680b760e01b815260040160405180910390fd5b600880548590039055610b758584610c34565b505050505050565b60408051602081018c90526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905260c0810186905260e081018590525f90610be3906101000160405160208183030381529060405280519060200120611057565b90505f610bf282868686611083565b90508a6001600160a01b0316816001600160a01b031614610c2657604051638baa579f60e01b815260040160405180910390fd5b505050505050505050505050565b6001600160a01b038216610c5d5760405163ec442f0560e01b81525f6004820152602401610886565b610c685f8383610e6d565b5050565b6005546001600160a01b031633146107c85760405163118cdaa760e01b8152336004820152602401610886565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6060610d177f000000000000000000000000000000000000000000000000000000000000000060066110af565b905090565b6060610d177f000000000000000000000000000000000000000000000000000000000000000060076110af565b5f5f61012c8310610d6d57604051634d175db160e01b815260040160405180910390fd5b60ff5f610d7a82866119f7565b90505f610d8a60ff841687611a0a565b9196600190921b9550909350505050565b6001600160a01b038416610dc45760405163e602df0560e01b81525f6004820152602401610886565b6001600160a01b038316610ded57604051634a1406b160e11b81525f6004820152602401610886565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156109ef57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5f91815260200190565b60405180910390a350505050565b6001600160a01b038316610e97578060025f828254610e8c91906118c8565b90915550610f079050565b6001600160a01b0383165f9081526020819052604090205481811015610ee95760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610886565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610f2357600280548290039055610f41565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f8691815260200190565b60405180910390a3505050565b5f5f610f9e83610d49565b9150915080600a8360028110610fb657610fb66118b4565b0180549091179055505050565b60408051602081018690526001600160a01b03851691810191909152606081018390525f90819060800160408051601f198184030181528282528051602091820120908301520160405160208183030381529060405280519060200120905061104d837f000000000000000000000000000000000000000000000000000000000000000083611158565b9695505050505050565b5f61064461106361116d565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f61109388888888611296565b9250925092506110a3828261135e565b50909695505050505050565b606060ff83146110c9576110c283611416565b9050610644565b8180546110d590611855565b80601f016020809104026020016040519081016040528092919081815260200182805461110190611855565b801561114c5780601f106111235761010080835404028352916020019161114c565b820191905f5260205f20905b81548152906001019060200180831161112f57829003601f168201915b50505050509050610644565b5f826111648584611453565b14949350505050565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111c557507f000000000000000000000000000000000000000000000000000000000000000046145b156111ef57507f000000000000000000000000000000000000000000000000000000000000000090565b610d17604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156112cf57505f91506003905082611354565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611320573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b03811661134b57505f925060019150829050611354565b92505f91508190505b9450945094915050565b5f82600381111561137157611371611a1d565b0361137a575050565b600182600381111561138e5761138e611a1d565b036113ac5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156113c0576113c0611a1d565b036113e15760405163fce698f760e01b815260048101829052602401610886565b60038260038111156113f5576113f5611a1d565b03610c68576040516335e2f38360e21b815260048101829052602401610886565b60605f61142283611495565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f81815b845181101561148d5761148382868381518110611476576114766118b4565b60200260200101516114bc565b9150600101611457565b509392505050565b5f60ff8216601f81111561064457604051632cd44ac360e21b815260040160405180910390fd5b5f8183106114d6575f8281526020849052604090206114e4565b5f8381526020839052604090205b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6114e460208301846114eb565b80356001600160a01b0381168114611541575f5ffd5b919050565b5f5f60408385031215611557575f5ffd5b6115608361152b565b946020939093013593505050565b5f5f5f60608486031215611580575f5ffd5b6115898461152b565b92506115976020850161152b565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126115cb575f5ffd5b813567ffffffffffffffff8111156115e5576115e56115a8565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611612576116126115a8565b60405291825260208185018101929081018684111561162f575f5ffd5b6020860192505b8383101561164e578235815260209283019201611636565b5095945050505050565b5f5f5f6060848603121561166a575f5ffd5b8335925060208401359150604084013567ffffffffffffffff81111561168e575f5ffd5b61169a868287016115bc565b9150509250925092565b5f602082840312156116b4575f5ffd5b5035919050565b5f5f5f5f5f5f5f5f5f5f5f6101608c8e0312156116d6575f5ffd5b8b359a506116e660208d0161152b565b99506116f460408d0161152b565b985060608c0135975060808c0135965060a08c0135955060c08c0135945060e08c013567ffffffffffffffff81111561172b575f5ffd5b6117378e828f016115bc565b9450506101008c013560ff8116811461174e575f5ffd5b9a9d999c50979a969995989497509295919493610120830135935061014090920135919050565b5f60208284031215611785575f5ffd5b6114e48261152b565b60ff60f81b8816815260e060208201525f6117ac60e08301896114eb565b82810360408401526117be81896114eb565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156118135783518352602093840193909201916001016117f5565b50909b9a5050505050505050505050565b5f5f60408385031215611835575f5ffd5b61183e8361152b565b915061184c6020840161152b565b90509250929050565b600181811c9082168061186957607f821691505b60208210810361188757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106445761064461188d565b634e487b7160e01b5f52603260045260245ffd5b808201808211156106445761064461188d565b6001815b6001841115611916578085048111156118fa576118fa61188d565b600184161561190857908102905b60019390931c9280026118df565b935093915050565b5f8261192c57506001610644565b8161193857505f610644565b816001811461194e576002811461195857611974565b6001915050610644565b60ff8411156119695761196961188d565b50506001821b610644565b5060208310610133831016604e8410600b8410161715611997575081810a610644565b6119a35f1984846118db565b805f19048211156119b6576119b661188d565b029392505050565b5f6114e460ff84168361191e565b80820281158282048414176106445761064461188d565b634e487b7160e01b5f52601260045260245ffd5b5f82611a0557611a056119e3565b500490565b5f82611a1857611a186119e3565b500690565b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220911043861ceda4bc3e96d1692a9dd31284aba277a0da9e03092d846d3222bc0064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E799858 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xD96F7335 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD96F7335 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xF4D6F498 EQ PUSH2 0x58D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xB9BE6303 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xC17C7AEE EQ PUSH2 0x4EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x88D9F5EA EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x8F620487 EQ PUSH2 0x456 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7E799858 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x833B9499 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8406C079 EQ PUSH2 0x3AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5F0A0D6B GT PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x74244BC9 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x75405D0D EQ PUSH2 0x35B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5F0A0D6B EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x685E089B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6A443F67 EQ PUSH2 0x2CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x4DDC43B5 EQ PUSH2 0x284 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x4A79C97 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x12C DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x226 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH10 0xA968163F0A57B400001 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x80C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH32 0xFC9BF37D032F38F48A078C07741A8112C5D73160D7BEAFC368F9603EEE9B9118 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH9 0x56BC75E2D630FFFFF DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x544 CALLDATASIZE PUSH1 0x4 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DC SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x627 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x627 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x63E DUP2 DUP6 DUP6 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x657 DUP6 DUP3 DUP6 PUSH2 0x979 JUMP JUMPDEST PUSH2 0x662 DUP6 DUP6 DUP6 PUSH2 0x9F5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x67A DUP4 CALLER DUP5 DUP6 DUP6 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x233E08777131763A85257B15EAFC9F96EF08F259653D9944301FF924B3917CF5 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x6B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH4 0x538FB163 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73A PUSH32 0xFC9BF37D032F38F48A078C07741A8112C5D73160D7BEAFC368F9603EEE9B9118 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP11 DUP11 DUP11 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x758 DUP12 DUP12 DUP11 PUSH2 0x752 PUSH8 0x4563918244F40000 DUP3 PUSH2 0x18A1 JUMP JUMPDEST DUP9 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x76A CALLER PUSH8 0x4563918244F40000 PUSH2 0xC34 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA18CCDDBAFA2ABD18F548774A92A0C9F76DF5771EA5A927074CF0DCE0265E6D0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x7C8 PUSH0 PUSH2 0xC99 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 PUSH0 PUSH0 PUSH1 0x60 PUSH2 0x7DB PUSH2 0xCEA JUMP JUMPDEST PUSH2 0x7E3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x1855 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x63E DUP2 DUP6 DUP6 PUSH2 0x9F5 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x834 DUP5 PUSH2 0xD49 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x18B4 JUMP JUMPDEST ADD SLOAD AND ISZERO ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x861 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x898 DUP2 PUSH2 0xC99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x607023BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x8 SLOAD DUP1 ISZERO PUSH2 0x93C JUMPI TIMESTAMP PUSH32 0x0 LT PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1C4065D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SSTORE PUSH2 0x93C PUSH2 0x936 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6891BD2534E5C59DC10743E5A7B2469CB5DCF61CFBA85F70EFDDECB2B4553A2 SWAP1 PUSH0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x974 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x9EF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x9EF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD9B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x974 DUP4 DUP4 DUP4 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xA5B DUP6 PUSH2 0x828 JUMP JUMPDEST ISZERO PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7999731 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA82 DUP6 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0xA8E DUP6 DUP6 DUP6 DUP5 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BA75B25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST GT PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD08480ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D630FFFFF DUP4 GT DUP1 ISZERO PUSH2 0xAFA JUMPI POP PUSH10 0xA968163F0A57B400001 DUP4 LT JUMPDEST PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB24 PUSH1 0x12 PUSH1 0xA PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xB36 PUSH8 0x16345785D8A0000 DUP7 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB75 DUP6 DUP5 PUSH2 0xC34 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xBE3 SWAP1 PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBF2 DUP3 DUP7 DUP7 DUP7 PUSH2 0x1083 JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0xC68 PUSH0 DUP4 DUP4 PUSH2 0xE6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD17 PUSH32 0x0 PUSH1 0x6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD17 PUSH32 0x0 PUSH1 0x7 PUSH2 0x10AF JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x12C DUP4 LT PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4D175DB1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH0 PUSH2 0xD7A DUP3 DUP7 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD8A PUSH1 0xFF DUP5 AND DUP8 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 SWAP7 PUSH1 0x1 SWAP1 SWAP3 SHL SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9EF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE5F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE97 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF07 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF23 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF86 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xF9E DUP4 PUSH2 0xD49 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 LT PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0x18B4 JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x104D DUP4 PUSH32 0x0 DUP4 PUSH2 0x1158 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x644 PUSH2 0x1063 PUSH2 0x116D JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1093 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x135E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x10C9 JUMPI PUSH2 0x10C2 DUP4 PUSH2 0x1416 JUMP JUMPDEST SWAP1 POP PUSH2 0x644 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x10D5 SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1101 SWAP1 PUSH2 0x1855 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x114C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1123 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x114C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x112F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x644 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1164 DUP6 DUP5 PUSH2 0x1453 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x11C5 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11EF JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD17 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x12CF JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1320 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x134B JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1354 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1371 PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0x137A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138E PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C0 JUMPI PUSH2 0x13C0 PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13F5 JUMPI PUSH2 0x13F5 PUSH2 0x1A1D JUMP JUMPDEST SUB PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x886 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1422 DUP4 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x148D JUMPI PUSH2 0x1483 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1476 JUMPI PUSH2 0x1476 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14BC JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1457 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x14D6 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x14E4 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x14E4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1541 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1557 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1560 DUP4 PUSH2 0x152B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1580 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1589 DUP5 PUSH2 0x152B JUMP JUMPDEST SWAP3 POP PUSH2 0x1597 PUSH1 0x20 DUP6 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E5 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1612 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0x162F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x164E JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1636 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x168E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x169A DUP7 DUP3 DUP8 ADD PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x16D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP12 CALLDATALOAD SWAP11 POP PUSH2 0x16E6 PUSH1 0x20 DUP14 ADD PUSH2 0x152B JUMP JUMPDEST SWAP10 POP PUSH2 0x16F4 PUSH1 0x40 DUP14 ADD PUSH2 0x152B JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD SWAP5 POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1737 DUP15 DUP3 DUP16 ADD PUSH2 0x15BC JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 DUP13 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x174E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP11 SWAP14 SWAP10 SWAP13 POP SWAP8 SWAP11 SWAP7 SWAP10 SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP2 SWAP5 SWAP4 PUSH2 0x120 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH2 0x140 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14E4 DUP3 PUSH2 0x152B JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x17AC PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x14EB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x17BE DUP2 DUP10 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1813 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17F5 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1835 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x183E DUP4 PUSH2 0x152B JUMP JUMPDEST SWAP2 POP PUSH2 0x184C PUSH1 0x20 DUP5 ADD PUSH2 0x152B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1869 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1887 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x188D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1916 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18FA PUSH2 0x188D JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1908 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x18DF JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x192C JUMPI POP PUSH1 0x1 PUSH2 0x644 JUMP JUMPDEST DUP2 PUSH2 0x1938 JUMPI POP PUSH0 PUSH2 0x644 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x194E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1958 JUMPI PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x644 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1969 PUSH2 0x188D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x644 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1997 JUMPI POP DUP2 DUP2 EXP PUSH2 0x644 JUMP JUMPDEST PUSH2 0x19A3 PUSH0 NOT DUP5 DUP5 PUSH2 0x18DB JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x19B6 JUMPI PUSH2 0x19B6 PUSH2 0x188D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E4 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x191E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x188D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1A05 JUMPI PUSH2 0x1A05 PUSH2 0x19E3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1A18 JUMPI PUSH2 0x1A18 PUSH2 0x19E3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 LT NUMBER DUP7 SHR 0xED LOG4 0xBC RETURNDATACOPY SWAP7 0xD1 PUSH10 0x2A9DD31284ABA277A0DA SWAP15 SUB MULMOD 0x2D DUP5 PUSH14 0x3222BC0064736F6C634300081C00 CALLER ","sourceMap":"496:7143:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:28;;;;;;;;;;;;;;;;;;;160:25:20;;;148:2;133:18;1836:28:19;;;;;;;;1760:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;;;;;-1:-1:-1;3979:186:3;;;;;:::i;:::-;;:::i;:::-;;;1363:14:20;;1356:22;1338:41;;1326:2;1311:18;3979:186:3;1198:187:20;2830:97:3;;;;;;;;;;-1:-1:-1;2908:12:3;;2830:97;;4757:244;;;;;;;;;;-1:-1:-1;4757:244:3;;;;;:::i;:::-;;:::i;2688:82::-;;;;;;;;;;-1:-1:-1;2688:82:3;;2761:2;1911:36:20;;1899:2;1884:18;2688:82:3;1769:184:20;5900:230:19;;;;;;:::i;:::-;;:::i;:::-;;1908:39;;;;;;;;;;-1:-1:-1;1908:39:19;;;;;:::i;:::-;;:::i;6138:847::-;;;;;;:::i;:::-;;:::i;1691:51::-;;;;;;;;;;;;;;;2985:116:3;;;;;;;;;;-1:-1:-1;2985:116:3;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;;;;;;;;;;;:::i;1634:48:19:-;;;;;;;;;;;;1679:3;1634:48;;1562:53;;;;;;;;;;;;1603:12;1562:53;;1871:28;;;;;;;;;;-1:-1:-1;1871:28:19;;;;;;;;1480:51;;;;;;;;;;;;1522:9;1480:51;;1795:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:32:20;;;5896:51;;5884:2;5869:18;1795:32:19;5750:203:20;5243:557:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1397:62:19:-;;;;;;;;;;;;1438:21;1397:62;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;1749:39:19;;;;;;;;;;;;;;;1962:93:3;;;;;;;;;;;;;:::i;3296:178::-;;;;;;;;;;-1:-1:-1;3296:178:3;;;;;:::i;:::-;;:::i;1092:218:19:-;;;;;;;;;;;;1155:155;1092:218;;5679:213;;;;;;;;;;-1:-1:-1;5679:213:19;;;;;:::i;:::-;;:::i;1317:59::-;;;;;;;;;;;;1358:18;1317:59;;3532:140:3;;;;;;;;;;-1:-1:-1;3532:140:3;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;6993:643:19:-;;;;;;;;;;;;;:::i;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:6;4106:31:3;735:10:6;4122:7:3;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:6;4900:37:3;4916:4;735:10:6;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;5900:230:19:-;6034:52;6044:6;6052:10;6064:6;6072;6080:5;6034:9;:52::i;:::-;6102:20;;6111:10;;6102:20;;;;;5900:230;;;:::o;1908:39::-;;;;;;;;;;;;;;;-1:-1:-1;1908:39:19;:::o;6138:847::-;2026:10;-1:-1:-1;;;;;2040:7:19;2026:21;;2018:51;;;;-1:-1:-1;;;2018:51:19;;;;;;;;;;;;6488:256:::1;1155:155;6563:10;6588:6;6609;6630:10;6655;6680:5;6700:1;6716;6732;6488:18;:256::i;:::-;6757:69;6767:6:::0;6775:10;6787:6;6795:23:::1;1603:12;6787:6:::0;6795:23:::1;:::i;:::-;6820:5;6757:9;:69::i;:::-;6878:33;6884:10;1603:12;6878:5;:33::i;:::-;6970:6;-1:-1:-1::0;;;;;6940:37:19::1;6958:10;-1:-1:-1::0;;;;;6940:37:19::1;;;;;;;;;;;6138:847:::0;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5243:557:12:-;5341:13;5368:18;5400:21;5435:15;5464:25;5503:12;5529:27;5632:13;:11;:13::i;:::-;5659:16;:14;:16::i;:::-;5767;;;5751:1;5767:16;;;;;;;;;-1:-1:-1;;;5581:212:12;;;-1:-1:-1;5581:212:12;;-1:-1:-1;5689:13:12;;-1:-1:-1;5724:4:12;;-1:-1:-1;5751:1:12;-1:-1:-1;5767:16:12;-1:-1:-1;5581:212:12;-1:-1:-1;5243:557:12:o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:6;3419:27:3;735:10:6;3436:2:3;3440:5;3419:9;:27::i;5679:213:19:-;5742:4;5760:13;5775:12;5791:31;5815:6;5791:23;:31::i;:::-;5759:63;;;;5874:4;5843:21;5865:5;5843:28;;;;;;;:::i;:::-;;;:35;5842:42;;;5679:213;-1:-1:-1;;;;5679:213:19:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;5896:51:20::0;5869:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;6993:643:19:-;1531:13:0;:11;:13::i;:::-;7063:16:19::1;::::0;::::1;;:25;7055:66;;;;-1:-1:-1::0;;;7055:66:19::1;;;;;;;;;;;;7132:16;:23:::0;;-1:-1:-1;;7132:23:19::1;7151:4;7132:23;::::0;;7363:13:::1;::::0;7391:20;;7387:201:::1;;7453:15;7436:14;:32;7428:67;;;;-1:-1:-1::0;;;7428:67:19::1;;;;;;;;;;;;7528:1;7512:13;:17:::0;7544:32:::1;7550:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;7550:7:19::1;7559:16;7544:5;:32::i;:::-;7605:23;::::0;::::1;::::0;;;::::1;7044:592;6993:643::o:0;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:3;;-1:-1:-1;;;;;8468:32:20;;10668:60:3;;;8450:51:20;8517:18;;;8510:34;;;8560:18;;;8553:34;;;8423:18;;10668:60:3;8248:345:20;10613:130:3;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;5896:51:20;5869:18;;5498:30:3;5750:203:20;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;5896:51:20;5869:18;;5591:32:3;5750:203:20;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;4595:1043:19:-;4813:24;4830:6;4813:16;:24::i;:::-;:33;4805:62;;;;-1:-1:-1;;;4805:62:19;;;;;;;;;;;;4878:26;4897:6;4878:18;:26::i;:::-;4939:64;4960:6;4968:9;4979:16;4997:5;4939:20;:64::i;:::-;4917:132;;;;-1:-1:-1;;;4917:132:19;;;;;;;;;;;;5104:16;5084:13;;5100:1;5084:17;;;;:::i;:::-;:36;5062:112;;;;-1:-1:-1;;;5062:112:19;;;;;;;;;;;;1358:18;5209:16;:33;:87;;;;;1438:21;5263:16;:33;5209:87;5187:150;;;;-1:-1:-1;;;5187:150:19;;;;;;;;;;;;5350:17;5422:16;2761:2:3;5422::19;:16;:::i;:::-;5371:34;1522:9;5371:16;:34;:::i;:::-;5370:68;;;;:::i;:::-;5350:88;;5470:9;5457;:22;5449:52;;;;-1:-1:-1;;;5449:52:19;;;;;;;;;;;;5539:13;:33;;;;;;;5596:34;5602:9;5613:16;5596:5;:34::i;:::-;4794:844;4595:1043;;;;;:::o;2819:784::-;3204:245;;;;;;10905:25:20;;;-1:-1:-1;;;;;10966:32:20;;;10946:18;;;10939:60;;;;11035:32;;;11015:18;;;11008:60;11084:18;;;11077:34;;;11127:19;;;11120:35;;;11171:19;;;11164:35;;;11215:19;;;11208:35;;;3128:14:19;;3145:330;;10877:19:20;;3204:245:19;;;;;;;;;;;;3176:288;;;;;;3145:16;:330::i;:::-;3128:347;;3488:14;3505:30;3519:6;3527:1;3530;3533;3505:13;:30::i;:::-;3488:47;;3564:10;-1:-1:-1;;;;;3554:20:19;:6;-1:-1:-1;;;;;3554:20:19;;3546:49;;;;-1:-1:-1;;;3546:49:19;;;;;;;;;;;;3117:486;;2819:784;;;;;;;;;;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;5896:51:20;5869:18;;7553:32:3;5750:203:20;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;5896:51:20;5869:18;;1901:40:0;5750:203:20;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6120:126:12:-;6166:13;6198:41;:5;6225:13;6198:26;:41::i;:::-;6191:48;;6120:126;:::o;6572:135::-;6621:13;6653:47;:8;6683:16;6653:29;:47::i;4006:389:19:-;4094:7;4103;1679:3;4131:6;:27;4123:63;;;;-1:-1:-1;;;4123:63:19;;;;;;;;;;;;4217:3;4199:15;4247:18;4217:3;4247:6;:18;:::i;:::-;4231:34;-1:-1:-1;4278:16:19;4297:18;;;;:6;:18;:::i;:::-;4375:5;;4341:1;:13;;;;-1:-1:-1;4006:389:19;;-1:-1:-1;;;;4006:389:19:o;9682:432:3:-;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:3;;9865:1;9836:32;;;5896:51:20;5869:18;;9836:32:3;5750:203:20;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:3;;9964:1;9936:31;;;5896:51:20;5869:18;;9936:31:3;5750:203:20;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;160:25:20;;148:2;133:18;;14:177;10066:31:3;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;8468:32:20;;6367:50:3;;;8450:51:20;8517:18;;;8510:34;;;8560:18;;;8553:34;;;8423:18;;6367:50:3;8248:345:20;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;160::20;;148:2;133:18;;14:177;7064:25:3;;;;;;;;5989:1107;;;:::o;4403:184:19:-;4468:13;4483:12;4499:31;4523:6;4499:23;:31::i;:::-;4467:63;;;;4575:4;4543:21;4565:5;4543:28;;;;;;;:::i;:::-;;:36;;;;;;;-1:-1:-1;;;4403:184:19:o;3611:387::-;3866:34;;;;;;11573:25:20;;;-1:-1:-1;;;;;11634:32:20;;11614:18;;;11607:60;;;;11683:18;;;11676:34;;;3787:4:19;;;;11546:18:20;;3866:34:19;;;-1:-1:-1;;3866:34:19;;;;;;;;;3856:45;;3866:34;3856:45;;;;3843:59;;;11850:19:20;11885:12;3843:59:19;;;;;;;;;;;;3819:94;;;;;;3804:109;;3931:59;3950:5;3957:26;3985:4;3931:18;:59::i;:::-;3924:66;3611:387;-1:-1:-1;;;;;;3611:387:19:o;5017:176:12:-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:15;4043:11;-1:-1:-1;;;4067:23:15;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:11;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:11;;6887:260;-1:-1:-1;;;;;;6887:260:11:o;3368:267:8:-;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:154:14;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;;1902:154;-1:-1:-1;;;;1902:154:14:o;3945:262:12:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:12;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:12;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;12702:25:20;4326:11:12;12743:18:20;;;12736:34;;;;4339:14:12;12786:18:20;;;12779:34;4355:13:12;12829:18:20;;;12822:34;4378:4:12;12872:19:20;;;12865:61;4268:7:12;;12674:19:20;;4304:80:12;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;5203:1551:11;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:11;;-1:-1:-1;6385:30:11;;-1:-1:-1;6417:1:11;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;12135:25:20;;;12208:4;12196:17;;12176:18;;;12169:45;;;;12230:18;;;12223:34;;;12273:18;;;12266:34;;;6541:24:11;;12107:19:20;;6541:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:11;;-1:-1:-1;;6541:24:11;;;-1:-1:-1;;;;;;;6579:20:11;;6575:113;;-1:-1:-1;6631:1:11;;-1:-1:-1;6635:29:11;;-1:-1:-1;6631:1:11;;-1:-1:-1;6615:62:11;;6575:113;6706:6;-1:-1:-1;6714:20:11;;-1:-1:-1;6714:20:11;;-1:-1:-1;5203:1551:11;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:11;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:11;;;;;160:25:20;;;133:18;;7634:46:11;14:177:20;7563:243:11;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:11;;;;;160:25:20;;;133:18;;7763:32:11;14:177:20;2078:378:8;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:8;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:8;;;-1:-1:-1;2408:4:8;2399:14;;2392:28;;;;-1:-1:-1;2363:16:8;2078:378::o;2457:308:14:-;2540:7;2582:4;2540:7;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;2668:27;:51::i;:::-;2653:66;-1:-1:-1;2634:3:14;;2596:134;;;-1:-1:-1;2746:12:14;2457:308;-1:-1:-1;;;2457:308:14:o;2528:245:8:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:8;;;;;;;;;;;504:167:13;579:7;609:1;605;:5;:59;;864:13;928:15;;;963:4;956:15;;;1009:4;993:21;;605:59;;;864:13;928:15;;;963:4;956:15;;;1009:4;993:21;;613:24;598:66;504:167;-1:-1:-1;;;504:167:13:o;196:289:20:-;238:3;276:5;270:12;303:6;298:3;291:19;359:6;352:4;345:5;341:16;334:4;329:3;325:14;319:47;411:1;404:4;395:6;390:3;386:16;382:27;375:38;474:4;467:2;463:7;458:2;450:6;446:15;442:29;437:3;433:39;429:50;422:57;;;196:289;;;;:::o;490:220::-;639:2;628:9;621:21;602:4;659:45;700:2;689:9;685:18;677:6;659:45;:::i;715:173::-;783:20;;-1:-1:-1;;;;;832:31:20;;822:42;;812:70;;878:1;875;868:12;812:70;715:173;;;:::o;893:300::-;961:6;969;1022:2;1010:9;1001:7;997:23;993:32;990:52;;;1038:1;1035;1028:12;990:52;1061:29;1080:9;1061:29;:::i;:::-;1051:39;1159:2;1144:18;;;;1131:32;;-1:-1:-1;;;893:300:20:o;1390:374::-;1467:6;1475;1483;1536:2;1524:9;1515:7;1511:23;1507:32;1504:52;;;1552:1;1549;1542:12;1504:52;1575:29;1594:9;1575:29;:::i;:::-;1565:39;;1623:38;1657:2;1646:9;1642:18;1623:38;:::i;:::-;1390:374;;1613:48;;-1:-1:-1;;;1730:2:20;1715:18;;;;1702:32;;1390:374::o;1958:127::-;2019:10;2014:3;2010:20;2007:1;2000:31;2050:4;2047:1;2040:15;2074:4;2071:1;2064:15;2090:954;2144:5;2197:3;2190:4;2182:6;2178:17;2174:27;2164:55;;2215:1;2212;2205:12;2164:55;2255:6;2242:20;2285:18;2277:6;2274:30;2271:56;;;2307:18;;:::i;:::-;2353:6;2350:1;2346:14;2389:2;2383:9;2452:2;2448:7;2443:2;2439;2435:11;2431:25;2423:6;2419:38;2523:6;2511:10;2508:22;2487:18;2475:10;2472:34;2469:62;2466:88;;;2534:18;;:::i;:::-;2570:2;2563:22;2620;;;2670:4;2702:15;;;2698:26;;;2620:22;2658:17;;2736:15;;;2733:35;;;2764:1;2761;2754:12;2733:35;2800:4;2792:6;2788:17;2777:28;;2814:200;2830:6;2825:3;2822:15;2814:200;;;2922:17;;2952:18;;2999:4;2847:14;;;;2990;2814:200;;;-1:-1:-1;3032:6:20;2090:954;-1:-1:-1;;;;;2090:954:20:o;3049:582::-;3151:6;3159;3167;3220:2;3208:9;3199:7;3195:23;3191:32;3188:52;;;3236:1;3233;3226:12;3188:52;3281:23;;;-1:-1:-1;3401:2:20;3386:18;;3373:32;;-1:-1:-1;3482:2:20;3467:18;;3454:32;3509:18;3498:30;;3495:50;;;3541:1;3538;3531:12;3495:50;3564:61;3617:7;3608:6;3597:9;3593:22;3564:61;:::i;:::-;3554:71;;;3049:582;;;;;:::o;3636:226::-;3695:6;3748:2;3736:9;3727:7;3723:23;3719:32;3716:52;;;3764:1;3761;3754:12;3716:52;-1:-1:-1;3809:23:20;;3636:226;-1:-1:-1;3636:226:20:o;3867:1505::-;4039:6;4047;4055;4063;4071;4079;4087;4095;4103;4111;4119:7;4173:3;4161:9;4152:7;4148:23;4144:33;4141:53;;;4190:1;4187;4180:12;4141:53;4235:23;;;-1:-1:-1;4301:38:20;4335:2;4320:18;;4301:38;:::i;:::-;4291:48;;4358:38;4392:2;4381:9;4377:18;4358:38;:::i;:::-;4348:48;-1:-1:-1;4469:2:20;4454:18;;4441:32;;-1:-1:-1;4572:3:20;4557:19;;4544:33;;-1:-1:-1;4676:3:20;4661:19;;4648:33;;-1:-1:-1;4780:3:20;4765:19;;4752:33;;-1:-1:-1;4862:3:20;4847:19;;4834:33;4890:18;4879:30;;4876:50;;;4922:1;4919;4912:12;4876:50;4945:61;4998:7;4989:6;4978:9;4974:22;4945:61;:::i;:::-;4935:71;;;5058:3;5047:9;5043:19;5030:33;5107:4;5098:7;5094:18;5085:7;5082:31;5072:59;;5127:1;5124;5117:12;5072:59;3867:1505;;;;-1:-1:-1;3867:1505:20;;;;;;;;-1:-1:-1;3867:1505:20;;;;5150:7;5230:3;5215:19;;5202:33;;-1:-1:-1;5334:3:20;5319:19;;;5306:33;;3867:1505;-1:-1:-1;3867:1505:20:o;5559:186::-;5618:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:52;;;5687:1;5684;5677:12;5639:52;5710:29;5729:9;5710:29;:::i;5958:1238::-;6364:3;6359;6355:13;6347:6;6343:26;6332:9;6325:45;6406:3;6401:2;6390:9;6386:18;6379:31;6306:4;6433:46;6474:3;6463:9;6459:19;6451:6;6433:46;:::i;:::-;6527:9;6519:6;6515:22;6510:2;6499:9;6495:18;6488:50;6561:33;6587:6;6579;6561:33;:::i;:::-;6625:2;6610:18;;6603:34;;;-1:-1:-1;;;;;6674:32:20;;6668:3;6653:19;;6646:61;6694:3;6723:19;;6716:35;;;6788:22;;;6782:3;6767:19;;6760:51;6860:13;;6882:22;;;6932:2;6958:15;;;;-1:-1:-1;6920:15:20;;;;-1:-1:-1;7001:169:20;7015:6;7012:1;7009:13;7001:169;;;7076:13;;7064:26;;7119:2;7145:15;;;;7110:12;;;;7037:1;7030:9;7001:169;;;-1:-1:-1;7187:3:20;;5958:1238;-1:-1:-1;;;;;;;;;;;5958:1238:20:o;7201:260::-;7269:6;7277;7330:2;7318:9;7309:7;7305:23;7301:32;7298:52;;;7346:1;7343;7336:12;7298:52;7369:29;7388:9;7369:29;:::i;:::-;7359:39;;7417:38;7451:2;7440:9;7436:18;7417:38;:::i;:::-;7407:48;;7201:260;;;;;:::o;7466:380::-;7545:1;7541:12;;;;7588;;;7609:61;;7663:4;7655:6;7651:17;7641:27;;7609:61;7716:2;7708:6;7705:14;7685:18;7682:38;7679:161;;7762:10;7757:3;7753:20;7750:1;7743:31;7797:4;7794:1;7787:15;7825:4;7822:1;7815:15;7679:161;;7466:380;;;:::o;7851:127::-;7912:10;7907:3;7903:20;7900:1;7893:31;7943:4;7940:1;7933:15;7967:4;7964:1;7957:15;7983:128;8050:9;;;8071:11;;;8068:37;;;8085:18;;:::i;8116:127::-;8177:10;8172:3;8168:20;8165:1;8158:31;8208:4;8205:1;8198:15;8232:4;8229:1;8222:15;8598:125;8663:9;;;8684:10;;;8681:36;;;8697:18;;:::i;8728:375::-;8816:1;8834:5;8848:249;8869:1;8859:8;8856:15;8848:249;;;8919:4;8914:3;8910:14;8904:4;8901:24;8898:50;;;8928:18;;:::i;:::-;8978:1;8968:8;8964:16;8961:49;;;8992:16;;;;8961:49;9075:1;9071:16;;;;;9031:15;;8848:249;;;8728:375;;;;;;:::o;9108:902::-;9157:5;9187:8;9177:80;;-1:-1:-1;9228:1:20;9242:5;;9177:80;9276:4;9266:76;;-1:-1:-1;9313:1:20;9327:5;;9266:76;9358:4;9376:1;9371:59;;;;9444:1;9439:174;;;;9351:262;;9371:59;9401:1;9392:10;;9415:5;;;9439:174;9476:3;9466:8;9463:17;9460:43;;;9483:18;;:::i;:::-;-1:-1:-1;;9539:1:20;9525:16;;9598:5;;9351:262;;9697:2;9687:8;9684:16;9678:3;9672:4;9669:13;9665:36;9659:2;9649:8;9646:16;9641:2;9635:4;9632:12;9628:35;9625:77;9622:203;;;-1:-1:-1;9734:19:20;;;9810:5;;9622:203;9857:42;-1:-1:-1;;9882:8:20;9876:4;9857:42;:::i;:::-;9935:6;9931:1;9927:6;9923:19;9914:7;9911:32;9908:58;;;9946:18;;:::i;:::-;9984:20;;9108:902;-1:-1:-1;;;9108:902:20:o;10015:140::-;10073:5;10102:47;10143:4;10133:8;10129:19;10123:4;10102:47;:::i;10160:168::-;10233:9;;;10264;;10281:15;;;10275:22;;10261:37;10251:71;;10302:18;;:::i;10333:127::-;10394:10;10389:3;10385:20;10382:1;10375:31;10425:4;10422:1;10415:15;10449:4;10446:1;10439:15;10465:120;10505:1;10531;10521:35;;10536:18;;:::i;:::-;-1:-1:-1;10570:9:20;;10465:120::o;11254:112::-;11286:1;11312;11302:35;;11317:18;;:::i;:::-;-1:-1:-1;11351:9:20;;11254:112::o;12311:127::-;12372:10;12367:3;12363:20;12360:1;12353:31;12403:4;12400:1;12393:15;12427:4;12424:1;12417:15"},"methodIdentifiers":{"DELEGATE_PURCHASE_TYPE_HASH()":"b9be6303","MAX_BUY_AMOUNT()":"88d9f5ea","MIN_BUY_AMOUNT()":"d96f7335","PRICE_PER_TOKEN()":"833b9499","RELAYER_REWARD()":"75405d0d","TOTAL_PARTICIPANTS()":"74244bc9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","delegatePurchase(uint256,address,address,uint256,uint256,uint256,bytes32,bytes32[],uint8,bytes32,bytes32)":"685e089b","eip712Domain()":"84b0196e","expirationDate()":"8f620487","finalizeFundingRound()":"f4d6f498","fundingAmount()":"04a79c97","hasBeenFinalized()":"7e799858","hasClaimedTokens(uint256)":"c17c7aee","name()":"06fdde03","owner()":"8da5cb5b","purchase(uint256,uint256,bytes32[])":"4ddc43b5","relayer()":"8406c079","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","whitelistClaimTracker(uint256)":"5f0a0d6b","whitelisteParticipantsHash()":"6a443f67"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_whitelistHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_expirationDate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundingRoundAlreadyFinilized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundingRoundNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HasClaimedTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFundingBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParticipantIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayerOnlyAccess\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotWhitelisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"DelegatedPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FundingRoundFinilized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATE_PURCHASE_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BUY_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BUY_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PER_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYER_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_PARTICIPANTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegatePurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeFundingRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasBeenFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userID\",\"type\":\"uint256\"}],\"name\":\"hasClaimedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistClaimTracker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelisteParticipantsHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L9-Excercise/AIAgentShareToken.sol\":\"AIAgentShare\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/L9-Excercise/AIAgentShareToken.sol\":{\"keccak256\":\"0xd28c114fc739ac5bf7a02fdbe827cc61d68ff0e5e8aae630573542b5b6ce96b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://600522619db8be94e330d3cd00ab8ea4f6ac53aea0fa2bc1d351cc7503077549\",\"dweb:/ipfs/Qmb5gmdURojqwzmYcW639mQBL2RhaV9ztrvmq1cSgWVjEY\"]}},\"version\":1}"}}}}}