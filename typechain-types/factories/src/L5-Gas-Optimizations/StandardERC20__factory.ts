/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StandardERC20,
  StandardERC20Interface,
} from "../../../src/L5-Gas-Optimizations/StandardERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051610acc380380610acc83398101604081905261002e91610144565b5f610039858261024b565b506001610046848261024b565b506002805460ff191660ff84161790556003819055335f818152600460209081526040808320859055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050610305565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126100ca575f5ffd5b81516001600160401b038111156100e3576100e36100a7565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610111576101116100a7565b604052818152838201602001851015610128575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610157575f5ffd5b84516001600160401b0381111561016c575f5ffd5b610178878288016100bb565b602087015190955090506001600160401b03811115610195575f5ffd5b6101a1878288016100bb565b935050604085015160ff811681146101b7575f5ffd5b6060959095015193969295505050565b600181811c908216806101db57607f821691505b6020821081036101f957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561024657805f5260205f20601f840160051c810160208510156102245750805b601f840160051c820191505b81811015610243575f8155600101610230565b50505b505050565b81516001600160401b03811115610264576102646100a7565b6102788161027284546101c7565b846101ff565b6020601f8211600181146102aa575f83156102935750848201515b5f19600385901b1c1916600184901b178455610243565b5f84815260208120601f198516915b828110156102d957878501518255602094850194600190920191016102b9565b50848210156102f657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6107ba806103125f395ff3fe608060405234801561000f575f5ffd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100ff57806370a082311461011e57806395d89b411461013d578063a9059cbb14610145578063dd62ed3e14610158575f5ffd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100ec575b5f5ffd5b61009c610182565b6040516100a9919061060f565b60405180910390f35b6100c56100c036600461065f565b61020d565b60405190151581526020016100a9565b6100de60035481565b6040519081526020016100a9565b6100c56100fa366004610687565b6102ce565b60025461010c9060ff1681565b60405160ff90911681526020016100a9565b6100de61012c3660046106c1565b60046020525f908152604090205481565b61009c6104d0565b6100c561015336600461065f565b6104dd565b6100de6101663660046106e1565b600560209081525f928352604080842090915290825290205481565b5f805461018e90610712565b80601f01602080910402602001604051908101604052809291908181526020018280546101ba90610712565b80156102055780601f106101dc57610100808354040283529160200191610205565b820191905f5260205f20905b8154815290600101906020018083116101e857829003601f168201915b505050505081565b5f6001600160a01b0383166102695760405162461bcd60e51b815260206004820152601760248201527f417070726f766520746f207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b335f8181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b6001600160a01b0383165f9081526004602052604081205482111561032c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610260565b6001600160a01b0384165f9081526005602090815260408083203384529091529020548211156103975760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610260565b6001600160a01b0383166103e85760405162461bcd60e51b81526020600482015260186024820152775472616e7366657220746f207a65726f206164647265737360401b6044820152606401610260565b6001600160a01b0384165f908152600460205260408120805484929061040f90849061075e565b90915550506001600160a01b0383165f908152600460205260408120805484929061043b908490610771565b90915550506001600160a01b0384165f9081526005602090815260408083203384529091528120805484929061047290849061075e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104be91815260200190565b60405180910390a35060019392505050565b6001805461018e90610712565b335f908152600460205260408120548211156105325760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610260565b6001600160a01b0383166105835760405162461bcd60e51b81526020600482015260186024820152775472616e7366657220746f207a65726f206164647265737360401b6044820152606401610260565b335f90815260046020526040812080548492906105a190849061075e565b90915550506001600160a01b0383165f90815260046020526040812080548492906105cd908490610771565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102bc565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461065a575f5ffd5b919050565b5f5f60408385031215610670575f5ffd5b61067983610644565b946020939093013593505050565b5f5f5f60608486031215610699575f5ffd5b6106a284610644565b92506106b060208501610644565b929592945050506040919091013590565b5f602082840312156106d1575f5ffd5b6106da82610644565b9392505050565b5f5f604083850312156106f2575f5ffd5b6106fb83610644565b915061070960208401610644565b90509250929050565b600181811c9082168061072657607f821691505b60208210810361074457634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102c8576102c861074a565b808201808211156102c8576102c861074a56fea26469706673582212206b17ba8f312a4a15c9e3909a45e02e56f4e7380cc306cd9a7d3a7ce977b239e764736f6c634300081c0033";

type StandardERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StandardERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StandardERC20__factory extends ContractFactory {
  constructor(...args: StandardERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    ) as Promise<
      StandardERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StandardERC20__factory {
    return super.connect(runner) as StandardERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardERC20Interface {
    return new Interface(_abi) as StandardERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StandardERC20 {
    return new Contract(address, _abi, runner) as unknown as StandardERC20;
  }
}
